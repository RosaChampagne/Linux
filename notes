empty requestListJSON ? '[]' : 




$('.request-list-table-wrapper').empty();
        $('.request-list-table-wrapper').append('<div class="alert alert-info">Please choose filter first.</div>');
        requestListListener();
        
        
        
        Task HSF3-7891 #comment update program request page initial rending
        
        git commit -m "Task HSF3-7891 #comment update program request page initial rending"
        
        http://hsf.hsf3-dev.net/sign-in
test@hsf3-dev.net/test


hsf_program_actionprocessor                   | table | postgres
 public | hsf_program_programrequest                    | table | postgres
 public | hsf_program_programstagehistory               | table | postgres
 public | hsf_program_programstagestatus                | table | postgres
 public | hsf_program_programstatus
 
 
 
 William Aiden Cynthia Jorge  You can find training file in
\\172.20.2.9\project\HSF\docs\BusinessTraining 

Homework: sign up as an applicant and complete some stages, get familar with applicant apply process.

I will check at today or tomorrow morning in your local environment. 
 
 
 
 
 
 
 
 
 
 
 
 {lastName=Zhu, selected=false, programId=56716, dropped=false, status=done, userId=192204, 
 applyTime=2019-04-08 08:05:40.002, emailAddress=cynthiazhu@augmentum.com.cn, waitlisted=true, firstName=Cynthia}
 
 {lastName=Zhu, selected=false, programId=56716, stageName=Application, dropped=false, status=done, userId=192204, 
 applyTime=04/08/2019 01:05:40 AM, emailAddress=cynthiazhu@augmentum.com.cn, waitlisted=true, firstName=Cynthia,
  programName=The HSF Scholarship}
  
  
  select
              users.userid as userId,
              users.firstname as firstName,
              users.lastname as lastName,
              users.emailaddress as emailAddress,
              r.createdtime as applyTime,
              r.currentstageid as stageid,
              r.programid as programId,
              r.pkid as pkid
            from hsf_program_programrequest r
            inner join user_ users on users.userid = r.userid;
  
  select
              users.userid as userId,
              users.firstname as firstName,
              users.lastname as lastName,
              users.emailaddress as emailAddress,
              min(h.createtime) as applyTime,
              r.currentstageid as stageid,
              r.programid as programId
            from hsf_program_programrequest r
            inner join user_ users on users.userid = r.userid
            inner join hsf_program_programstagehistory h on r.userid = h.userid and r.pkid = h.programrequestid and stageid = 4
            group by h.programrequestid, users.userid, r.currentstageid, r.programid;
            
            
            
select
              users.userid as userId,
              users.firstname as firstName,
              users.lastname as lastName,
              users.emailaddress as emailAddress,
              min(h.createtime) as applyTime,
              r.programid as programId,
              temp.status as status,
              temp.selected as selected,
              temp.waitlisted as waitlisted,
              temp.dropped as dropped
            from hsf_program_programrequest r
            inner join (
                select pkid,
                cast((xpath(?, xmlparse(document request.stagedata)))[1] as text) as status,
                cast(coalesce((xpath(?, xmlparse(document request.stagedata)))[1], 'false') as text) as selected,
                cast(coalesce((xpath(?, xmlparse(document request.stagedata)))[1], 'false') as text) as waitlisted,
                cast(coalesce((xpath(?, xmlparse(document request.stagedata)))[1], 'false') as text) as dropped
                from hsf_program_programrequest request
                where length(request.stageData) > 0
            ) temp on temp.pkid = r.pkid
            inner join user_ users on users.userid = r.userid
            inner join hsf_program_programstagehistory h on r.userid = h.userid and r.pkid = h.programrequestid and stageid = ?
            where length(r.stageData) > 0 and length(trim(temp.status)) > 0 and (r.programid = ?) and (temp.status = ?) and ((lower( ? || cast(users.userid as varchar)) LIKE ? [$AND_OR_NULL_CHECK$])
                    or (lower(users.comments) LIKE ? [$AND_OR_NULL_CHECK$])) [$AND_OR_CONNECTOR$] ((lower(users.firstname) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$] (lower(users.lastname) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$] (lower(users.emailaddress) LIKE ? [$AND_OR_NULL_CHECK$]))
            group by h.programrequestid, users.userid, r.currentstageid, r.programid, temp.status, temp.selected, temp.waitlisted, temp.dropped
            
            
            
            
            
            
            
            
            
            
            
            
            
DDLRecord programRecord

{uuid=5cc5e06d-d370-41e2-9bfe-665b61c9e869, recordId=56716, groupId=20182, companyId=20155, userId=20199,
 userName=Test Test, versionUserId=20199, versionUserName=Test Test, createDate=2017-03-07 16:46:42.672, 
 modifiedDate=2019-04-12 08:29:36.874, DDMStorageId=192201, recordSetId=41152, version=1.83, displayIndex=0}
 
 
 ProgramStatus programStatus
 
 {pkId=1, programId=56716, active=true, hidden=false, scholarsOnly=false, createdBy=0, createdTime=null, 
 lastModifiedBy=20199, lastModifiedTime=2017-10-17 00:42:24.0}
 
 
 
 
 
 
 
 
 
 
 
 /hsf-plugins-shared-ext-ext-impl/src/main/resources/com/liferay/portlet/dynamicdatamapping/dependencies/ddm/time.ftl
 

if (endTimeTree != null) {
                    String endTimeString = (String) endTimeTree.getValue(locale);
                    try {
                        JSONObject endTimeJsonObject = JSONFactoryUtil.createJSONObject(endTimeString);
                        String timeZoneString = endTimeJsonObject.getString(Constants.TIME_TIMEZONE);
                        TimeZone timeZone = TimeZoneUtil.getTimeZone(timeZoneString);
                        boolean inDaylightTime = timeZone.inDaylightTime(new Date());
                        String timeZoneDisplayName = timeZone.getDisplayName(inDaylightTime, Constants.TIME_ZONE_DISPLAY_SHORT_STYLE, locale);
                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                        sdf.setTimeZone(timeZone);

                        Long timeValue = endTimeJsonObject.getLong(Constants.TIME_TIME);
                        Date date = new Date(timeValue);
                        sdf.format(date);

                        System.out.println(date);
                        stage.setEndDate(date);
                    } catch (JSONException e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                }

 
{"Time_Timezone":"America/Los_Angeles","Time_Time":"1588210680000"}
stage.getEndDate()
stage.getStartDate()
stage.setStartDate
stage.setEndDate

Application     UTC+8 China Standard Time      {"Time_Timezone":"Pacific/Kiritimati","Time_Time":"1588289400000"}
Phase 2 Application     UTC-7 Pacific Daylight Time      {"Time_Timezone":"America/Los_Angeles","Time_Time":"1588217820000"}


{"Time_Timezone":"Asia/Shanghai","Time_Time":"1554161400000"}
Mon Apr 01 23:30:00 GMT 2019
2019-04-02 07:30:00

{"Time_Timezone":"Pacific/Kiritimati","Time_Time":"1588289400000"}
Thu Apr 30 23:30:00 GMT 2020
2020-05-01 13:30:00

{"Time_Timezone":"America/Los_Angeles","Time_Time":"1588217820000"}
Thu Apr 30 03:37:00 GMT 2020
2020-04-29 20:37:00

{"Time_Timezone":"Pacific/Kiritimati","Time_Time":"1588289400000"}
Thu Apr 30 23:30:00 2020  UTC+14

2020-05-01 13:30:00


Cynthia Program  1 year, 13 days
The HSF Scholarship  1 year, 2 months, 12 days
Test Program  6 months, 14 days


Mon Apr 01 23:30:00 GMT 2019
Mon Apr 01 15:30:00 GMT 2019

Thu Apr 30 23:30:00 GMT 2020
Thu Apr 30 09:30:00 GMT 2020

Mon Apr 01 03:37:00 GMT 2019
Mon Apr 01 10:37:00 GMT 2019

Thu Apr 30 03:37:00 GMT 2020
Thu Apr 30 10:37:00 GMT 2020

Thu Apr 18 07:00:00 GMT 2019
Fri Apr 19 22:30:00 GMT 2019

java.util.GregorianCalendar[time=1555578000000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,
zone=sun.util.calendar.ZoneInfo[id="PST8PDT",offset=-28800000,dstSavings=3600000,useDaylight=true,
transitions=149,lastRule=java.util.SimpleTimeZone[id=PST8PDT,offset=-28800000,dstSavings=3600000,
useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,
startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],
firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2019,MONTH=3,WEEK_OF_YEAR=16,WEEK_OF_MONTH=3,
DAY_OF_MONTH=18,DAY_OF_YEAR=108,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=0,HOUR=2,HOUR_OF_DAY=2,
MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-28800000,DST_OFFSET=3600000]

java.util.GregorianCalendar[time=1555579020000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,
zone=sun.util.calendar.ZoneInfo[id="PST8PDT",offset=-28800000,dstSavings=3600000,useDaylight=true,
transitions=149,lastRule=java.util.SimpleTimeZone[id=PST8PDT,offset=-28800000,dstSavings=3600000,
useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,
startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],
firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2019,MONTH=3,WEEK_OF_YEAR=16,WEEK_OF_MONTH=3,
DAY_OF_MONTH=18,DAY_OF_YEAR=108,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=3,AM_PM=0,HOUR=2,HOUR_OF_DAY=2,
MINUTE=17,SECOND=0,MILLISECOND=0,ZONE_OFFSET=-28800000,DST_OFFSET=3600000]


Mon Apr 01 06:00:00 GMT 2019
Sun Mar 31 16:00:00 GMT 2019
Sun Mar 31 16:00:00 GMT 2019


Mon Apr 01 06:00:00 GMT 2019
Sun Mar 31 16:00:00 GMT 2019
Mon Apr 01 13:00:00 GMT 2019

Mon Apr 01 06:00:00 GMT 2019
Sun Mar 31 16:00:00 GMT 2019
Mon Apr 01 13:00:00 GMT 2019


Sun Mar 31 08:00:00 GMT 2019
Fri Apr 19 06:30:00 GMT 2019
Mon Apr 01 11:43:00 GMT 2019
Tue Apr 30 11:43:00 GMT 2019
Mon Apr 01 23:30:00 GMT 2019
Thu Apr 30 16:30:00 GMT 2020

[ApplicantStageStatus [stage=net.hsf3.model.Stage@411af16f, programId=194901, applicantUserId=190716, 
isStageApplicableToApplicant=false, isStageCompleted=false, isStageStartedToApplicant=false, 
isTimeStageAppliable=false, isAllowedToGoToCurrentStage=true, isStageStartTimeReach=true, remainingYear=0,
 remainingMonth=0, remainingDay=0, remainingDays=0, progress=0%]]
 
 
 SELECT distinct user_.userid as userId FROM user_ INNER JOIN users_roles ON user_.userid = users_roles.userid
   AND user_.status = 0 INNER JOIN role_ ON users_roles.roleid = role_.roleid AND role_.name in ('Volunteer')
   
   where not exists
 
 (SELECT distinct user_.userid as userId, user_.firstname as firstName, user_.lastname as lastName,
  user_.emailaddress as emailAddress FROM user_ INNER JOIN users_roles ON user_.userid = users_roles.userid
   AND user_.status = 0 INNER JOIN role_ ON users_roles.roleid = role_.roleid AND role_.name in ('Volunteer')
   
    inner join (SELECT userid FROM 
    (
    (SELECT userid from hsf_mentee_menteeinvitation menteeinvitation 
    INNER JOIN hsf_mentee_menteeassignedprogram menteeassignedprogram ON menteeassignedprogram.invitationid
     = menteeinvitation.pkid And menteeassignedprogram.isassigned = true)
      UNION 
     (SELECT userid from hsf_mentor_mentorinvitation mentorinvitation INNER JOIN 
     hsf_mentor_matchmentee matchmentee ON matchmentee.mentorinvitationid = mentorinvitation.pkid and 
     matchmentee.deleted = false INNER JOIN hsf_mentee_menteeassignedprogram ON 
     hsf_mentee_menteeassignedprogram.pkid = matchmentee.menteeassignedid)
     ) 
     as result) as finalResult ON 
     finalResult.userid = user_.userid 
     
     WHERE user_.userid <> 20199 AND user_.defaultuser = false  
     ORDER BY user_.firstname ASC, user_.lastname ASC);
     
     
java.util.GregorianCalendar[time=1555655400000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="GMT",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,
minimalDaysInFirstWeek=1,ERA=1,YEAR=2019,MONTH=3,WEEK_OF_YEAR=16,WEEK_OF_MONTH=3,DAY_OF_MONTH=19,DAY_OF_YEAR=109,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=3,AM_PM=0,
HOUR=6,HOUR_OF_DAY=6,MINUTE=30,SECOND=0,MILLISECOND=0,ZONE_OFFSET=0,DST_OFFSET=0]
1555655400000

java.util.GregorianCalendar[time=1555657200000,areFieldsSet=true,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id="PST8PDT",offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=149,
lastRule=java.util.SimpleTimeZone[id=PST8PDT,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,
startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=2019,MONTH=3,WEEK_OF_YEAR=?,WEEK_OF_MONTH=?,
DAY_OF_MONTH=19,DAY_OF_YEAR=?,DAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=?,HOUR=?,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=?,ZONE_OFFSET=?,DST_OFFSET=?]
1555657200000


Mon Apr 01 06:00:00 GMT 2019
-7
-7
Mon Apr 01 06:00:00 GMT 2019

<stages>
    <stage stageId="4" waitlisted="true" selected="true" status ="done" completeTime="2018-05-29 01:45:26" 
        acceptTerms="true">
        <forms>
            <form name="Questionnaire_My_Counselor" structureId="83009" recordId="84502"/>
            </forms>
        <tables/>
    </stage>
    <stage stageId="16" status="done" completeTime="2017-09-01 03:21:14" acceptTerms="true" waitlisted="true" 
        selected="true">
        <forms>
            <form name="Confirm_Counselor" structureId="83016" recordId="85902"/>
        </forms>
        <tables/>
    </stage>
</stages>


 public | hsf_profile_admindocumentbankpendingdrop      | table | postgres
 public | hsf_profile_admindocumentbankverification     | table | postgres

 public | hsf_profile_admindocumentbank                 | table | postgres
 public | hsf_profile_admindocumentbankhistory          | table | postgres
 public | hsf_profile_documentbank                      | table | postgres
 public | hsf_profile_documentbankhistory   
 
 


Current logic:
    If user applied a program, the "In Progress" label will show. although this program request completed or program is inactive, the "In Progress" label also show.
Solution:
    1. Program is active:
        (1) User applied to this program:
            (A) Program has one stage,
                (a) Stage not start, the "In Progress" label don't show.
                (b) Stage running, the "In Progress" label show.
                (c) Stage done, the "In Progress" label don't show.
            (B) Program has more than one stage:
                (a) Current stage not start, the "In Progress" label don't show.
                (b) Current stage running, the "In Progress" label show.
                (c) Current stage done, if has next stage, the "In Progress" label show. If has no next stage, the "In Progress" label don't show.
        (2) User didn't apply to this program, the "In Progress" label don't show.
    2. Program is inactive, the "In Progress" label don't show.
    
    Judge whether the program is active. 
      (1) When program is active, judge whether user has program request:
        (A) When user has program request, judge whether current stage is active:
          (a) When current stage not start,  no label is displayed and "Apply for xxxStage" button is displayed.
        (b) When current stage is running, the "In Progress" label is displayed and "Continue to xxxStage" button is displayed.
           (c) When current stage is done, judge whether has next stage:
            i. When has no next stage, no label is displayed and "Go to dashboard" button is displayed.
           ii. When has next stage, judge whether next stage is active. when next stage is active, the "In Progress" label is displayed and "Apply for xxxStage" button is displayed. when next stage is inactive, no label is displayed and "Apply for xxxStage" button is displayed.
        (B) When user has no program request, no label is displayed and "Apply for program" button is displayed.
      (2) When program is inactive, no label is displayed and "Go to dashboard" button is displayed.
      
      
      
      
<stages>
<stage stageId="4" status="done" completeTime="2019-04-27 0
7:56:41" acceptTerms="true" waitlisted="true" selected="true"><forms><form name="Application_Profile_Page1" structureId="41073" recordId="197801"/><fo
rm name="Application_Profile_Page2" structureId="41059" recordId="197806"/><form name="Application_My_Education" structureId="77802" recordId="197811"
/><form name="Application_Education_Questions" structureId="41068" recordId="197816"/><form name="School_History" structureId="41035" recordId="197909
"/><form name="Application_Career_Interests_Page1" structureId="41053" recordId="197914"/><form name="Application_Career_Interests_Page2" structureId=
"41049" recordId="197919"/><form name="Family_Information" structureId="41070" recordId="198001"/><form name="Application_Family_Page1" structureId="4
1061" recordId="198006"/><form name="Application_Family_Page2" structureId="41060" recordId="198011"/><form name="Application_Finances" structureId="4
1098" recordId="198016"/><form name="Application_Details_Page1" structureId="41029" recordId="213901"/><form name="Application_Details_Page2" structur
eId="41028" recordId="213906"/><form name="Application_Essay_Prompot" structureId="41062" recordId="213911"/></forms><tables/></stage>
<stage stageId="
8" status="done" completeTime="2019-04-28 02:15:55" acceptTerms="true"><forms><form name="Scholarship2017-2018_Finalist_DocUploads_PersonalInfo_DD" st
ructureId="100707" recordId="214001"/></forms><tables/></stage>
<stage stageId="19" status="running" completeTime="" acceptTerms=""><forms><form name="
Basic_Information" structureId="41058" recordId="214006"/></forms><tables/></stage>
<stage stageId="17" status="running" completeTime="" acceptTerms=""
><forms><form name="Scholarship2017-2018_Finalist_DocUploads_PersonalInfo_DD" structureId="100707" recordId="214032"/></forms><tables/></stage></stage
s>



http://127.0.0.1:8080/web/guest/application?p_p_id=applicantfillform_WAR_hsfpluginssharedportlet&p_p_lifecycle=2&p_p_state=normal&p_p_mode=view&p_p_resource_id=save&p_p_cacheability=cacheLevelPage&p_p_col_id=column-1&p_p_col_count=1

school


public void createProgramRequest(long programId, long userId) throws SystemException, DocumentException {
        Date currentTime = new Date();
        ProgramRequest programRequest = ProgramRequestLocalServiceUtil.createProgramRequest(CounterLocalServiceUtil.increment());
        programRequest.setProgramId(programId);
        programRequest.setUserId(userId);
        programRequest.setRequestStatus(Constants.PROGRAM_REQUEST_STATUS_NOTSTART);
        programRequest.setCreatedBy(userId);
        programRequest.setCreatedTime(currentTime);

        ProgramRequestLocalServiceUtil.updateProgramRequest(programRequest);
    }
    
    
    
select 
    invitation.userId, 
    invitation.emailAddress, 
    invitation.programName, 
    invitation.emailSubject, 
    invitation.emailTemplate, 
    invitation.invitationStatus, 
    invitation.createdate 
from 
    (
        select 
            cast(unnest(xpath('//root/dynamic-element[@name=''Email_Subject'']/dynamic-content/text()', 
            cast(ltrim(ddmcontent.xml,' ') as xml))) as text) as emailSubject, 
            cast(unnest(xpath('//root/dynamic-element[@name=''Email_Template'']/dynamic-content/text()', 
            cast(ltrim(ddmcontent.xml,' ') as xml))) as text) as emailTemplate, 
            cast(unnest(xpath('//root/dynamic-element[@name=''Email_Address'']/dynamic-content/text()', 
            cast(ltrim(ddmcontent.xml,' ') as xml))) as text) as emailAddress, 
            cast(unnest(xpath('//root/dynamic-element[@name=''User_Id'']/dynamic-content/text()', 
            cast(ltrim(ddmcontent.xml,' ') as xml))) as text) as userId, 
            cast(unnest(xpath('//root/dynamic-element[@name=''Program_Name'']/dynamic-content/text()', 
            cast(ltrim(ddmcontent.xml,' ') as xml))) as text) as programName, 
            cast(unnest(xpath('//root/dynamic-element[@name=''Invitation_Status'']/dynamic-content/text()', 
            cast(ltrim(ddmcontent.xml,' ') as xml))) as text) as invitationStatus, 
            ddmcontent.createdate, 
            ddmcontent.contentid
         from ddmcontent 
            inner join 
                ddlrecord on ddlrecord.ddmstorageid = ddmcontent.contentid 
            inner join 
                ddlrecordset on ddlrecordset.recordsetid = ddlrecord.recordsetid 
         where ddlrecordset.recordsetid = ? and ddlrecord.version = '1.0'
    ) invitation 
where  
(
(lower(invitation.userId) LIKE ? OR ? IS NULL) AND (lower(invitation.emailaddress) LIKE ? OR ? IS NULL)
)   
ORDER BY createDate DESC








<sql id="findProgramInvitationHistory">
        <![CDATA[
            SELECT 
                history.userId,
                history.programId,
                history.invitationStatus,
                history.createdTime,
                email.emailSubject,
                email.emailContent
            FROM hsf_program_programinvitationhistory AS history
                INNER JOIN hsf_program_programinvitationemailtemplate AS email ON history.emailTemplateId = email.pkid
            WHERE
                history.programId = ? and (lower(history.userId) LIKE ?)
        ]]>
    </sql>
    
    
long createdBy = themeDisplay.getUserId();

                Program programItem = programService.getProgram(programId);
                String signInUrl = serviceContext.getPortalURL() + ProgramInvitationConstants.DASHBOARD_URL;
                Object[] value = getTemplatePreview(String.format(Constants.CONNET_PROGRAM_FORMAT,
                        programItem.getName(), getYear(programItem.getProgramYear())), signInUrl);
                ProgramInvitationEmailTemplate programInvitationEmailTemplate = addInvitationEmailTemplate(createdBy, replaceTemplate(emailSubject, siteValues, value), replaceTemplate(emailTemplate, siteValues, value));
                long emailTemplateId = programInvitationEmailTemplate.getPkId();


                    addInvitationHistory(createdBy, userId, programId, emailTemplateId, tipMessage);


    private ProgramInvitationEmailTemplate addInvitationEmailTemplate(long userId, String emailSubject, String emailTemplate) throws PortalException, SystemException {
        ProgramInvitationEmailTemplate programInvitationEmailTemplate = ProgramInvitationEmailTemplateLocalServiceUtil.createProgramInvitationEmailTemplate(CounterLocalServiceUtil.increment());
        programInvitationEmailTemplate.setEmailSubject(emailSubject);
        programInvitationEmailTemplate.setEmailContent(emailTemplate);
        programInvitationEmailTemplate.setCreatedBy(userId);
        programInvitationEmailTemplate.setCreatedTime(new Date());
        programInvitationEmailTemplate = ProgramInvitationEmailTemplateLocalServiceUtil.addProgramInvitationEmailTemplate(programInvitationEmailTemplate);
        return programInvitationEmailTemplate;
    }

    private void addInvitationHistory(long userId, Long invitedUserId, Long programId, Long emailTemplateId, String invitationStatus) throws PortalException, SystemException {
        ProgramInvitationHistory programInvitationHistory = ProgramInvitationHistoryLocalServiceUtil.createProgramInvitationHistory(CounterLocalServiceUtil.increment());
        programInvitationHistory.setUserId(invitedUserId);
        programInvitationHistory.setInvitationStatus(invitationStatus);
        programInvitationHistory.setEmailTemplateId(emailTemplateId);
        programInvitationHistory.setProgramId(programId);
        programInvitationHistory.setCreatedBy(userId);
        programInvitationHistory.setCreatedTime(new Date());
        ProgramInvitationHistoryLocalServiceUtil.addProgramInvitationHistory(programInvitationHistory);
        LOG.trace(String.format("[Invatition Program] Added record successfully with programInvitationHistoryId: %s", programInvitationHistory.getPkId()));
    }



    private Object[] getTemplatePreview(String programName, String signInUrl) throws SystemException {
        List<Object> newValuesList = new ArrayList<Object>();
        newValuesList.add(ProgramInvitationConstants.PROGRAM_DISPLAY_NAME);
        newValuesList.add(programName);
        newValuesList.add(ProgramInvitationConstants.SIGN_IN);
        newValuesList.add(signInUrl);
        return newValuesList.toArray();
    }

SELECT 
                history.userId,
                history.emailAddress,
                history.programId,
                history.invitationStatus,
                history.createdTime,
                email.emailSubject,
                lower(to_char(history.userId, '9999999999')),
                email.emailContent
            FROM hsf_program_programinvitationhistory AS history
                INNER JOIN hsf_program_programinvitationemailtemplate AS email ON history.emailTemplateId = email.pkid
            WHERE (lower(to_char(history.userId, '9999999999')) like '1');


  SELECT history.userId, history.emailAddress, history.programId, history.invitationStatus, history.createdTime as createdate, email.emailSubject, email.emailContent 
  FROM hsf_program_programinvitationhistory AS history INNER JOIN hsf_program_programinvitationemailtemplate AS email ON history.emailTemplateId = email.pkid 
  WHERE history.programId = ? and ((lower(to_char(history.userId, '9999999999')) LIKE ? OR ? IS NULL) AND (lower(history.emailaddress) LIKE ? OR ? IS NULL))    ORDER BY createDate DESC
  
LOG.error("Get program name and id list failed.", e);


searchProgramInvitationHistory
searchProgramInvitationCount

findProgramInvitation


http://127.0.0.1:8080/web/guest/program-invitation-history?
p_p_id=programinvitationhistory_WAR_hsfpluginssharedportlet&
p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&
p_p_resource_id=aaa&p_p_cacheability=cacheLevelPage&
p_p_col_id=column-1&p_p_col_count=1&
_programinvitationhistory_WAR_hsfpluginssharedportlet_fileExtension=csv&
_programinvitationhistory_WAR_hsfpluginssharedportlet_pageIndex=1


href="http://127.0.0.1:8080/web/guest/program-request?
p_p_id=programrequest_WAR_hsfpluginssharedportlet&
p_p_lifecycle=2&p_p_state=normal&p_p_mode=view&
p_p_resource_id=exportCSV&p_p_cacheability=cacheLevelPage&
p_p_col_id=column-1&p_p_col_count=1&
_programrequest_WAR_hsfpluginssharedportlet_fileExtension=csv&
_programrequest_WAR_hsfpluginssharedportlet_filterStageId=4"


http://127.0.0.1:8080/web/guest/program-invitation-history?
p_p_id=programinvitationhistory_WAR_hsfpluginssharedportlet&
p_p_lifecycle=0&
p_p_state=normal&
p_p_mode=view
&p_p_col_id=column-1&
p_p_col_count=1


long string string

searchCountByRecordSetId

searchByRecordSetId

searchCountByRecordSetId



@Override
    public void serveResource(ResourceRequest resourceRequest, ResourceResponse resourceResponse) {
        ThemeDisplay themeDisplay = (ThemeDisplay) resourceRequest.getAttribute(WebKeys.THEME_DISPLAY);
        Long siteId = themeDisplay.getSiteGroupId();
        Locale locale = themeDisplay.getLocale();

        String siteAlias = StringPool.BLANK;
        List<ProgramInvitationHistory> results = new ArrayList<ProgramInvitationHistory>();
        try {

            siteAlias = AliasLocalServiceUtil.getAlias(siteId);
            List<DDMStructure> ddmStructures = NominationsService.getDDMStructuresByName(Constants.PROGRRAM_INVITATION);
            Long structureId = 0L;
            if (Validator.isNotNull(ddmStructures) && ddmStructures.size() > 0) {
                structureId = ddmStructures.get(0).getStructureId();
            } else {
                LOG.warn("[Invatition Program] No structure with name: " + Constants.PROGRRAM_INVITATION);
                return;
            }

            List<DDLRecordSet> ddlRecordSetList = NominationsService.getRecordSetByStructureId(structureId);
            long recordSetId = 0L;
            if (Validator.isNotNull(ddlRecordSetList) && ddlRecordSetList.size() > 0) {
                recordSetId = ddlRecordSetList.get(0).getRecordSetId();
            }
            results = ProgramRequestLocalServiceUtil.searchByRecordSetId(recordSetId,
                    null, null, null, -1, -1,
                    null, siteAlias.toUpperCase(locale));
        } catch (PortalException | SystemException e) {
            e.printStackTrace();
        }

        if (results == null) {
            return;
        }


        String fileExtension = ParamUtil.getString(resourceRequest, Constants.FILE_EXTENSION);
        String fileName = Constants.PROGRAM_INVITATION_HISTORY_EXPORT_FILE_NAME + CharPool.PERIOD + fileExtension;

        byte[] bytes = null;
        try {
            bytes = ProgramInvitationHistoryCSVExporter.doExport(results);
        } catch (Exception e) {
            e.printStackTrace();
        }

        if (bytes == null) {
            return;
        }

        String contentType = MimeTypesUtil.getContentType(fileName);

        try {
            PortletResponseUtil.sendFile(
                resourceRequest, resourceResponse, fileName, bytes, contentType);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    


addInvitationRecord(serviceContext, themeDisplay, ddmStructureId, recordSetId, userId, userEmail, tipMessage,
                            tipMessage, ProgramInvitationUtil.replaceTemplate(emailSubject, siteValues, values),
                            ProgramInvitationUtil.replaceTemplate(emailTemplate, siteValues, values));
    
    
    
BEGIN;
  DO
  $do$
  DECLARE  
    now_time TIMESTAMP WITHOUT TIME ZONE := NOW();
    selected TEXT;
    waitlisted TEXT;
    dropped TEXT;
    stausText Text;
    stage_id BIGINT := STAGEID_PARAMETER;
    program_id BIGINT := PROGRAMID_PARAMETER;
    program_request_cursor CURSOR FOR SELECT pkid, programid, userid FROM hsf_program_programrequest WHERE programid = program_id AND userid IN (USERID1, USERID2, ...);
  BEGIN
    FOR program_request IN program_request_cursor LOOP
    stausText := '';

    SELECT 
       CAST(COALESCE((xpath('/stages/stage[@stageId='||stage_id||']/@selected', XMLPARSE(DOCUMENT request.stagedata)))[1]) AS TEXT) AS selected,
       CAST(COALESCE((xpath('/stages/stage[@stageId='||stage_id||']/@waitlisted', XMLPARSE(DOCUMENT request.stagedata)))[1]) AS TEXT) AS waitlisted,
       CAST(COALESCE((xpath('/stages/stage[@stageId='||stage_id||']/@dropped', XMLPARSE(DOCUMENT request.stagedata)))[1]) AS TEXT) AS dropped 
       INTO selected, waitlisted, dropped
    FROM hsf_program_programrequest request
    WHERE length(request.stageData) > 0 
       AND userid=program_request.userid 
       AND programid=program_request.programid;

    IF waitlisted IS NOT NULL THEN
        stausText := stausText||' waitlisted="'||waitlisted||'"';
    END IF;

    IF selected IS NOT NULL THEN
        stausText := stausText||' selected="'||selected||'"';
    END IF;

    IF dropped IS NOT NULL THEN
        stausText := stausText||' dropped="'||dropped||'"';
    END IF;

    UPDATE 
        hsf_program_programrequest 
    SET 
        stagedata=regexp_replace(stagedata::TEXT, '<stage stageId="'||stage_id||'".*?>', 
            '<stage stageId="'||stage_id||'" status="done" completeTime="'||to_char(now_time, 'yyyy-mm-dd hh24:mm:ss')||'" acceptTerms="true"'||stausText ||'>')::xml 
    WHERE 
        userid=program_request.userid 
        AND programid=program_request.programid;

    INSERT INTO hsf_program_programstagehistory VALUES (nextval('hsf_programstagehistory_sq'), program_request.userid, now_time, program_request.userid, program_request.programid, program_request.pkid, stage_id, 2, 'running', 'done');
    RAISE NOTICE 'Insert applicant [userid: %], [programid: %], [program_request_id: %] in program history history success.', program_request.userid, program_request.programid, program_request.pkid;
    END LOOP;
  END;
  $do$;
COMMIT;



SELECT
    program.programId,
    history.userId,
    history.emailAddress,
    history.emailSubject,
    REPLACE(history.emailTemplate, '&gt;', '>') AS emailTemplate, 
    history.invitationStatus,
    history.createdBy,
    history.createdate
FROM (
    SELECT 
        CAST(unnest(xpath('//root/dynamic-element[@name=''Program_Name'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS text) AS programName,
        ddlrecord.recordid AS programId
    FROM ddmcontent 
        INNER JOIN ddlrecord ON ddlrecord.ddmstorageid = ddmcontent.contentid
        INNER JOIN ddlrecordset ON ddlrecordset.recordsetid = ddlrecord.recordsetid
    WHERE
        ddlrecordset.recordsetid = 41152) program
INNER JOIN   
(SELECT
    invitation.userId AS userId, 
    invitation.emailAddress AS emailAddress, 
    SUBSTRING(invitation.programName, 0, position(' - ' in invitation.programName)) AS programName,
    invitation.emailSubject AS emailSubject, 
    REPLACE(invitation.emailTemplate, '&lt;', '<') AS emailTemplate, 
    invitation.invitationStatus AS invitationStatus, 
    invitation.createdBy AS createdBy,
    invitation.createdate AS createdate
FROM (
    SELECT 
        CAST(unnest(xpath('//root/dynamic-element[@name=''Email_Subject'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS text) AS emailSubject,
        CAST(unnest(xpath('//root/dynamic-element[@name=''Email_Template'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS text) AS emailTemplate,
        CAST(unnest(xpath('//root/dynamic-element[@name=''Email_Address'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS text) AS emailAddress,
        CAST(unnest(xpath('//root/dynamic-element[@name=''User_Id'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS text) AS userId,
        CAST(unnest(xpath('//root/dynamic-element[@name=''Program_Name'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS text) AS programName,
        CAST(unnest(xpath('//root/dynamic-element[@name=''Invitation_Status'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS text) AS invitationStatus,
        ddmcontent.createdate AS createdate,
        ddmcontent.userId AS createdBy
    FROM ddmcontent 
        INNER JOIN ddlrecord ON ddlrecord.ddmstorageid = ddmcontent.contentid
        INNER JOIN ddlrecordset ON ddlrecordset.recordsetid = ddlrecord.recordsetid
    WHERE
        ddlrecordset.recordsetid = 96928) invitation)history
ON program.programName = history.programName;



INSERT INTO 
    hsf_program_programinvitationemailtemplate(pkid, emailSubject,emailContent, createdtime, createdBy) 
VALUES 
    (nextval('hsf_programinvitationemail_sq'), '1', '1', now(), 1);

INSERT INTO
    hsf_program_programinvitationhistory(pkid, userId, emailAddress, emailTemplateId, programId, invitationStatus, createdtime, createdBy)
VALUES
    (nextval('hsf_programinvitation_sq'), 1, '1', currval('hsf_programinvitationemail_sq'), 1, '1', NOW(), 1);
    


CASE WHEN invitation.userId IS NULL THEN 0 ELSE CAST(invitation.userId AS bigint) END AS userId,





BEGIN;
  DO
  $do$
  DECLARE  
    programId BIGINT;
    userId BIGINT;
    emailAddress CHARACTER VARYING(75);
    emailSubject TEXT;
    emailTemplate TEXT;
    invitationStatus TEXT;
    createdBy BIGINT;
    createdate TIMESTAMP WITHOUT TIME ZONE;
    program_invitation_cursor CURSOR FOR 
    SELECT
        program.programId,
        history.userId,
        history.emailAddress,
        history.emailSubject,
        REPLACE(REPLACE(REPLACE(history.emailTemplate, '&amp;', '&'), '&gt;', '>') , '&lt;', '<') AS emailTemplate, 
        history.invitationStatus,
        history.createdBy,
        history.createdate
    FROM (
    SELECT 
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Program_Name'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS programName,
        ddlrecord.recordid AS programId
    FROM ddmcontent 
        INNER JOIN ddlrecord ON ddlrecord.ddmstorageid = ddmcontent.contentid
        INNER JOIN ddlrecordset ON ddlrecordset.recordsetid = ddlrecord.recordsetid
    WHERE
        ddlrecordset.recordsetid = 41152) program
    INNER JOIN   
    (SELECT
        (CASE WHEN (invitation.userId IS NULL or invitation.userId = '') THEN 0 ELSE CAST(invitation.userId AS BIGINT) END) AS userId,
        invitation.emailAddress AS emailAddress, 
        SUBSTRING(invitation.programName, 0, POSITION(' - ' IN invitation.programName)) AS programName,
        invitation.emailSubject AS emailSubject, 
        invitation.emailTemplate AS emailTemplate, 
        invitation.invitationStatus AS invitationStatus, 
        invitation.createdBy AS createdBy,
        invitation.createdate AS createdate
    FROM (
    SELECT 
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Subject'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailSubject,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Template'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailTemplate,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Address'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailAddress,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''User_Id'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS userId,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Program_Name'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS programName,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Invitation_Status'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS invitationStatus,
        ddmcontent.createdate AS createdate,
        ddmcontent.userId AS createdBy
    FROM ddmcontent 
        INNER JOIN ddlrecord ON ddlrecord.ddmstorageid = ddmcontent.contentid
        INNER JOIN ddlrecordset ON ddlrecordset.recordsetid = ddlrecord.recordsetid
    WHERE
        ddlrecordset.recordsetid = 96928) invitation)history
    ON program.programName = history.programName;
  BEGIN
    FOR program_invitation IN program_invitation_cursor LOOP
    INSERT INTO 
        hsf_program_programinvitationemailtemplate(pkid, emailSubject,emailContent, createdtime, createdBy) 
    VALUES 
        (nextval('hsf_programinvitationemail_sq'), program_invitation.emailSubject, program_invitation.emailTemplate, program_invitation.createdate, program_invitation.createdBy);

    INSERT INTO
        hsf_program_programinvitationhistory(pkid, userId, emailAddress, emailTemplateId, programId, invitationStatus, createdtime, createdBy)
    VALUES
        (nextval('hsf_programinvitation_sq'), program_invitation.userId, program_invitation.emailAddress, currval('hsf_programinvitationemail_sq'), program_invitation.programId, program_invitation.invitationStatus, program_invitation.createdate, program_invitation.createdBy);
    RAISE NOTICE 'Insert program invitation [userid: %], [programid: %], [program_invitation_id: %] in program invitation history success.', program_invitation.userId, program_invitation.programId, currval('hsf_programinvitation_sq');
    END LOOP;
  END;
  $do$;
COMMIT;




rollback;
BEGIN;
  DO
  $do$
declare
i bigint := 0;
j bigint := 0;
begin
    while i < 23000 loop
    i = i + 1;
    j = j + 2;
    INSERT INTO 
        hsf_program_programinvitationemailtemplate(pkid, emailSubject,emailContent, createdtime, createdBy) 
    VALUES 
        (nextval('hsf_programinvitationemail_sq'), 'test', '<table border="0" cellpadding="10" cellspacing="0" style="background-color: rgb(255, 255, 255);" width="641">
	<tbody>
		<tr>
			<td valign="top">
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
			</table>
			</td>
		</tr>
	</tbody>
</table>

<table border="0" cellpadding="0" cellspacing="0" style="background-color: rgb(255, 255, 255);" width="641">
	<tbody>
		<tr>
			<td align="center" valign="top">
			<table border="0" cellpadding="0" cellspacing="0" width="641">
				<tbody>
					<tr>
						<td><img alt="HSF Insider: Insider Access to Internships, Career Opportunities, Leadership Programs, ways to give back and more exclusively for Gates Scholars and Alumni." src="http://127.0.0.1:8080/documents/20182/21203/logo.jpg" style="max-width: 641px;" tabindex="0" /></td>
					</tr>
				</tbody>
			</table>

			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				<tbody>
					<tr>
					</tr>
				</tbody>
			</table>
			</td>
		</tr>
		<tr>
			<td align="center" valign="top">
			<table border="0" cellpadding="10" cellspacing="0" width="641">
				<tbody>
					<tr>
						<td valign="top">
						<table border="0" cellpadding="10" cellspacing="0" width="100%">
							<tbody>
								<tr>
									<td valign="top">
									<div style="overflow: hidden; font-family: Helvetica, serif; word-wrap: break-word;">
									<p>Hello Test Test,</p>

									<p style="margin-top: 20px;">I have sent invitation email&nbsp;to you.&nbsp;To complete this process, please verify that your email address is&nbsp;<a href="mailto:test@liferay.com">test@liferay.com</a>&nbsp;and check&nbsp;the program as below.</p>

									<div>&nbsp;</div>

									<dl style="font-family: Helvetica, serif;">
										<dt style="float: left;"><strong>Scholarship Test(2018)</strong></dt>
									</dl>

									<p>&nbsp;</p>

									<dl style="font-family: Helvetica, serif;">
									</dl>

									<p>To apply Scholarship Test(2018)， you will need sign in your account, by clicking&nbsp;<a href="http://127.0.0.1:8080/applicant-dashboard" style="font-family: Helvetica, serif; background-color: transparent;">Sign-in to your account</a><span style="color: rgb(58, 58, 58); font-family: Helvetica, serif;">.</span></p>

									<p style="margin-top: 20px;">If this is not your email, please disregard this message.</p>

									<p style="margin-top: 30px;">Sincerely,</p>

									<p style="margin-top: 30px;">The Hispanic Scholarship Fund</p>
									</div>
									</td>
								</tr>
							</tbody>
						</table>
						</td>
					</tr>
				</tbody>
			</table>
			</td>
		</tr>
	</tbody>
</table>

<table border="0" cellpadding="0" cellspacing="0" style="background-color: rgb(255, 255, 255);" width="641">
	<tbody>
		<tr>
			<td valign="top">
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				<tbody>
					<tr>
						<td style="text-align: center;" valign="middle"><a href="http://127.0.0.1:8080/profile" style="border: 0px;" target="_blank"><img alt="MyHSF" src="http://127.0.0.1:8080/documents/20182/21203/myhsf.png" /></a></td>
						<td style="text-align: center;" valign="middle"><a href="http://127.0.0.1:8080/hsfinder" style="border: 0px;" target="_blank"><img alt="HSFinder" src="http://127.0.0.1:8080/documents/20182/21203/hsf_finder.png" /></a></td>
						<td style="text-align: center;" valign="middle"><a href="http://127.0.0.1:8080/event-calendar" style="border: 0px;" target="_blank"><img alt="HSF Events" src="http://127.0.0.1:8080/documents/20182/21203/hsf_events.png" /></a></td>
						<td style="text-align: center;" valign="middle"><a href="http://127.0.0.1:8080/resources" style="border: 0px;" target="_blank"><img alt="Get Involved" src="http://127.0.0.1:8080/documents/20182/21203/get_involved.png" /></a></td>
						<td style="padding: 12px 0px; text-align: center;" valign="middle"><a href="http://127.0.0.1:8080/donate" style="border: 0px;" target="_blank"><img alt="Donate Today" src="http://127.0.0.1:8080/documents/20182/21203/donate.png" /></a></td>
					</tr>
					<tr>
						<td colspan="5">
						<table border="0" cellpadding="0" cellspacing="0" style="border-top-style: solid; border-top-color: rgb(186, 186, 186);" width="100%">
							<tbody>
								<tr>
									<td><a href="https://www.facebook.com/HispanicScholarshipFund" style="border: 0px;" target="_blank"><img alt="Share on Facebook" src="http://127.0.0.1:8080/documents/20182/21203/share.png" />&nbsp;</a></td>
									<td><a href="https://twitter.com/HSFNews" style="border: 0px;" target="_blank"><img alt="Tweet" src="http://127.0.0.1:8080/documents/20182/21203/tweet.png" />&nbsp;</a></td>
									<td><a href="mailto:" style="border: 0px;"><img alt="Forward to a Friend" src="http://127.0.0.1:8080/documents/20182/21203/forward.png" />&nbsp;</a></td>
									<td style="border-left-style: solid; border-left-color: rgb(186, 186, 186); color: rgb(78, 78, 78); font-size: 12px; font-family: Helvetica, Arial; padding: 12px 0px 5px 15px;" valign="middle" width="180"><strong>Hispanic Scholarship Fund&nbsp;</strong><br />
									1411 W 190th Street, Suite<br />
									700<br />
									Gardena, CA 90248</td>
								</tr>
							</tbody>
						</table>
						</td>
					</tr>
					<tr>
						<td colspan="5" valign="top" width="370">&nbsp;</td>
					</tr>
					<tr>
						<td colspan="5" valign="middle">&nbsp;</td>
					</tr>
				</tbody>
			</table>
			</td>
		</tr>
	</tbody>
</table>', NOW(), '20199');

    INSERT INTO
        hsf_program_programinvitationhistory(pkid, userId, emailAddress, emailTemplateId, programId, invitationStatus, createdtime, createdBy)
    VALUES
        (nextval('hsf_programinvitation_sq'), i, 'test@test.com', currval('hsf_programinvitationemail_sq'), j, 'Success', NOW(), '20199');
RAISE NOTICE 'Insert program invitation [program_invitation_id: %] in program invitation history success.', currval('hsf_programinvitation_sq');
    end loop;
end;
$do$;
commit;


explain analyze SELECT 
                invitation.userId,
                invitation.emailAddress,
                invitation.programId,
                invitation.invitationStatus,
                invitation.createdTime,
                email.emailSubject,
                email.emailContent
            FROM hsf_program_programinvitationhistory AS invitation
                INNER JOIN hsf_program_programinvitationemailtemplate AS email ON invitation.emailTemplateId = email.pkid
            WHERE
                invitation.programId = 60102





INNER JOIN ddlrecord ON ddlrecord.ddmstorageid = ddmcontent.contentid
INNER JOIN ddlrecordset ON ddlrecordset.recordsetid = ddlrecord.recordsetid

ddlrecord.recordsetid = 41152  找到对应的recordid = 215501  的 ddlrecord.ddmstorageid  = 232401
ddmcontent.contentid = 232401


if (bigDateDay > smallDateDay) {
            remainingTime[2] = bigDateDay - smallDateDay;
            if (bigDateHour < smallDateHour) {
                remainingTime[2] -= 1;
            }
            if (bigDateHour == smallDateHour) {
                if (bigDateMinute < smallDateMinute) {
                    remainingTime[2] -= 1;
                }
            }
        } else if (bigDateDay == smallDateDay) {
            remainingTime[2] = bigDateDay - smallDateDay;
        } else {
            remainingTime[2] = smallDate.getMaximum(Calendar.DAY_OF_MONTH) - smallDateDay + bigDateDay;
            bigDateMonth -= 1;
        }


sudo bash -c 'echo "cd /usr/local/xmind/XMind_amd64" >> /usr/local/xmind-8/xmind'
sudo bash -c 'echo "./XMind &" >> /usr/local/xmind-8/xmind'
sudo bash -c 'ln -fs /usr/local/xmind/xmind /usr/bin/xmind'
ProgramRequestLocalServiceUtil



fieldStructure
{referencedField=, localizable=true, children=, writeable=true, type=textarea, tip=, indexType=, 
predefinedValue=, maxLength=, hide=false, minLength=, valueIndex=0, name=Small_Text_Box, rule=, 
optional=false, required=false, repeatableMaximum=, repeatableLabel=, placeholder=, width=small, 
label=Small Text Box, fieldNamespace=xzir, dataType=string, readOnly=false, showLabel=true, 
repeatable=false}


 <, d, i, v,  , c, l, a, s, s, =, ", c, o, n, t, r, o, l, -, g, r, o, u, p,  ,
  f, i, e, l, d, -, w, r, a, p, p, e, r,  , b, i, n, d, i, n, g, -, r, u, l, e, ", 
   , d, a, t, a, -, f, i, e, l, d, N, a, m, e, =, ", S, m, a, l, l, _, T, e, x, t, _, B, o, x, ", 
    , d, a, t, a, -, f, i, e, l, d, N, a, m, e, s, p, a, c, e, =, ", _, I, N, S, T, A, N, C, E, _, x, z, i, r, ",  , d, a, t, a, -, r, e, p, e, a, t, a, b, l, e, =, ", f, a, l, s, e, ",  , d, a, t, a, -, r, e, p, e, a, t, a, b, l, e, M, a, x, i, m, u, m, =, ", 0, ",  , d, a, t, a, -, r, e, p, e, a, t, a, b, l, e, L, a, b, e, l, =, ", ",  , d, a, t, a, -, i, d, e, n, t, i, t, y, =, ", S, m, a, l, l, _, T, e, x, t, _, B, o, x, _, 4, i, m, x, l, K, ",  , >, 
<, l, a, b, e, l,  , c, l, a, s, s, =, ", c, o, n, t, r, o, l, -, l, a, b, e, l, ", 
 , f, o, r, =, ", _, r, e, c, o, m, m, e, n, d, e, r, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, S, m, a, l, l, _, T, e, x, t, _, B, o, x, _, I, N, S, T, A, N, C, E, _, x, z, i, r, ", >, 
S, m, a, l, l,  , T, e, x, t,  , B, o, x, 
<, /, l, a, b, e, l, >, 
<, t, e, x, t, a, r, e, a,  , c, l, a, s, s, =, ", f, i, e, l, d,  , i, n, p, u, t, -, l, a, r, g, e, ",  ,  , i, d, =, ", _, r, e, c, o, m, m, e, n, d, e, r, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, S, m, a, l, l, _, T, e, x, t, _, B, o, x, _, I, N, S, T, A, N, C, E, _, x, z, i, r, ",  ,  , n, a, m, e, =, ", _, r, e, c, o, m, m, e, n, d, e, r, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, S, m, a, l, l, _, T, e, x, t, _, B, o, x, _, I, N, S, T, A, N, C, E, _, x, z, i, r, ",  ,  ,  ,  ,  ,  ,  , d, i, r, =, ", l, t, r, ",  , >, <, /, t, e, x, t, a, r, e, a, >, 
 <, /, d, i, v, >, 
]





[
<div class="control-group field-wrapper binding-rule" data-fieldName="HTML9397" data-fieldNamespace="_INSTANCE_wqpv" data-repeatable="true" data-repeatableMaximum="0" data-repeatableLabel="" data-identity="HTML9397_J8W5Wl" >
	
		<span class="control-label" >
			HTML

			
				<span class="label-required">(Required)</span>
			

			
		</span>
<div class="">
	<textarea id="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_wqpvEditor" name="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_wqpvEditor" style="display: none;"></textarea>
</div>

<script type="text/javascript">
	CKEDITOR.disableAutoInline = true;

	CKEDITOR.env.isCompatible = true;
</script>
				<input  class="field"  id="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_wqpv"    name="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_wqpv"     type="hidden" value="111"   />
			
</div>
, 

<div class="control-group field-wrapper binding-rule" data-fieldName="HTML9397" data-fieldNamespace="_INSTANCE_eudx" data-repeatable="true" data-repeatableMaximum="0" data-repeatableLabel="" data-identity="HTML9397_loaH7w" >
	
		<span class="control-label" >
			HTML

			
				<span class="label-required">(Required)</span>
			

			
		</span>
<div class="">
	<textarea id="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_eudxEditor" name="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_eudxEditor" style="display: none;"></textarea>
</div>

<script type="text/javascript">
	CKEDITOR.disableAutoInline = true;

	CKEDITOR.env.isCompatible = true;
</script>
				<input  class="field"  id="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_eudx"    name="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_eudx"     type="hidden" value="222"   />
</div>

, 
<div class="control-group field-wrapper binding-rule" data-fieldName="HTML9397" data-fieldNamespace="_INSTANCE_czmf" data-repeatable="true" data-repeatableMaximum="0" data-repeatableLabel="" data-identity="HTML9397_brX6YQ" >
	
		<span class="control-label" >
			HTML

			
				<span class="label-required">(Required)</span>
			

			
		</span>
<div class="">
	<textarea id="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_czmfEditor" name="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_czmfEditor" style="display: none;"></textarea>
</div>

<script type="text/javascript">
	CKEDITOR.disableAutoInline = true;

	CKEDITOR.env.isCompatible = true;
</script>	
				<input  class="field"  id="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_czmf"    name="_recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_czmf"     type="hidden" value="3333333333333333"   />
</div>

]

[HTML9397_INSTANCE_uhnm, HTML9397_INSTANCE_gsei, HTML9397_INSTANCE_iyik]


control-group field-wrapper binding-rule error
field error-field

control-group field-wrapper binding-rule success
field success-field

control-group field-wrapper binding-rule
field

for (instance in CKEDITOR.instances){
CKEDITOR.instances[instance].updateElement();       
}  

setTimeout(function(){
    for (instance in CKEDITOR.instances){
        CKEDITOR.instances[instance].updateElement();       
    } 
},10000);

var data = CKEDITOR.instances._recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_ciqdEditor.getData();
console.log(data);

setTimeout(function(){
    var data = CKEDITOR.instances._recommender_WAR_hsfpluginssharedportlet_HTML9397_INSTANCE_ciqdEditor.getData();
    alert(data);
},10000);

[What_is_your_relationship_to_the_student__INSTANCE_mhqf,
Please_input_your_relationship_to_the_student_INSTANCE_eudm,
How_long_have_you_known_the_student__INSTANCE_euop,
HTML9397_INSTANCE_wqpv,
HTML9397_INSTANCE_fktt,
HTML9397_INSTANCE_ciqd]

git@git.augmentum.com.cn:Cynthia.Zhu/hsf_training.git

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC4h09Gs2BzCiONpxCmVTeDpRqlBzhnwOP4uRLrmj8OZY/MxejP4Sq/qzDeNDScj4QtnH/dz6NhA0ODJVXy3BKlzpwsaw70tG0Q1gT90ggBfavKvpIU3zCTNpEWEPjZiIGzNNtMeijIA9hGwInTlaveKqBJrR6FDIHbjIB7Z40+olSBILWV/1UNc6blsCIy5xlREU96AewOPAU/vwQYrbudWj71HSa/qWGD7DPUKWwBwN7isCZfmgW3hj5oz94SEdUpBAatioM94EtoeY3K6a2bl0dtMMuCr/aFT6tN/FSfCi7RP0g+ixOmXLRSB2OmtVult5M/K4Ryi3+/Z4+RQj/J

git@git.augmentum.com.cn:Cynthia.Zhu/hsf_training.git


{"autoGeneratedName":false,"repeatableMaximum":"","repeatableLabel":"","referencedField":"",
"width":"small","localizable":"true","label":"HTML","type":"ddm-text-html","fieldNamespace":"ddm",
"tip":"","hiddenAttributes":["readOnly"],"id":"HTML9397","predefinedValue":"","indexType":"",
"dataType":"html","readOnly":"false","hide":"false","showLabel":"true","rule":"","optional":"false",
"name":"HTML9397","repeatable":"true","localizationMap":{"en_US":{"repeatableLabel":"",
"predefinedValue":"","referencedField":"","rule":"","label":"HTML","tip":""}},"required":"true"}


This issue has been resolved in dev and gates environment.
Because Jimmy Wang accidentally made a mistake, it led to this bug reopened.

{requestedLocale=en_US, 
parentFieldStructure={default-locale=en_US, available-locales=en_US, fieldNamespace=fomn},
fieldStructure={repeatableMaximum=, repeatableLabel=, 
referencedField=, placeholder=, width=small, localizable=true, writeable=true,
label=Date, type=ddm-date, fieldNamespace=ibpv, tip=cynthiaDate, predefinedValue=, 
indexType=, dataType=date, readOnly=false, hide=false, maxLength=, minLength=, 
showLabel=false, optional=false, repeatable=false, rule=, name=Date6345, required=false}, 
requestedLanguageDir=ltr, portletNamespace=_profile_WAR_hsfpluginssharedportlet_, namespace=}

[
, <, d, i, v,  , c, l, a, s, s, =, ", c, o, n, t, r, o, l, -, g, r, o, u, p,  , f, i, e, l, d, -, w, r, a, p, p, e, r,  , b, i, n, d, i, n, g, -, r, u, l, e, ",  , d, a, t, a, -, f, i, e, l, d, N, a, m, e, =, ", D, a, t, e, 6, 3, 4, 5, ",  , d, a, t, a, -, f, i, e, l, d, N, a, m, e, s, p, a, c, e, =, ", _, I, N, S, T, A, N, C, E, _, n, p, s, e, ",  , d, a, t, a, -, r, e, p, e, a, t, a, b, l, e, =, ", f, a, l, s, e, ",  , d, a, t, a, -, r, e, p, e, a, t, a, b, l, e, M, a, x, i, m, u, m, =, ", 0, ",  , d, a, t, a, -, r, e, p, e, a, t, a, b, l, e, L, a, b, e, l, =, ", ",  , d, a, t, a, -, i, d, e, n, t, i, t, y, =, ", D, a, t, e, 6, 3, 4, 5, _, h, l, L, u, e, z, ",  , >, 
, <, s, p, a, n,  , c, l, a, s, s, =, ", l, f, r, -, i, n, p, u, t, -, d, a, t, e,  , i, n, p, u, t, -, l, a, r, g, e, ",  , i, d, =, ", h, h, w, i, _, c, o, l, u, m, n, 2, _, 0, _, d, i, s, p, l, a, y, D, a, t, e, ", >, 
, 	, <, d, i, v,  , c, l, a, s, s, =, ", c, o, n, t, r, o, l, -, g, r, o, u, p,  , i, n, p, u, t, -, t, e, x, t, -, w, r, a, p, p, e, r, ", >, 
, 	, 	, 	, 	, <, i, n, p, u, t,  ,  , c, l, a, s, s, =, ", f, i, e, l, d,  , i, n, p, u, t, -, l, a, r, g, e, ",  ,  , i, d, =, ", _, p, r, o, f, i, l, e, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, D, a, t, e, 6, 3, 4, 5, _, _, I, N, S, T, A, N, C, E, _, _, n, p, s, e, ",  ,  ,  ,  , n, a, m, e, =, ", _, p, r, o, f, i, l, e, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, D, a, t, e, 6, 3, 4, 5, _, I, N, S, T, A, N, C, E, _, n, p, s, e, ",  ,  ,  , p, l, a, c, e, h, o, l, d, e, r, =, ", M, M, /, d, d, /, y, y, y, y, ",  ,  , t, y, p, e, =, ", t, e, x, t, ",  , v, a, l, u, e, =, ", ",  ,  , w, r, a, p, p, e, d, F, i, e, l, d, =, ", t, r, u, e, ",  ,  , /, >, 
, 	, <, /, d, i, v, >, 
,  ,  ,  ,  , <, i, n, p, u, t,  ,  , i, d, =, ", _, p, r, o, f, i, l, e, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, D, a, t, e, 6, 3, 4, 5, _, _, I, N, S, T, A, N, C, E, _, _, n, p, s, e, D, a, y, ",  , n, a, m, e, =, ", _, p, r, o, f, i, l, e, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, D, a, t, e, 6, 3, 4, 5, _, I, N, S, T, A, N, C, E, _, n, p, s, e, D, a, y, ",  , t, y, p, e, =, ", h, i, d, d, e, n, ",  , v, a, l, u, e, =, ", ",  , /, >, 
,  ,  ,  ,  , <, i, n, p, u, t,  ,  , i, d, =, ", _, p, r, o, f, i, l, e, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, D, a, t, e, 6, 3, 4, 5, _, _, I, N, S, T, A, N, C, E, _, _, n, p, s, e, M, o, n, t, h, ",  , n, a, m, e, =, ", _, p, r, o, f, i, l, e, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, D, a, t, e, 6, 3, 4, 5, _, I, N, S, T, A, N, C, E, _, n, p, s, e, M, o, n, t, h, ",  , t, y, p, e, =, ", h, i, d, d, e, n, ",  , v, a, l, u, e, =, ", ",  , /, >, 
,  ,  ,  ,  , <, i, n, p, u, t,  ,  , i, d, =, ", _, p, r, o, f, i, l, e, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, D, a, t, e, 6, 3, 4, 5, _, _, I, N, S, T, A, N, C, E, _, _, n, p, s, e, Y, e, a, r, ",  , n, a, m, e, =, ", _, p, r, o, f, i, l, e, _, W, A, R, _, h, s, f, p, l, u, g, i, n, s, s, h, a, r, e, d, p, o, r, t, l, e, t, _, D, a, t, e, 6, 3, 4, 5, _, I, N, S, T, A, N, C, E, _, n, p, s, e, Y, e, a, r, ",  , t, y, p, e, =, ", h, i, d, d, e, n, ",  , v, a, l, u, e, =, ", ",  , /, >, 
, <, /, s, p, a, n, >, 
, <, /, d, i, v, >, 
, 
]

This bug can't be fixed. Liferay's native feature is that when the field label doesn't show, tip doesn't show either, because the span tag that displays tip is included in label tag.
Repeatable icon problem is related to HSF3-727.

{repeatableMaximum=, repeatableLabel=, other=false, referencedField=, width=, localizable=true,
label=Radio, type=radio, tip=, predefinedValue=[""],dataSourceSelection=, indexType=, correctAnswer=[], 
dataType=string, readOnly=false, hide=false, showLabel=true, optional=false, repeatable=true, rule=, 
name=Radio6894, required=true}

Because students do not need to fill out a form before filling in the next form, the required attribute of field is set to false, so it does not show required, and the field tag of unfilled required is marked before the final form is submitted. I recommend not to fix this bug because customers are used to it.


229904


{uuid=efd95113-f5dc-4a85-8d4a-ab4ccd12cd33, structureId=243302, groupId=20182, companyId=20155, userId=20199, userName=Test Test, createDate=Mon Jun 17 09:54:18 GMT 2019, modifiedDate=Mon Jun 17 09:54:18 GMT 2019, parentStructureId=0, classNameId=20098, structureKey=243301, name=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Name language-id="en_US">Cynthia_Test_Boolean</Name></root>, description=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Description language-id="en_US">Cynthia_Test_Boolean</Description></root>, xsd=<?xml version="1.0"?>

<root available-locales="en_US" default-locale="en_US">
	<dynamic-element dataType="boolean" indexType="" localizable="true" name="Boolean2721" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="checkbox" width="" optional="false" hide="false">
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Boolean]]></entry>
			<entry name="predefinedValue"><![CDATA[true]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
</root>, storageType=xml, type=0}

{"autoGeneratedName":false,"repeatableMaximum":"","repeatableLabel":"","referencedField":"",
"width":"","localizable":"true","label":"Boolean","type":"checkbox","tip":"",
"hiddenAttributes":["required","readOnly"],"id":"Boolean2721","predefinedValue":"true","indexType":"",
"dataType":"boolean","readOnly":"false","hide":"false","showLabel":"true","rule":"","name":"Boolean2721",
"repeatable":"false","optional":"false","localizationMap":{"en_US":{"repeatableLabel":"",
"predefinedValue":"true","referencedField":"","rule":"","label":"Boolean","tip":""}},"required":"false"}

{uuid=116b220a-1d0e-4373-b110-3ccdff1e8d10, structureId=114502, groupId=20182, companyId=20155, userId=20199, userName=Test Test, createDate=Thu Nov 09 13:53:02 GMT 2017, modifiedDate=Tue Jun 18 02:04:31 GMT 2019, parentStructureId=0, classNameId=20098, structureKey=114501, name=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Name language-id="en_US">Complete_Search</Name></root>, description=, xsd=<?xml version="1.0"?>

<root available-locales="en_US" default-locale="en_US">
	<dynamic-element dataType="boolean" indexType="" localizable="true" name="Boolean5022" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="checkbox" width="" optional="false" hide="false">
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Boolean]]></entry>
			<entry name="predefinedValue"><![CDATA[true]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="string" fieldNamespace="ddm" indexType="keyword" localizable="true" name="Container3428" readOnly="false" repeatable="true" repeatableMaximum="" required="false" showLabel="true" type="ddm-container" width="" optional="true" hide="false">
		<dynamic-element dataType="string" indexType="keyword" localizable="true" multiple="false" name="Select4595" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="select" width="" placeholder="" optional="false" hide="false">
			<dynamic-element name="optionSelect45955018" type="option" value="value 1">
				<meta-data locale="en_US">
					<entry name="label"><![CDATA[option 1]]></entry>
				</meta-data>
			</dynamic-element>
			<dynamic-element name="optionSelect45955019" type="option" value="value 2">
				<meta-data locale="en_US">
					<entry name="label"><![CDATA[option 2]]></entry>
				</meta-data>
			</dynamic-element>
			<dynamic-element name="optionSelect45955020" type="option" value="value 3">
				<meta-data locale="en_US">
					<entry name="label"><![CDATA[option 3]]></entry>
				</meta-data>
			</dynamic-element>
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[Select]]></entry>
				<entry name="predefinedValue"><![CDATA[[""]]]></entry>
				<entry name="tip"><![CDATA[]]></entry>
				<entry name="repeatableLabel"><![CDATA[]]></entry>
				<entry name="rule"><![CDATA[]]></entry>
				<entry name="referencedField"><![CDATA[]]></entry>
				<entry name="dataSourceSelection"><![CDATA[]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element dataType="string" fieldNamespace="ddm" indexType="keyword" localizable="true" name="Address_Selection3739" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="ddm-address" width="small" optional="false" hide="false">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[Address Selection]]></entry>
				<entry name="predefinedValue"><![CDATA[]]></entry>
				<entry name="tip"><![CDATA[]]></entry>
				<entry name="repeatableLabel"><![CDATA[]]></entry>
				<entry name="rule"><![CDATA[]]></entry>
				<entry name="referencedField"><![CDATA[]]></entry>
			</meta-data>
		</dynamic-element>
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Container]]></entry>
			<entry name="predefinedValue"><![CDATA[]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="html" fieldNamespace="ddm" indexType="keyword" localizable="true" name="HTML3321" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="ddm-text-html" width="small" optional="false" hide="false">
		<dynamic-element dataType="document-library" fieldNamespace="ddm" indexType="" localizable="true" name="Documents_and_Media3664" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="ddm-documentlibrary" width="" optional="false" hide="false">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[Documents and Media]]></entry>
				<entry name="predefinedValue"><![CDATA[]]></entry>
				<entry name="tip"><![CDATA[]]></entry>
				<entry name="repeatableLabel"><![CDATA[]]></entry>
				<entry name="rule"><![CDATA[]]></entry>
				<entry name="referencedField"><![CDATA[]]></entry>
			</meta-data>
		</dynamic-element>
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[HTML]]></entry>
			<entry name="predefinedValue"><![CDATA[]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="string" indexType="" localizable="true" name="Text6607" readOnly="false" repeatable="true" repeatableMaximum="" required="true" showLabel="true" type="text" width="small" placeholder="" minLength="" maxLength="" optional="false" hide="false" writeable="true">
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Text]]></entry>
			<entry name="predefinedValue"><![CDATA[]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="string" indexType="" localizable="true" name="Radio6894" readOnly="false" repeatable="true" repeatableMaximum="" required="true" showLabel="true" type="radio" width="" other="false" optional="false" hide="false">
		<dynamic-element name="optionRadio689414507" type="option" value="value 1">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 1]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element name="optionRadio689414508" type="option" value="value 2">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 2]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element name="optionRadio689414509" type="option" value="value 3">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 3]]></entry>
			</meta-data>
		</dynamic-element>
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Radio]]></entry>
			<entry name="predefinedValue"><![CDATA[[""]]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
			<entry name="correctAnswer"><![CDATA[[]]]></entry>
			<entry name="dataSourceSelection"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="string" fieldNamespace="ddm" indexType="" localizable="true" name="Checkbox_Group7328" readOnly="false" repeatable="true" repeatableMaximum="" required="true" showLabel="true" type="ddm-checkbox-group" width="" selectAll="true" other="false" optional="false" hide="false">
		<dynamic-element name="optionCheckbox_Group732814933" type="option" value="value 1">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 1]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element name="optionCheckbox_Group732814934" type="option" value="value 2">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 2]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element name="optionCheckbox_Group732814935" type="option" value="value 3">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 3]]></entry>
			</meta-data>
		</dynamic-element>
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Checkbox Group]]></entry>
			<entry name="predefinedValue"><![CDATA[[""]]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
			<entry name="correctAnswer"><![CDATA[[]]]></entry>
			<entry name="dataSourceSelection"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
</root>, storageType=xml, type=0}


{uuid=b709dc3e-832b-4451-87c2-276e2f3227f5, structureId=41096, groupId=20182, companyId=20155, userId=20610, userName=ResourceImporter, createDate=Tue Mar 07 15:36:57 GMT 2017, modifiedDate=Mon Jun 17 09:04:15 GMT 2019, parentStructureId=0, classNameId=20098, structureKey=PERSONAL_DETAILS, name=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Name language-id="en_US">Personal_Details</Name></root>, description=, xsd=<?xml version="1.0"?>

<root available-locales="en_US" default-locale="en_US">
	<dynamic-element dataType="boolean" indexType="" localizable="true" name="Boolean8840" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="checkbox" width="" optional="false" hide="false">
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Boolean]]></entry>
			<entry name="predefinedValue"><![CDATA[true]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="date" fieldNamespace="ddm" indexType="" localizable="true" name="Date6345" readOnly="false" repeatable="false" repeatableMaximum="" required="true" showLabel="false" type="ddm-date" width="small" placeholder="" minLength="" maxLength="" optional="false" hide="false" writeable="true">
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Date]]></entry>
			<entry name="predefinedValue"><![CDATA[]]></entry>
			<entry name="tip"><![CDATA[cynthiaDate]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="date" fieldNamespace="ddm" indexType="" localizable="true" name="Date8088" readOnly="false" repeatable="false" repeatableMaximum="" required="true" showLabel="true" type="ddm-date" width="medium" placeholder="" minLength="" maxLength="" optional="false" hide="false" writeable="true">
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Date]]></entry>
			<entry name="predefinedValue"><![CDATA[]]></entry>
			<entry name="tip"><![CDATA[cynthia]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="date" fieldNamespace="ddm" indexType="" localizable="true" name="Date8481" readOnly="false" repeatable="false" repeatableMaximum="" required="true" showLabel="true" type="ddm-date" width="large" placeholder="" minLength="" maxLength="" optional="false" hide="false" writeable="true">
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Date]]></entry>
			<entry name="predefinedValue"><![CDATA[]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="string" fieldNamespace="ddm" indexType="" localizable="true" name="Checkbox_Group6851" readOnly="false" repeatable="true" repeatableMaximum="" required="true" showLabel="false" type="ddm-checkbox-group" width="" selectAll="true" other="false" optional="false" hide="false">
		<dynamic-element name="optionCheckbox_Group685115871" type="option" value="value 1">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 1]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element name="optionCheckbox_Group685115872" type="option" value="value 2">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 2]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element name="optionCheckbox_Group685115873" type="option" value="value 3">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 3]]></entry>
			</meta-data>
		</dynamic-element>
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Checkbox Group]]></entry>
			<entry name="predefinedValue"><![CDATA[[""]]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
			<entry name="correctAnswer"><![CDATA[[]]]></entry>
			<entry name="dataSourceSelection"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="string" fieldNamespace="ddm" indexType="" localizable="true" name="Radio_Single7714" readOnly="false" repeatable="true" repeatableMaximum="" required="true" showLabel="false" type="ddm-radio-single" width="" other="false" optional="false" hide="false">
		<dynamic-element name="optionRadio_Single771416372" type="option" value="value 1">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 1]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element name="optionRadio_Single771416373" type="option" value="value 2">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 2]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element name="optionRadio_Single771416374" type="option" value="value 3">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 3]]></entry>
			</meta-data>
		</dynamic-element>
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Radio Single]]></entry>
			<entry name="predefinedValue"><![CDATA[[""]]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
			<entry name="dataSourceSelection"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="string" indexType="" localizable="true" name="Radio7285" readOnly="false" repeatable="true" repeatableMaximum="" required="true" showLabel="false" type="radio" width="" other="false" optional="false" hide="false">
		<dynamic-element name="optionRadio728516773" type="option" value="value 1">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 1]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element name="optionRadio728516774" type="option" value="value 2">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 2]]></entry>
			</meta-data>
		</dynamic-element>
		<dynamic-element name="optionRadio728516775" type="option" value="value 3">
			<meta-data locale="en_US">
				<entry name="label"><![CDATA[option 3]]></entry>
			</meta-data>
		</dynamic-element>
		<meta-data locale="en_US">
			<entry name="label"><![CDATA[Radio]]></entry>
			<entry name="predefinedValue"><![CDATA[[""]]]></entry>
			<entry name="tip"><![CDATA[]]></entry>
			<entry name="repeatableLabel"><![CDATA[]]></entry>
			<entry name="rule"><![CDATA[]]></entry>
			<entry name="referencedField"><![CDATA[]]></entry>
			<entry name="correctAnswer"><![CDATA[[]]]></entry>
			<entry name="dataSourceSelection"><![CDATA[]]></entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="string" fieldNamespace="ddm" indexType="keyword" localizable="true" name="Languages___Add_all_the_languages_you_speak__including_English" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="ddm-container" width="" optional="false" hide="false">
		<dynamic-element dataType="string" indexType="keyword" localizable="true" name="Language" readOnly="false" repeatable="true" repeatableMaximum="" required="false" showLabel="true" type="text" width="small" placeholder="" minLength="" maxLength="" optional="false" hide="false" writeable="true">
			<dynamic-element dataType="string" indexType="keyword" localizable="true" name="Is_this_your_first_language_" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="radio" width="" other="false" optional="false" hide="false">
				<dynamic-element name="optionIs_this_your_first_language_33817" type="option" value="Yes">
					<meta-data locale="en_US">
						<entry name="label"><![CDATA[Yes]]></entry>
					</meta-data>
				</dynamic-element>
				<dynamic-element name="optionIs_this_your_first_language_33818" type="option" value="No">
					<meta-data locale="en_US">
						<entry name="label"><![CDATA[No]]></entry>
					</meta-data>
				</dynamic-element>
				<meta-data locale="en_US">
					<entry name="label"><![CDATA[Is this your first language?]]></entry>
					<entry name="predefinedValue"><![CDATA[[""]]]></entry>
					<entry name="tip"><![CDATA[]]></entry>
					<entry name="repeatableLabel"><![CDATA[]]></entry>
					<entry name="rule"><![CDATA[]]></entry>
					<entry name="referencedField"><![CDATA[]]></entry>
					<entry name="correctAnswer"><![CDATA[[]]]></entry>
					<entry name="dataSourceSelection"><![CDATA[]]></entry>
				</meta-data>
			</dynamic-element>
			<dynamic-element dataType="string" fieldNamespace="ddm" indexType="keyword" localizable="true" name="Language_Proficiency" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="ddm-checkbox-group" width="" selectAll="true" other="false" optional="false" hide="false">
				<dynamic-element name="optionCheckbox_Group2004034177" type="option" value="Speak">
					<meta-data locale="en_US">
						<entry name="label"><![CDATA[Speak]]></entry>
					</meta-data>
				</dynamic-element>
				<dynamic-element name="optionCheckbox_Group2004034178" type="option" value="Read">
					<meta-data locale="en_US">
						<entry name="label"><![CDATA[Read]]></entry>
					</meta-data>
				</dynamic-element>
				<dynamic-element name="optionCheckbox_Group2004034179" type="option" value="Write">
					<meta-data locale="en_US">
						<entry name="label"><![CDATA[Write]]></entry>
					</meta-data>
				</dy...


{requestedLocale=en_US, parentFieldStructure={default-locale=en_US, available-locales=en_US, 
fieldNamespace=catr}, fieldStructure={repeatableMaximum=, repeatableLabel=, referencedField=, width=, 
localizable=true, label=Boolean, type=checkbox, fieldNamespace=bnel, tip=, predefinedValue=true, 
indexType=, dataType=boolean, readOnly=false, hide=false, showLabel=true, optional=false, rule=, 
name=Boolean2972, repeatable=false, required=false}, requestedLanguageDir=ltr, 
portletNamespace=_profile_WAR_hsfpluginssharedportlet_, namespace=}


{requestedLocale=en_US, parentFieldStructure={default-locale=en_US, available-locales=en_US, 
fieldNamespace=catr}, fieldStructure={repeatableMaximum=, repeatableLabel=, referencedField=, width=, 
localizable=true, label=Boolean, type=checkbox, fieldNamespace=joit, tip=, predefinedValue=true, 
indexType=, dataType=boolean, readOnly=false, hide=false, showLabel=true, optional=false, rule=, 
name=Boolean4026, repeatable=false, required=false}, requestedLanguageDir=ltr, 
portletNamespace=_profile_WAR_hsfpluginssharedportlet_, namespace=}


{requestedLocale=en_US, parentFieldStructure={default-locale=en_US, available-locales=en_US, 
required=false, fieldNamespace=xpby}, fieldStructure={repeatableMaximum=, repeatableLabel=, 
referencedField=, width=, localizable=true, label=Boolean, type=checkbox, fieldNamespace=uxpr, 
tip=, predefinedValue=true, indexType=, dataType=boolean, readOnly=false, hide=false, showLabel=true, 
optional=false, rule=, name=Boolean5022, repeatable=false, required=false}, requestedLanguageDir=ltr, 
portletNamespace=_applicantfillform_WAR_hsfpluginssharedportlet_, namespace=}


org.dom4j.tree.DefaultElement@251e8b77 
[Element: <dynamic-element attributes: [org.dom4j.tree.DefaultAttribute@785644aa 
[Attribute: name dataType value "boolean"], org.dom4j.tree.DefaultAttribute@67b6329e 
[Attribute: name indexType value ""], org.dom4j.tree.DefaultAttribute@6ab55843 
[Attribute: name localizable value "true"], org.dom4j.tree.DefaultAttribute@27b5cd70 
[Attribute: name name value "Boolean2972"], org.dom4j.tree.DefaultAttribute@10c2886e 
[Attribute: name readOnly value "false"], org.dom4j.tree.DefaultAttribute@538af65a 
[Attribute: name repeatable value "false"], org.dom4j.tree.DefaultAttribute@4833b98f 
[Attribute: name repeatableMaximum value ""], org.dom4j.tree.DefaultAttribute@3bdb8051 
[Attribute: name required value "false"], org.dom4j.tree.DefaultAttribute@47c5648a 
[Attribute: name showLabel value "true"], org.dom4j.tree.DefaultAttribute@704bc4d5 
[Attribute: name type value "checkbox"], org.dom4j.tree.DefaultAttribute@7e67b58b 
[Attribute: name width value ""], org.dom4j.tree.DefaultAttribute@4abff982 
[Attribute: name optional value "false"], org.dom4j.tree.DefaultAttribute@195ec25 
[Attribute: name hide value "false"]]/>]

org.dom4j.tree.DefaultElement@6a98c813 
[Element: <dynamic-element attributes: [org.dom4j.tree.DefaultAttribute@54778e11 
[Attribute: name dataType value "boolean"], org.dom4j.tree.DefaultAttribute@75102969 
[Attribute: name indexType value ""], org.dom4j.tree.DefaultAttribute@780ee889 
[Attribute: name localizable value "true"], org.dom4j.tree.DefaultAttribute@1ac4b7f3 
[Attribute: name name value "Boolean5022"], org.dom4j.tree.DefaultAttribute@6908c03f 
[Attribute: name readOnly value "false"], org.dom4j.tree.DefaultAttribute@3d859df8 
[Attribute: name repeatable value "false"], org.dom4j.tree.DefaultAttribute@f462456 
[Attribute: name repeatableMaximum value ""], org.dom4j.tree.DefaultAttribute@45fb91ef 
[Attribute: name required value "false"], org.dom4j.tree.DefaultAttribute@72a05ce 
[Attribute: name showLabel value "true"], org.dom4j.tree.DefaultAttribute@57e31b0e 
[Attribute: name type value "checkbox"], org.dom4j.tree.DefaultAttribute@7f056135 
[Attribute: name width value ""], org.dom4j.tree.DefaultAttribute@3a311fb9 
[Attribute: name optional value "false"], org.dom4j.tree.DefaultAttribute@6f19c887 
[Attribute: name hide value "false"]]/>]


(field.getRenderedValue(field.getDefaultLocale(), 0)).isEmpty()

[115501, 84102, 56716, 215501, 243501, 83002, 194901, 60102]


{scopeGroupId=20182, locale=en_US, 
layoutTypePortlet=com.liferay.portal.model.impl.LayoutTypePortletImpl@5eefb5e7, 
javax.servlet.jsp.jspPageContext=org.apache.jasper.runtime.PageContextImpl@8ec76a1, 
timeZone=sun.util.calendar.ZoneInfo[id="Pacific/Midway",offset=-39600000,dstSavings=0,
useDaylight=false,transitions=5,lastRule=null], contact={contactId=244102, companyId=20155, 
userId=20159, userName=, createDate=Tue Jun 18 02:10:40 GMT 2019, 
modifiedDate=Tue Jun 18 02:10:40 GMT 2019, classNameId=20005, classPK=244101, 
accountId=20157, parentContactId=0, emailAddress=test007@test.com, firstName=test007, middleName=, 
lastName=test, prefixId=0, suffixId=0, male=false, birthday=Sun Jan 19 00:00:00 GMT 1997, smsSn=, 
aimSn=, facebookSn=, icqSn=, jabberSn=, msnSn=, mySpaceSn=, skypeSn=, twitterSn=, ymSn=, 
employeeStatusId=, employeeNumber=, jobTitle=, jobClass=, hoursOfOperation=}, checkRequired=false, 
portletDisplay=com.liferay.portal.theme.PortletDisplay@4b8f8162, 
javax.servlet.jsp.jspOut=org.apache.jasper.runtime.JspWriterImpl@3a776faf, 
_applicantfillform_WAR_hsfpluginssharedportlet_fieldsContext={null={default-locale=en_US, 
available-locales=en_US, required=false, fieldNamespace=gjnz}, Boolean5022={repeatableMaximum=, 
repeatableLabel=, referencedField=, width=, localizable=true, children=, label=Boolean, type=checkbox, 
fieldNamespace=crnd, tip=, predefinedValue=true, indexType=, dataType=boolean, readOnly=false, 
hide=false, showLabel=true, valueIndex=0, optional=false, rule=, name=Boolean5022, repeatable=false, 
required=false}}, layout={uuid=63195b66-a6e6-4201-8d67-c32c40939440, plid=56474, groupId=20182, 
companyId=20155, userId=20610, userName=ResourceImporter, createDate=Tue Mar 07 15:49:55 GMT 2017, 
modifiedDate=Thu Feb 21 02:46:36 GMT 2019, privateLayout=false, layoutId=88, parentLayoutId=68, 
name=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US">
<Name language-id="en_US">Application</Name></root>, title=<?xml version='1.0' encoding='UTF-8'?>
<root available-locales="en_US" default-locale="en_US"><Title language-id="en_US">Application</Title>
</root>, description=, keywords=, robots=, type=portlet, 
typeSettings=column-1=applicantfillform_WAR_hsfpluginssharedportlet,
column-2=applicantfillformprogress_WAR_hsfpluginssharedportlet,
layout-template-id=hsf-plugins-private-application-layout
, hidden=true, friendlyURL=/application, iconImage=false, iconImageId=0, themeId=, 
colorSchemeId=, wapThemeId=, wapColorSchemeId=, css=, priority=17, layoutPrototypeUuid=, l
ayoutPrototypeLinkEnabled=false, sourcePrototypeLayoutUuid=},
 themeDisplay=com.liferay.portal.theme.ThemeDisplay@77456825, 
 javax.servlet.jsp.jspSession=com.liferay.portlet.PortletServletSession@6db8924f, 
 javax.servlet.jsp.jspRequest=com.liferay.portlet.PortletServletRequest@708db8cf, 
 realUser={uuid=1fea2128-7c00-4da9-96b7-ad94735dc1be, userId=244101, companyId=20155, 
 createDate=Tue Jun 18 02:10:40 GMT 2019, modifiedDate=Tue Jun 18 02:10:40 GMT 2019, 
 defaultUser=false, contactId=244102, 
 password={BCRYPT}$2a$10$G09Q.wYvxH9AIKGx5bsK0.0VsfjPRu39uDFsyLqXdO3g0T7QbOh/G, 
 passwordEncrypted=true, passwordReset=false, passwordModifiedDate=null,
  digest=5c465b5d71d68fbe28e8f0c3bcb465f6,d06a7e4a28ad5f7ddb7e43a3f3fe8127,c478b1c421ed1d57c39fa6c7c7766787, reminderQueryQuestion=, reminderQueryAnswer=, graceLoginCount=0, screenName=test007, emailAddress=test007@test.com, facebookId=0, ldapServerId=-1, openId=, portraitId=0, languageId=en_US, timeZoneId=Pacific/Midway, greeting=Welcome test007 test!, comments=, firstName=test007, middleName=, lastName=test, jobTitle=, loginDate=Tue Jun 18 05:46:04 GMT 2019, loginIP=127.0.0.1, lastLoginDate=Tue Jun 18 05:22:14 GMT 2019, lastLoginIP=127.0.0.1, lastFailedLoginDate=null, failedLoginAttempts=0, lockout=false, lockoutDate=null, agreedToTermsOfUse=true, emailAddressVerified=true, status=0}, colorScheme=com.liferay.portal.model.impl.ColorSchemeImpl@601, permissionChecker=com.liferay.portal.security.permission.AdvancedPermissionChecker@686057c3, javax.servlet.jsp.jspConfig=org.apache.catalina.core.StandardWrapperFacade@d21f8be, javax.servlet.jsp.jspResponse=com.liferay.portal.kernel.servlet.PipingServletResponse@315188ae, theme=com.liferay.portal.model.impl.ThemeImpl@18e36096, javax.servlet.jsp.jspPage=org.apache.jsp.html.taglib.ddm.html.start_jsp@5fe470cd, _applicantfillform_WAR_hsfpluginssharedportlet_fieldsCount={Boolean5022=0}, plid=56474, company={companyId=20155, accountId=20157, webId=liferay.com, key=rO0ABXNyAB9qYXZheC5jcnlwdG8uc3BlYy5TZWNyZXRLZXlTcGVjW0cLZuIwYU0CAAJMAAlhbGdvcml0aG10ABJMamF2YS9sYW5nL1N0cmluZztbAANrZXl0AAJbQnhwdAADQUVTdXIAAltCrPMX+AYIVOACAAB4cAAAABDgMMF7uvM3qfygieEebtZc, mx=liferay.com, homeURL=, logoId=0, system=false, maxUsers=0, active=true}, account={accountId=20157, companyId=20155, userId=0, userName=, createDate=Tue Mar 07 14:53:21 GMT 2017, modifiedDate=Fri Sep 07 04:42:11 GMT 2018, parentAccountId=0, name=Liferay, legalName=, legalId=, legalType=, sicCode=, tickerSymbol=, industry=, type=, size=}, javax.servlet.jsp.jspApplication=org.apache.catalina.core.ApplicationContextFacade@32d21c44, portletGroupId=20182, layouts=[{uuid=81ab32b0-1fcb-4bfd-89b1-cd1e4986f4b1, plid=55916, groupId=20182, companyId=20155, userId=20610, userName=ResourceImporter, createDate=Tue Mar 07 15:49:02 GMT 2017, modifiedDate=Tue Dec 05 05:58:21 GMT 2017, privateLayout=false, layoutId=2, parentLayoutId=0, name=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Name language-id="en_US">Scholarship</Name></root>, title=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Title language-id="en_US">Scholarship</Title></root>, description=, keywords=, robots=, type=portlet, typeSettings=column-1=program_WAR_hsfpluginssharedportlet,
column-1-customizable=false
column-2=programdetail_WAR_hsfpluginssharedportlet,
column-2-customizable=false
layout-template-id=hsf-plugins-public-scholarship-layout
layoutUpdateable=true
sitemap-changefreq=daily
sitemap-include=1
, hidden=false, friendlyURL=/scholarship, iconImage=false, iconImageId=0, themeId=hsfpluginshsfpublictheme_WAR_hsfpluginshsfpublictheme, colorSchemeId=01, wapThemeId=, wapColorSchemeId=, css=, priority=1, layoutPrototypeUuid=, layoutPrototypeLinkEnabled=false, sourcePrototypeLayoutUuid=}, {uuid=a94476b4-88dd-465c-b4bd-a35a3b168f40, plid=55924, groupId=20182, companyId=20155, userId=20610, userName=ResourceImporter, createDate=Tue Mar 07 15:49:02 GMT 2017, modifiedDate=Tue Mar 07 15:49:03 GMT 2017, privateLayout=false, layoutId=3, parentLayoutId=0, name=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Name language-id="en_US">Resources</Name></root>, title=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Title language-id="en_US">Resources</Title></root>, description=, keywords=, robots=, type=portlet, typeSettings=column-1=56_INSTANCE_iGGDegiROZ62,
layout-template-id=hsf-plugins-one-column-layout
, hidden=false, friendlyURL=/resources, iconImage=false, iconImageId=0, themeId=hsfpluginshsfpublictheme_WAR_hsfpluginshsfpublictheme, colorSchemeId=01, wapThemeId=, wapColorSchemeId=, css=, priority=2, layoutPrototypeUuid=, layoutPrototypeLinkEnabled=false, sourcePrototypeLayoutUuid=}, {uuid=19a090c9-5677-4277-a81b-8d80e0d0877e, plid=56106, groupId=20182, companyId=20155, userId=20610, userName=ResourceImporter, createDate=Tue Mar 07 15:49:21 GMT 2017, modifiedDate=Tue Mar 07 15:49:21 GMT 2017, privateLayout=false, layoutId=32, parentLayoutId=0, name=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Name language-id="en_US">Help Center</Name></root>, title=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Title language-id="en_US">Help Center</Title></root>, description=, keywords=, robots=, type=portlet, typeSettings=column-1=helpcentersearch_WAR_hsfpluginssharedportlet,
column-3=56_INSTANCE_a5X0bz0egAQ1,
layout-template-id=hsf-plugins-public-help-center-layout
, hidden=false, friendlyURL=/help-center, iconImage=false, iconImageId=0, themeId=hsfpluginshsfpublictheme_WAR_hsfpluginshsfpublictheme, colorSchemeId=01, wapThemeId=, wapColorSchemeId=, css=, priority=3, layoutPrototypeUuid=, layoutPrototypeLinkEnabled=false, sourcePrototypeLayoutUuid=}, {uuid=8bfb53d4-deab-4d4b-86b7-455a71f109fe, plid=56123, groupId=20182, companyId=20155, userId=20610, userName=ResourceImporter, createDate=Tue Mar 07 15:49:22 GMT 2017, modifiedDate=Tue Mar 07 15:49:22 GMT 2017, privateLayout=false, layoutId=34, parentLayoutId=0, name=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Name language-id="en_US">About</Name></root>, title=<?xml version='1.0' encoding='UTF-8'?><root available-locales="en_US" default-locale="en_US"><Title language-id="en_US">About</Title></root>, description=, keywords=, robots=, type=link_to_layout, typeSettings=linkToLayoutId=35
, hidden=false, friendlyURL=/about, iconImage=false, iconImageId=0, themeId=, colorSchemeId=, wapThemeId=, wapColorSchemeId=, css=, priority=4, layoutPrototypeUuid=, layoutPrototypeLinkEnabled=false, sourcePrototypeLayoutUuid=}], user={uuid=1fea2128-7c00-4da9-96b7-ad94735dc1be, userId=244101, companyId=20155, createDate=Tue Jun 18 02:10:40 GMT 2019, modifiedDate=Tue Jun 18 02:10:40 GMT 2019, defaultUser=false, contactId=244102, password={BCRYPT}$2a$10$G09Q.wYvxH9AIKGx5bsK0.0VsfjPRu39uDFsyLqXdO3g0T7QbOh/G, passwordEncrypted=true, passwordReset=false, passwordModifiedDate=null, digest=5c465b5d71d68fbe28e8f0c3bcb465f6,d06a7e4a28ad5f7ddb7e43a3f3fe8127,c478b1c421ed1d57c39fa6c7c7766787, reminderQueryQuestion=, reminderQueryAnswer=, graceLoginCount=0, screenName=test007, emailAddress=test007@test.com, facebookId=0, ldapServerId=-1, openId=, portraitId=0, languageId=en_US, timeZoneId=Pacific/Midway, greeting=Welcome test007 test!...



{Checkbox_Group6851=com.liferay.portlet.dynamicdatamapping.storage.Field@50c2fb68, 
What_is_the_highest_degree_you_intend_to_earn_in_your_lifetime_=com.liferay.portlet.dynamicdatamapping.storage.Field@31079244, 
Boolean8840=com.liferay.portlet.dynamicdatamapping.storage.Field@d2111b6, 
Radio7285=com.liferay.portlet.dynamicdatamapping.storage.Field@6813c781, 
How_did_you_hear_about_The_Gates_Scholarship_=com.liferay.portlet.dynamicdatamapping.storage.Field@6a8f1b88, 
Date8088=com.liferay.portlet.dynamicdatamapping.storage.Field@5958b45f, 
Date6345=com.liferay.portlet.dynamicdatamapping.storage.Field@4ea9f6cc, 
Language=com.liferay.portlet.dynamicdatamapping.storage.Field@7889f36c, 
Did_you_attend_pre-school_=com.liferay.portlet.dynamicdatamapping.storage.Field@28cc7547, 
Date8481=com.liferay.portlet.dynamicdatamapping.storage.Field@7279d3e, 
Language_Proficiency=com.liferay.portlet.dynamicdatamapping.storage.Field@39c4551d, 
Is_this_your_first_language_=com.liferay.portlet.dynamicdatamapping.storage.Field@8b0008c}

{Checkbox_Group6851=com.liferay.portlet.dynamicdatamapping.storage.Field@7212bf39, 
What_is_the_highest_degree_you_intend_to_earn_in_your_lifetime_=com.liferay.portlet.dynamicdatamapping.storage.Field@2cc871b1, 
Boolean8840=com.liferay.portlet.dynamicdatamapping.storage.Field@1ba0326f, 
Radio7285=com.liferay.portlet.dynamicdatamapping.storage.Field@324f2394, 
How_did_you_hear_about_The_Gates_Scholarship_=com.liferay.portlet.dynamicdatamapping.storage.Field@69a8e359, 
Date8088=com.liferay.portlet.dynamicdatamapping.storage.Field@4ee61e40, 
Date6345=com.liferay.portlet.dynamicdatamapping.storage.Field@65cc2437, 
Language=com.liferay.portlet.dynamicdatamapping.storage.Field@3d5dcb17, 
Did_you_attend_pre-school_=com.liferay.portlet.dynamicdatamapping.storage.Field@58c0727a, 
Date8481=com.liferay.portlet.dynamicdatamapping.storage.Field@429bd51b, 
Language_Proficiency=com.liferay.portlet.dynamicdatamapping.storage.Field@4c401c7, 
Is_this_your_first_language_=com.liferay.portlet.dynamicdatamapping.storage.Field@6050b242}

{Checkbox_Group6851=com.liferay.portlet.dynamicdatamapping.storage.Field@4dace312, 
What_is_the_highest_degree_you_intend_to_earn_in_your_lifetime_=com.liferay.portlet.dynamicdatamapping.storage.Field@116fda95, 
Boolean8840=com.liferay.portlet.dynamicdatamapping.storage.Field@46777524, 
Radio7285=com.liferay.portlet.dynamicdatamapping.storage.Field@4cabb2a0, 
How_did_you_hear_about_The_Gates_Scholarship_=com.liferay.portlet.dynamicdatamapping.storage.Field@1c5c4db3, 
Date8088=com.liferay.portlet.dynamicdatamapping.storage.Field@6ff13150, 
Date6345=com.liferay.portlet.dynamicdatamapping.storage.Field@43dcb49a, 
Language=com.liferay.portlet.dynamicdatamapping.storage.Field@4ed50d44, 
Did_you_attend_pre-school_=com.liferay.portlet.dynamicdatamapping.storage.Field@55a13cb, 
Date8481=com.liferay.portlet.dynamicdatamapping.storage.Field@5cc9772b, 
Language_Proficiency=com.liferay.portlet.dynamicdatamapping.storage.Field@2eaed7a4, 
Is_this_your_first_language_=com.liferay.portlet.dynamicdatamapping.storage.Field@58cf67ed}

{Checkbox_Group6851=com.liferay.portlet.dynamicdatamapping.storage.Field@5997a75f, 
What_is_the_highest_degree_you_intend_to_earn_in_your_lifetime_=com.liferay.portlet.dynamicdatamapping.storage.Field@736d7bec, 
Boolean8840=com.liferay.portlet.dynamicdatamapping.storage.Field@18e2fe28, 
Radio7285=com.liferay.portlet.dynamicdatamapping.storage.Field@5e9c00db, 
How_did_you_hear_about_The_Gates_Scholarship_=com.liferay.portlet.dynamicdatamapping.storage.Field@53fc5a63, 
Date8088=com.liferay.portlet.dynamicdatamapping.storage.Field@5c9244a8, 
Date6345=com.liferay.portlet.dynamicdatamapping.storage.Field@6d9a113, 
Language=com.liferay.portlet.dynamicdatamapping.storage.Field@39dde9e8, 
Did_you_attend_pre-school_=com.liferay.portlet.dynamicdatamapping.storage.Field@18279c06, 
Date8481=com.liferay.portlet.dynamicdatamapping.storage.Field@50745a4d, 
Language_Proficiency=com.liferay.portlet.dynamicdatamapping.storage.Field@6d49e7f, 
Is_this_your_first_language_=com.liferay.portlet.dynamicdatamapping.storage.Field@70f1a759}

{{uuid=c3cca033-f3bd-4f4e-9651-d6f6c4dc1a77, structureId=41063, groupId=20182, companyId=20155, userId=20610, 
userName=ResourceImporter, createDate=Tue Mar 07 15:36:55 GMT 2017, modifiedDate=Tue Mar 07 15:36:55 GMT 2017, 
parentStructureId=0, classNameId=20098, structureKey=ACADEMIC_HONORS, name=<?xml version='1.0' encoding='UTF-8'?>
<root available-locales="en_US" default-locale="en_US"><Name language-id="en_US">Academic_Honors</Name></root>, 
description=, xsd=<?xml version="1.0"?>

<root available-locales="en_US" default-locale="en_US"/>, 
storageType=xml, type=0}=com.liferay.portlet.dynamicdatamapping.storage.Fields@112a888e}


<#assign fieldValue = predefinedValue>
cynthia ${fieldValue}
<#assign fieldRawValue = "">
fieldName:${fieldName}
<#if fields?? && fields.get(fieldName)??>
    test001
    <#assign field = fields.get(fieldName)>
    <#assign valueIndex = getterUtil.getInteger(fieldStructure.valueIndex)>
    valueIndex:${valueIndex}
    <#if field.getRenderedValue(requestedLocale, valueIndex)?has_content>
        <#assign fieldValue = field.getRenderedValue(requestedLocale, valueIndex)>
        Test ${fieldValue}
    </#if>
    <#assign fieldRawValue = field.getValue(requestedLocale, valueIndex)!>
</#if>


fieldValue = serviceContext.getAttribute(fieldNameValue);
Serializable predefinedValue = ddmStructure.getFieldProperty(fieldNameValue, "predefinedValue");
if (fieldValue == null && !Validator.isNull(predefinedValue)) {
    fieldValue = predefinedValue;
} else if (fieldValue == null && Validator.isNull(predefinedValue)) {
    fieldValue = Boolean.FALSE.toString();
} else {
    fieldValue = serviceContext.getAttribute(fieldNameValue);
}






create table hsf_program_programinvitationemailtemplate (
	pkId bigint not null primary key,
	emailSubject TEXT null,
	emailContent TEXT null,
	createdTime DATE null,
	createdBy bigint
);

create table hsf_program_programinvitationhistory (
	pkId bigint not null primary key,
	userId bigint,
	emailAddress VARCHAR(75) null,
	programId bigint,
	emailTemplateId bigint,
	invitationStatus TEXT null,
	createdTime DATE null,
	createdBy bigint
);


create sequence hsf_programinvitation_sq;
create sequence hsf_programinvitationemail_sq;

create index IX_invitaion_emailtemplateid on hsf_program_programinvitationhistory (emailTemplateId);
create index IX_invitaion_programid on hsf_program_programinvitationhistory (programId);
create index IX_invitaion_userid on hsf_program_programinvitationhistory (userId);



explain analyze SELECT 
                invitation.userId,
                invitation.emailAddress,
                invitation.programId,
                invitation.invitationStatus,
                invitation.createdTime,
                email.emailSubject,
                email.emailContent
            FROM hsf_program_programinvitationhistory AS invitation
                INNER JOIN hsf_program_programinvitationemailtemplate AS email ON invitation.emailTemplateId = email.pkid
            WHERE
                invitation.programId = 60102





BEGIN;
  DO
  $do$
  DECLARE  
    programId BIGINT;
    userId BIGINT;
    emailAddress CHARACTER VARYING(75);
    emailSubject TEXT;
    emailTemplate TEXT;
    invitationStatus TEXT;
    createdBy BIGINT;
    createdate TIMESTAMP WITHOUT TIME ZONE;
    program_invitation_cursor CURSOR FOR 
    SELECT
        program.programId,
        history.userId,
        history.emailAddress,
        history.emailSubject,
        REPLACE(REPLACE(REPLACE(history.emailTemplate, '&amp;', '&'), '&gt;', '>') , '&lt;', '<') AS emailTemplate, 
        history.invitationStatus,
        history.createdBy,
        history.createdate
    FROM (
    SELECT 
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Program_Name'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS programName,
        ddlrecord.recordid AS programId
    FROM ddmcontent 
        INNER JOIN ddlrecord ON ddlrecord.ddmstorageid = ddmcontent.contentid
        INNER JOIN ddlrecordset ON ddlrecordset.recordsetid = ddlrecord.recordsetid
    WHERE
        ddlrecordset.recordsetid = 628497) program
    INNER JOIN   
    (SELECT
        (CASE WHEN (invitation.userId IS NULL or invitation.userId = '') THEN 0 ELSE CAST(invitation.userId AS BIGINT) END) AS userId,
        invitation.emailAddress AS emailAddress, 
        SUBSTRING(invitation.programName, 0, POSITION(' - ' IN invitation.programName)) AS programName,
        invitation.emailSubject AS emailSubject, 
        invitation.emailTemplate AS emailTemplate, 
        invitation.invitationStatus AS invitationStatus, 
        invitation.createdBy AS createdBy,
        invitation.createdate AS createdate
    FROM (
    SELECT 
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Subject'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailSubject,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Template'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailTemplate,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Address'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailAddress,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''User_Id'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS userId,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Program_Name'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS programName,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Invitation_Status'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS invitationStatus,
        ddmcontent.createdate AS createdate,
        ddmcontent.userId AS createdBy
    FROM ddmcontent 
        INNER JOIN ddlrecord ON ddlrecord.ddmstorageid = ddmcontent.contentid
        INNER JOIN ddlrecordset ON ddlrecordset.recordsetid = ddlrecord.recordsetid
    WHERE
        ddlrecordset.recordsetid = 28713457) invitation)history
    ON program.programName = history.programName;
  BEGIN
    FOR program_invitation IN program_invitation_cursor LOOP
    INSERT INTO 
        hsf_program_programinvitationemailtemplate(pkid, emailSubject,emailContent, createdtime, createdBy) 
    VALUES 
        (nextval('hsf_programinvitationemail_sq'), program_invitation.emailSubject, program_invitation.emailTemplate, program_invitation.createdate, program_invitation.createdBy);

    INSERT INTO
        hsf_program_programinvitationhistory(pkid, userId, emailAddress, emailTemplateId, programId, invitationStatus, createdtime, createdBy)
    VALUES
        (nextval('hsf_programinvitation_sq'), program_invitation.userId, program_invitation.emailAddress, currval('hsf_programinvitationemail_sq'), program_invitation.programId, program_invitation.invitationStatus, program_invitation.createdate, program_invitation.createdBy);
    RAISE NOTICE 'Insert program invitation [userid: %], [programid: %], [program_invitation_id: %] in program invitation history success.', program_invitation.userId, program_invitation.programId, currval('hsf_programinvitation_sq');
    END LOOP;
  END;
  $do$;
COMMIT;



244101

194901

114502


fieldValue = serviceContext.getAttribute(fieldNameValue);
                Serializable predefinedValue = ddmStructure.getFieldProperty(fieldNameValue, Constants.PREDEFINDE_VALUE);

                if (fieldValue == null) {
                    if (!Validator.isNull(predefinedValue)) {
                        fieldValue = predefinedValue;
                    } else {
                        fieldValue = Boolean.FALSE.toString();
                    }
                } else {
                    fieldValue = serviceContext.getAttribute(fieldNameValue);
                }


.admin-essay-evaluation-review-portlet 


CREATE FUNCTION last_pos(char, text) RETURNS INTEGER AS
$$
select length($2) - length(a.arr[array_length(a.arr,1)]) 
from (select string_to_array($2, $1) as arr) as a
$$ LANGUAGE SQL;

BEGIN;
  DO
  $do$
  DECLARE  
    programId BIGINT;
    userId BIGINT;
    emailAddress CHARACTER VARYING(75);
    emailSubject TEXT;
    emailTemplate TEXT;
    invitationStatus TEXT;
    createdBy BIGINT;
    createdate TIMESTAMP WITHOUT TIME ZONE;
    program_invitation_cursor CURSOR FOR 
    SELECT
        program.programId,
        history.userId,
        history.emailAddress,
        history.emailSubject,
        REPLACE(REPLACE(REPLACE(history.emailTemplate, '&amp;', '&'), '&gt;', '>') , '&lt;', '<') AS emailTemplate, 
        history.invitationStatus,
        history.createdBy,
        history.createdate
    FROM (
    SELECT 
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Program_Name'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS programName,
        ddlrecord.recordid AS programId
    FROM ddmcontent 
        INNER JOIN ddlrecord ON ddlrecord.ddmstorageid = ddmcontent.contentid
        INNER JOIN ddlrecordset ON ddlrecordset.recordsetid = ddlrecord.recordsetid
    WHERE
        ddlrecordset.recordsetid = 41152) program
    INNER JOIN   
    (SELECT
        (CASE WHEN (invitation.userId IS NULL or invitation.userId = '') THEN 0 ELSE CAST(invitation.userId AS BIGINT) END) AS userId,
        invitation.emailAddress AS emailAddress, 
        SUBSTRING(invitation.programName, 0, length(invitation.programName)-6) AS programName,
        invitation.emailSubject AS emailSubject, 
        invitation.emailTemplate AS emailTemplate, 
        invitation.invitationStatus AS invitationStatus, 
        invitation.createdBy AS createdBy,
        invitation.createdate AS createdate
    FROM (
    SELECT 
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Subject'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailSubject,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Template'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailTemplate,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Address'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailAddress,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''User_Id'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS userId,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Program_Name'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS programName,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Invitation_Status'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS invitationStatus,
        ddmcontent.createdate AS createdate,
        ddmcontent.userId AS createdBy
    FROM ddmcontent 
        INNER JOIN ddlrecord ON ddlrecord.ddmstorageid = ddmcontent.contentid
        INNER JOIN ddlrecordset ON ddlrecordset.recordsetid = ddlrecord.recordsetid
    WHERE
        ddlrecordset.recordsetid = 96928) invitation)history
    ON program.programName = history.programName;
  BEGIN
    FOR program_invitation IN program_invitation_cursor LOOP
    INSERT INTO 
        hsf_program_programinvitationemailtemplate(pkid, emailSubject,emailContent, createdtime, createdBy) 
    VALUES 
        (nextval('hsf_programinvitationemail_sq'), program_invitation.emailSubject, program_invitation.emailTemplate, program_invitation.createdate, program_invitation.createdBy);

    INSERT INTO
        hsf_program_programinvitationhistory(pkid, userId, emailAddress, emailTemplateId, programId, invitationStatus, createdtime, createdBy)
    VALUES
        (nextval('hsf_programinvitation_sq'), program_invitation.userId, program_invitation.emailAddress, currval('hsf_programinvitationemail_sq'), program_invitation.programId, program_invitation.invitationStatus, program_invitation.createdate, program_invitation.createdBy);
    RAISE NOTICE 'Insert program invitation [userid: %], [programid: %], [program_invitation_id: %] in program invitation history success.', program_invitation.userId, program_invitation.programId, currval('hsf_programinvitation_sq');
    END LOOP;
  END;
  $do$;
COMMIT;


BEGIN;
  DO
  $do$
  DECLARE  
    programId BIGINT;
    userId BIGINT;
    emailAddress CHARACTER VARYING(75);
    emailSubject TEXT;
    emailTemplate TEXT;
    invitationStatus TEXT;
    createdBy BIGINT;
    createdate TIMESTAMP WITHOUT TIME ZONE;
    program_invitation_cursor CURSOR FOR 
    SELECT
        (CASE WHEN (invitation.userId IS NULL or invitation.userId = '') THEN 0 ELSE CAST(invitation.userId AS BIGINT) END) AS userId,
        invitation.emailAddress AS emailAddress, 
        (CASE WHEN (invitation.programId IS NULL or invitation.programId = '') THEN 0 ELSE CAST(invitation.programId AS BIGINT) END) AS programId,
        invitation.emailSubject AS emailSubject, 
        REPLACE(REPLACE(REPLACE(invitation.emailTemplate, '&amp;', '&'), '&gt;', '>') , '&lt;', '<') AS emailTemplate, 
        invitation.invitationStatus AS invitationStatus, 
        invitation.createdBy AS createdBy,
        invitation.createdate AS createdate
    FROM (
    SELECT 
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Subject'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailSubject,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Template'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailTemplate,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Email_Address'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS emailAddress,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''User_Id'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS userId,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''programId'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS programId,
        CAST(UNNEST(xpath('//root/dynamic-element[@name=''Invitation_Status'']/dynamic-content/text()', CAST(ltrim(ddmcontent.xml,' ') AS xml))) AS TEXT) AS invitationStatus,
        ddmcontent.createdate AS createdate,
        ddmcontent.userId AS createdBy
    FROM ddmcontent
        INNER JOIN ddlrecord ON ddlrecord.ddmstorageid = ddmcontent.contentid
        INNER JOIN ddlrecordset ON ddlrecordset.recordsetid = ddlrecord.recordsetid
    WHERE
        ddlrecordset.name like '%Program_Invitation_DDL%') invitation;
  BEGIN
    FOR program_invitation IN program_invitation_cursor LOOP
    INSERT INTO 
        hsf_program_programinvitationemailtemplate(pkid, emailSubject,emailContent, createdtime, createdBy) 
    VALUES 
        (nextval('hsf_programinvitationemail_sq'), program_invitation.emailSubject, program_invitation.emailTemplate, program_invitation.createdate, program_invitation.createdBy);

    INSERT INTO
        hsf_program_programinvitationhistory(pkid, userId, emailAddress, emailTemplateId, programId, invitationStatus, createdtime, createdBy)
    VALUES
        (nextval('hsf_programinvitation_sq'), program_invitation.userId, program_invitation.emailAddress, currval('hsf_programinvitationemail_sq'), program_invitation.programId, program_invitation.invitationStatus, program_invitation.createdate, program_invitation.createdBy);
    RAISE NOTICE 'Insert program invitation [userid: %], [programid: %], [program_invitation_id: %] in program invitation history success.', program_invitation.userId, program_invitation.programId, currval('hsf_programinvitation_sq');
    END LOOP;
  END;
  $do$;
COMMIT;




                        <c:when test="${field.type == 'ddm-link'}">
                          <!-- do not display "link" for review -->
                        </c:when>

630 907 5053
remoteservice



findPrivateActivePrograms
findSchoolMaster
String field, String keywords, int start, int limit

"int", "int"



        var showDataCount;
        var totalCount = 0;
        var showInputValue = A.one('[name="${namespacedFieldName}"] .search-input').val();
        Liferay.Service(
          '${fieldStructure.remoteService}',
          {
            field: '${fieldStructure.searchColumn}',
            keywords: showInputValue,
            start: 0,
            limit: 2147483647
          },
          function(list) {
              console.log("list.length:  "+list.length);
              totalCount = list.length;
          }
        );



                showDataCount = 0;

            console.log("startParam:  "+startParam);

            console.log("length:  "+list.length);
                  console.log("showDataCount:  "+showDataCount);
                  console.log("totalCount:  "+totalCount);
                  if (showDataCount >= totalCount) {
                      return;
                  }
                  if (!list || (startParam == 10 && list.length == 0 && noResult) || !Object.prototype.toString.call(list) === '[object Array]' || totalCount == 0) {
                          liWrapper += '<li>' + Liferay.Language.get("there-are-no-results") + '</li>';
                          dataSourceUl.append(liWrapper);
                          noResult = false;
                          return;
                  }
                  showDataCount += list.length;




263121
886801
532211
324863
330306

dom._queryRoot.getElementsByClassName("phone-block")[0];
<div class=​"phone-block" id=​"yui_patched_v3_11_0_1_1561547802056_10950">​…​</div>​



for (var attributeName in attributeMap) {
                 console.log("attributeName  :" + attributeName);
                 var dom = getNearestNodeByName(showValueDiv, attributeName);
                 if (dom) {
                     console.log("dom  :" + dom);
                     dom.val(attributeMap[attributeName]);
                     if (attributeName === 'phone') {
                         var firstNum = attributeMap[attributeName].substring(0,3);
                         var secondNum = attributeMap[attributeName].substring(3,6);
                         var thirdNum = attributeMap[attributeName].substring(6,10);
                         dom.get(0)[0].val(firstNum);
                         dom.get(0)[1].val(secondNum);
                         dom.get(0)[2].val(thirdNum);
                     }
                 }
             }


                             if (name === 'phone') {
                    targetInput = target.all('input');
                }




/portal-master/portal-web/docroot/html/js/editor/ckeditor.jsp

{
				customConfig: '<%= PortalUtil.getPathContext() %>/html/js/editor/ckeditor/<%= HtmlUtil.escapeJS(ckEditorConfigFileName) %>?p_p_id=<%= HtmlUtil.escapeJS(portletId) %>&p_main_path=<%= HtmlUtil.escapeJS(mainPath) %>&colorSchemeCssClass=<%= HtmlUtil.escapeJS(themeDisplay.getColorScheme().getCssClass()) %>&contentsLanguageId=<%= HtmlUtil.escapeJS(contentsLanguageId) %>&cssClasses=<%= HtmlUtil.escapeJS(cssClasses) %>&cssPath=<%= HtmlUtil.escapeJS(themeDisplay.getPathThemeCss()) %>&doAsGroupId=<%= HtmlUtil.escapeJS(String.valueOf(doAsGroupId)) %>&doAsUserId=<%= HtmlUtil.escapeJS(doAsUserId) %>&imagesPath=<%= HtmlUtil.escapeJS(themeDisplay.getPathThemeImages()) %>&inlineEdit=<%= inlineEdit %><%= configParams %>&languageId=<%= HtmlUtil.escapeJS(LocaleUtil.toLanguageId(locale)) %>&name=<%= name %>&resizable=<%= resizable %>',
				filebrowserBrowseUrl: '<%= PortalUtil.getPathContext() %>/html/js/editor/ckeditor/editor/filemanager/browser/liferay/browser.html?Connector=<%= connectorURL %><%= fileBrowserParams %>',
				filebrowserUploadUrl: null,
				toolbar: getToolbarSet('<%= TextFormatter.format(HtmlUtil.escapeJS(toolbarSet), TextFormatter.M) %>')
			}


 if ("/html/js/editor/fckeditor/editor/filemanager/browser/liferay/browser.html".equals(request.getRequestURI())) {
                response.sendRedirect(request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort());
            }

https://www.hsf.net/html/js/editor/fckeditor/editor/filemanager/browser/liferay/browser.html
https://www.hsf.net/html/js/editor/fckeditor/editor/filemanager/connectors/test.html#
https://www.hsf.net/html/portlet/xsl_content/example.xml

8a2f42ab9133b4dac321a1e4ed68f50d234cf734

git checkout -b HSF3-8650_AutoCompleteFieldShowDuplicateProgramsInProgramInvitationPageHotFix origin/HotFix_Prod_S81_2
git cherry-pick 8a2f42ab9133b4dac321a1e4ed68f50d234cf734



k {_yuid: "yui_patched_v3_11_0_1_1561705828042_92", _node: input#_nominations_WAR_hsfpluginssharedportlet_phone_INSTANCE_rgdr_first.field.input-large.input-sho…, _stateProxy: input#_nominations_WAR_hsfpluginssharedportlet_phone_INSTANCE_rgdr_first.field.input-large.input-sho…, _plugins: {…}}
1
:
k {_yuid: "yui_patched_v3_11_0_1_1561705828042_93", _node: input#_nominations_WAR_hsfpluginssharedportlet_phone_INSTANCE_rgdr_second.field.input-large.input-sh…, _stateProxy: input#_nominations_WAR_hsfpluginssharedportlet_phone_INSTANCE_rgdr_second.field.input-large.input-sh…, _plugins: {…}}
2
:
k {_yuid: "yui_patched_v3_11_0_1_1561705828042_94", _node: input#_nominations_WAR_hsfpluginssharedportlet_phone_INSTANCE_rgdr_last.field.input-large.input-long, _stateProxy: input#_nominations_WAR_hsfpluginssharedportlet_phone_INSTANCE_rgdr_last.field.input-large.input-long, _plugins: {…}}
3
:
k {_yuid: "yui_patched_v3_11_0_1_1561705828042_95", _node: input#_nominations_WAR_hsfpluginssharedportlet_phone_INSTANCE_rgdr_extension.field.input-large.input…, _stateProxy: input#_nominations_WAR_hsfpluginssharedportlet_phone_INSTANCE_rgdr_extension.field.input-large.input…, _plugins: {…}}
4
:
k {_yuid: "yui_patched_v3_11_0_1_1561705828042_1362", _node: input#_nominations_WAR_hsfpluginssharedportlet_phone_INSTANCE_rgdr_extensionNumber.field, _stateProxy: input#_nominations_WAR_hsfpluginssharedportlet_phone_INSTANCE_rgdr_extensionNumber.field, _plugins: {…}}


var otherRadioNode = radioGroupNodes.one('input[type=radio][class*=alloy-radio-other]');
            console.log("test");
            console.log(otherRadioNode);
            if (otherRadioNode != null) {
                otherRadioNode.on('checked', function(e) {
                    console.log("cynthia: "+radioGroupNodes.one('input[type=radio][class*=alloy-radio-other]').val());
                });
            }


Is_this_your_first_language_-alloy-radio
Is_this_your_first_language__INSTANCE_onjf_-alloy-radio
ddm-radio-other-text hide

<@aui.validator name="custom" errorMessage="please-enter-a-valid-phone-number.">
                  function(value, fieldNode, ruleValue) {
                      var otherNode = AUI().one("input[type='text'][name*='${namespacedFieldName}_-alloy-radio']");
                      console.log("otherNode:  "+otherNode);
                      var other = otherNode.val().trim();
                      console.log("other:  "+other);
    
                      if (other) {
                          otherNode.setStyle('border-color', '#cccccc');
    
                          return true;
                      } else {
                          if (!other) {
                              otherNode.setStyle('border-color', '#b50303');
                          }
    
                          return false;
                      }
                  }
              </@aui.validator>



data-identity="${parentName}_${identity}"

<@aui.input id="alloy-radio-other-text" label="" name="${namespacedParentName}-alloy-radio" class="ddm-radio-other-text" type="text" value="${fieldStructureValue?trim}"?html>
                <@aui.validator name="required" errorMessage="please enter text.">
                  function(value, fieldNode, ruleValue) {
                      var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio']");
                      console.log("otherNode:  "+otherNode);
                      var other = otherNode.val().trim();
                      console.log("other:  "+other);
    
                      if (other) {
                          otherNode.setStyle('border-color', '#cccccc');
    
                          return true;
                      } else {
                          if (!other) {
                              otherNode.setStyle('border-color', '#b50303');
                          }
    
                          return false;
                      }
                  }
              </@aui.validator>
            </@aui.input>
        <#else>
            <@aui.input id="alloy-radio-other-text" label="" name="${namespacedParentName}-alloy-radio" class="ddm-radio-other-text hide" type="text">
                <@aui.validator name="required" errorMessage="please enter text.">
                  function(value, fieldNode, ruleValue) {
                      var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio']");
                      console.log("otherNode:  "+otherNode);
                      var other = otherNode.val().trim();
                      console.log("other:  "+other);
    
                      if (other) {
                          otherNode.setStyle('border-color', '#cccccc');
    
                          return true;
                      } else {
                          if (!other) {
                              otherNode.setStyle('border-color', '#b50303');
                          }
    
                          return false;
                      }
                  }
              </@aui.validator>
            </@aui.input>

            yui_patched_v3_11_0_1_1562315829296_122


<#if selectedOther>
    <input id="alloy-radio-other-text" data-identity="${parentName}_${identity}" name="${namespacedParentName}-alloy-radio" class="ddm-radio-other-text" type="text" value="${fieldStructureValue?trim}"?html />
<#else>
    <input id="alloy-radio-other-text" data-identity="${parentName}_${identity}" name="${namespacedParentName}-alloy-radio" class="ddm-radio-other-text hide" type="text" value />
</#if>

Is_this_your_first_language_
Is_this_your_first_language__INSTANCE_lfpj


<#if selectedOther>
            <@aui.input id="alloy-radio-other-text" label="" name="${namespacedParentName}-alloy-radio" cssClass=cssClass + " ddm-radio-other-text" type="text" value="${fieldStructureValue?trim}"?html>
                <@aui.validator name="custom" errorMessage="please enter text.">
                  function(value, fieldNode) {
                      var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio']");
                      otherNode.setAttribute("data-identity", "${parentName}_${identity}");
                      var other = otherNode.val().trim();
                      console.log("test");
                      AUI().one("input[type='radio'][class*='alloy-radio-other'][name*='${namespacedParentFieldName}']").val(other);

                      if (otherNode.hasClass('hide')) {
                          return true;
                      }

                      if (other) {
                          otherNode.setStyle('border-color', '#cccccc');

                          return true;
                      } else {
                          otherNode.setStyle('border-color', '#b50303');

                          return false;
                      }
                  }
              </@aui.validator>
            </@aui.input>
        <#else>
            <@aui.input id="alloy-radio-other-text" label="" name="${namespacedParentName}-alloy-radio" cssClass=cssClass + " ddm-radio-other-text hide" type="text">
                <@aui.validator name="custom" errorMessage="please enter text.">
                  function(value, fieldNode) {
                      var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio']");
                      var other = otherNode.val().trim();
                      console.log("test");
                      otherNode.setAttribute("data-identity", "${parentName}_${identity}");
                      AUI().one("input[type='radio'][class*='alloy-radio-other'][name*='${namespacedParentFieldName}']").val(other);

                      if (otherNode.hasClass('hide')) {
                          return true;
                      }

                      if (other) {
                          otherNode.setStyle('border-color', '#cccccc');

                          return true;
                      } else {
                          otherNode.setStyle('border-color', '#b50303');

                          return false;
                      }
                  }
              </@aui.validator>
            </@aui.input>
        </#if>


        var parent = radioNode.get('parentNode').get('parentNode').get('parentNode');
            var otherTextNode = parent.one("input[type='text']");

            if (radioNode.hasClass('alloy-radio-other')) {
                otherTextNode.removeClass('hide');
                radioNode.val(null);
            } else {
                parent.one('.alloy-radio-other').val(null);
                otherTextNode.addClass('hide');
                if (parent.one(".form-validator-stack")) {
                    parent.one(".form-validator-stack").addClass('hide');
                }
            }


<input id="alloy-radio-other-text" data-identity="Radio2726_ZfEVzs" name="Radio2726-alloy-radio" class="ddm-radio-other-text" type="text" value="11111111" ?html="">
<input id="alloy-radio-other-text" data-identity="Radio2726_vJJuPF" name="Radio2726-alloy-radio" class="ddm-radio-other-text" type="text" value="\\\\\\\\\\\\\\\\" ?html="">
<input id="alloy-radio-other-text" data-identity="Radio2726_BxJIY6" name="Radio2726-alloy-radio" class="ddm-radio-other-text" type="text" value="000000000000000" ?html="">

var otherTextNode = parent.one("input[type='text']");
            var otherValidator = parent.one(".form-validator-stack");

            if (radioNode.hasClass('alloy-radio-other')) {
                otherTextNode.removeClass('hide');
                if (otherValidator) {
                    otherValidator.removeClass('hide');
                }
                radioNode.val(null);
            } else {
                parent.one('.alloy-radio-other').val(null);
                otherTextNode.addClass('hide');
                if (otherValidator) {
                    otherValidator.addClass('hide');
                }
            }


Boolean5595_INSTANCE_cgea
Languages___Add_all_the_languages_you_speak__including_English_INSTANCE_wjha
Is_this_your_first_language__INSTANCE_lfpj

var otherTextNode = parent.one("input[type='text']");
            var otherValidator = parent.one(".form-validator-stack");

            if (radioNode.hasClass('alloy-radio-other')) {
                otherTextNode.removeClass('hide');
                if (otherValidator) {
                    otherValidator.removeClass('hide');
                }
                radioNode.val(null);
            } else {
                parent.one('.alloy-radio-other').val(null);
                otherTextNode.addClass('hide');
                if (otherValidator) {
                    otherValidator.addClass('hide');
                }
            }


<#if selectedOther>
          <@aui.input id="alloy-radio-other-text" data=data label="" name="${namespacedParentName}-alloy-radio" cssClass=cssClass + " ddm-radio-other-text" type="text" value="${fieldStructureValue?trim}"?html>
            <#if parentFieldStructure.required?? && (parentFieldStructure.required == "true")>
              <#if parentFieldStructure.showLabel?? && (parentFieldStructure.showLabel == "false")>
                <@aui.validator name="custom">
                  function(value, fieldNode) {
                      var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio']");
                      var other = otherNode.val().trim();
                      console.log("test");

                      if (otherNode.hasClass('hide')) {
                          return true;
                      }

                      if (other) {
                          otherNode.setStyle('border-color', '#cccccc');

                          return true;
                      } else {
                          otherNode.setStyle('border-color', '#b50303');

                          return false;
                      }
                  }
              </@aui.validator>
            <#else>
              <@aui.validator name="custom" errorMessage="please enter text.">
                  function(value, fieldNode) {
                      var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio']");
                      var other = otherNode.val().trim();
                      console.log("test");

                      if (otherNode.hasClass('hide')) {
                          return true;
                      }

                      if (other) {
                          otherNode.setStyle('border-color', '#cccccc');

                          return true;
                      } else {
                          otherNode.setStyle('border-color', '#b50303');

                          return false;
                      }
                  }
              </@aui.validator>
            </#if>
            <#else>
              <@aui.validator name="custom">
                  function(value, fieldNode) {
                      var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio']");
                      otherNode.setAttribute("data-identity", "${parentName}_${identity}");
                      var other = otherNode.val().trim();
                      return true;
                  }
              </@aui.validator>
            </#if>
          </@aui.input>
        <#else>
            <@aui.input id="alloy-radio-other-text" data=data label="" name="${namespacedParentName}-alloy-radio" cssClass=cssClass + " ddm-radio-other-text hide" type="text">
                <#if parentFieldStructure.required?? && (parentFieldStructure.required == "true")>
                    <#if parentFieldStructure.showLabel?? && (parentFieldStructure.showLabel == "false")>
                        <@aui.validator name="custom">
                          function(value, fieldNode) {
                              var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio']");
                              var other = otherNode.val().trim();
                              console.log("test");
        
                              if (otherNode.hasClass('hide')) {
                                  return true;
                              }
        
                              if (other) {
                                  otherNode.setStyle('border-color', '#cccccc');
        
                                  return true;
                              } else {
                                  otherNode.setStyle('border-color', '#b50303');
        
                                  return false;
                              }
                          }
                      </@aui.validator>
                  <#else>
                      <@aui.validator name="custom" errorMessage="please enter text.">
                          function(value, fieldNode) {
                              var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio']");
                              var other = otherNode.val().trim();
                              console.log("test");
        
                              if (otherNode.hasClass('hide')) {
                                  return true;
                              }
        
                              if (other) {
                                  otherNode.setStyle('border-color', '#cccccc');
        
                                  return true;
                              } else {
                                  otherNode.setStyle('border-color', '#b50303');
        
                                  return false;
                              }
                          }
                      </@aui.validator>
                  </#if>
                <#else>
              <@aui.validator name="custom">
                  function(value, fieldNode) {
                      var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio']");
                      otherNode.setAttribute("data-identity", "${parentName}_${identity}");
                      var other = otherNode.val().trim();
                      return true;
                  }
              </@aui.validator>
            </#if>
          </@aui.input>
        </#if>


Is_this_your_first_language__OvdhCi

Radio2868_GL7Q1G


I give HSF Technologies permission to access my scores from the College Board

I give HSF Technologies permission to access my scores from  ACT.

{Why_have_you_not_taken_SAT=com.liferay.portlet.dynamicdatamapping.storage.Field@6f738f71, 
Label11251=com.liferay.portlet.dynamicdatamapping.storage.Field@bce7ce1, 
SAT_II_Exams=com.liferay.portlet.dynamicdatamapping.storage.Field@21689dd5, 
ACT_Reading_Score=com.liferay.portlet.dynamicdatamapping.storage.Field@5b521c15, 
No_SAT_Score_Yet=com.liferay.portlet.dynamicdatamapping.storage.Field@6bb1d589, 
ACT_Mathematics_Score=com.liferay.portlet.dynamicdatamapping.storage.Field@683a4c9b, 
SATTaken=com.liferay.portlet.dynamicdatamapping.storage.Field@4b7b8992, 
g_test_scores_so_please_enter_data_accurately_=
com.liferay.portlet.dynamicdatamapping.storage.Field@1b84f6f5, 
Label10458=com.liferay.portlet.dynamicdatamapping.storage.Field@36715cf0, 
UserEmail_Hidden6=com.liferay.portlet.dynamicdatamapping.storage.Field@4c8cac7c, 
Label_Space_123=com.liferay.portlet.dynamicdatamapping.storage.Field@27902827, 
SAT_Writing=com.liferay.portlet.dynamicdatamapping.storage.Field@693c2cbb, 
Did_you_take_SAT_II_exams_=com.liferay.portlet.dynamicdatamapping.storage.Field@6d9cdef6, 
The_Gates_Scholarship_Team_will_be_verifying_test_scores_so_please_enter_data_accurately_13940=
com.liferay.portlet.dynamicdatamapping.storage.Field@55f220b2, 
Please_list_your_SAT_II_exam_scores=com.liferay.portlet.dynamicdatamapping.storage.Field@b40b233, 
Label_Space_4=com.liferay.portlet.dynamicdatamapping.storage.Field@4473380a, 
SAT_Mathematics=com.liferay.portlet.dynamicdatamapping.storage.Field@68643ba1, 
SAT_II_exam_Score=com.liferay.portlet.dynamicdatamapping.storage.Field@c86fc92, 
Add_each_of_your_SAT_II_exams_and_Scores_Taken=
com.liferay.portlet.dynamicdatamapping.storage.Field@722fdbaa, 
Label49823=com.liferay.portlet.dynamicdatamapping.storage.Field@23feb077, 
Date__13519=com.liferay.portlet.dynamicdatamapping.storage.Field@25f36717, 
ACT_Scores_-_Enter_your_highest_score_for_each_section=
com.liferay.portlet.dynamicdatamapping.storage.Field@ef52a78, 
The_Gates_Scholarship_Team_will_be_verifyin
ACT_Composite_Score=com.liferay.portlet.dynamicdatamapping.storage.Field@1b733f4, 
Label11902=com.liferay.portlet.dynamicdatamapping.storage.Field@22b3d90d, 
SAT_Plan=com.liferay.portlet.dynamicdatamapping.storage.Field@4d6ef647, 
CollegeBoardPermission=com.liferay.portlet.dynamicdatamapping.storage.Field@2fead708, 
Date14704=com.liferay.portlet.dynamicdatamapping.storage.Field@62cb66cb, 
ACTTaken=com.liferay.portlet.dynamicdatamapping.storage.Field@17c9cc19, 
Why_have_you_not_taken_the_ACT=com.liferay.portlet.dynamicdatamapping.storage.Field@41768982, 
I_plan_to_take_the_ACT__=com.liferay.portlet.dynamicdatamapping.storage.Field@4d3dd761, 
ACT_Science_Score=com.liferay.portlet.dynamicdatamapping.storage.Field@170748e5, 
Writing_Score_is_Not_Applicable=com.liferay.portlet.dynamicdatamapping.storage.Field@5f42be32, 
ACT_English_Score=com.liferay.portlet.dynamicdatamapping.storage.Field@16d4f57a, 
SAT_Verbal=com.liferay.portlet.dynamicdatamapping.storage.Field@7740284b, 
ACTScores=com.liferay.portlet.dynamicdatamapping.storage.Field@15159117, 
SAT_Scores=com.liferay.portlet.dynamicdatamapping.storage.Field@3ae887d1}



[{"hiddenAttributes":["readOnly"],
"id":"optionCollegeBoardPermission44860",
"autoGeneratedName":false,
"name":"optionCollegeBoardPermission44860",
"value":"I give HSF Technologies permission to access my scores from the College Board.",
"localizationMap":
{"en_US":
{"label":"I give HSF Technologies permission to access my scores from the College Board.*"}},
"label":"I give HSF Technologies permission to access my scores from the College Board.*",
"type":"option","fields":[]}]

[{"hiddenAttributes":["readOnly"],
"id":"optionACTReleasePermission34906",
"autoGeneratedName":false,
"name":"optionACTReleasePermission34906",
"value":"I give HSF Technologies permission to access my scores from  ACT.  ",
"localizationMap":
{"en_US":
{"label":"I give HSF Technologies permission to access my scores from ACT.*"}},
"label":"I give HSF Technologies permission to access my scores from ACT.*",
"type":"option","fields":[]}]


<#if selectedOther>
            <@aui.input id="alloy-radio-other-text" data=data label="" name="${namespacedParentName}-alloy-radio" cssClass=cssClass + " ${fieldName}_${identity} ddm-radio-other-text" type="text" value="${fieldStructureValue?trim}"?html>
                <#if parentFieldStructure.required?? && (parentFieldStructure.required == "true")>
                    <#if parentFieldStructure.showLabel?? && (parentFieldStructure.showLabel == "false")>
                        <@aui.validator name="custom">
                            function(value, fieldNode, ruleValue) {
                                var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio'][class*='${fieldName}_${identity}']");
                                var other = otherNode.val().trim();
                                console.log("test");

                                if (otherNode.hasClass('hide')) {
                                    return true;
                                }
        
                                if (other) {
                                    otherNode.setStyle('border-color', '#cccccc');
        
                                    return true;
                                } else {
                                    otherNode.setStyle('border-color', '#b50303');
        
                                    return false;
                                }
                            }
                         </@aui.validator>
                    <#else>
                <@aui.validator name="custom" errorMessage="please enter text.">
                    function(value, fieldNode, ruleValue) {
                        var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio'][class*='${fieldName}_${identity}']");
                        var other = otherNode.val().trim();
                        console.log("test");

                        if (otherNode.hasClass('hide')) {
                           return true;
                        }

                        if (other) {
                            otherNode.setStyle('border-color', '#cccccc');

                            return true;
                        } else {
                            otherNode.setStyle('border-color', '#b50303');

                            return false;
                        }
                    }
                </@aui.validator>
            </#if>
        </#if>
          </@aui.input>
        <#else>
            <@aui.input id="alloy-radio-other-text" data=data label="" name="${namespacedParentName}-alloy-radio" cssClass=cssClass + " ${fieldName}_${identity} ddm-radio-other-text hide" type="text">
                <#if parentFieldStructure.required?? && (parentFieldStructure.required == "true")>
                    <#if parentFieldStructure.showLabel?? && (parentFieldStructure.showLabel == "false")>
                        <@aui.validator name="custom">
                          function(value, fieldNode, ruleValue) {
                              var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio'][class*='${fieldName}_${identity}']");
                              var other = otherNode.val().trim();
                              console.log("test");
        
                              if (otherNode.hasClass('hide')) {
                                  return true;
                              }
        
                              if (other) {
                                  otherNode.setStyle('border-color', '#cccccc');
        
                                  return true;
                              } else {
                                  otherNode.setStyle('border-color', '#b50303');
        
                                  return false;
                              }
                          }
                      </@aui.validator>
                  <#else>
                      <@aui.validator name="custom" errorMessage="please enter text.">
                          function(value, fieldNode, ruleValue) {
                              var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio'][class*='${fieldName}_${identity}']");
                              var other = otherNode.val().trim();
                              console.log("test");
        
                              if (otherNode.hasClass('hide')) {
                                  return true;
                              }
        
                              if (other) {
                                  otherNode.setStyle('border-color', '#cccccc');
        
                                  return true;
                              } else {
                                  otherNode.setStyle('border-color', '#b50303');
        
                                  return false;
                              }
                          }
                      </@aui.validator>
                  </#if>
            </#if>
          </@aui.input>
        </#if>
        <@aui.script>
        AUI().use('event-custom', 'node', function(A) {
            A.one("input[type='text'][name*='${namespacedParentName}-alloy-radio'][class*='${fieldName}_${identity}']").on('blur', function() {
                console.log(111);
                var otherNode = AUI().one("input[type='text'][name*='${namespacedParentName}-alloy-radio'][class*='${fieldName}_${identity}']");
                var other = otherNode.val().trim();
                var parent = otherNode.get('parentNode').get('parentNode');
                parent.one("input[type='radio'][class*='alloy-radio-other']").val(other);
            });
        });
        </@aui.script>
    <#else>



var OtherRadioChecker = function(radioNode) {
            var parent = radioNode.get('parentNode').get('parentNode').get('parentNode');
            var otherTextNode = parent.one("input[type='text']");
            var otherValidator = parent.one(".form-validator-stack");

            if (radioNode.hasClass('alloy-radio-other')) {
                otherTextNode.removeClass('hide');
                if (otherValidator) {
                    otherValidator.removeClass('hide');
                }
                radioNode.val(null);
            } else {
                parent.one('.alloy-radio-other').val(null);
                otherTextNode.addClass('hide');
                if (otherValidator) {
                    otherValidator.addClass('hide');
                }
            }

            otherTextNode.val(null);
        };



String value = attribute.getValue();
                if (Validator.isNotNull(value)) {
                    jsonObject.put(attribute.getName(), value.trim());
                } else {
                    jsonObject.put(attribute.getName(), value);
                }


.mod-application .mod-content .form .formbody .radio-single-reader .btn-group .btn

font-weight: 400;
white-space: pre-wrap;

.mod-application .mod-content{
    .btn {
        display: inline-block;
        width: auto;
    }
    
    .form .form-body .radio-single-reader .btn-group .btn {
        font-weight: 400;
        white-space: pre-wrap;
    }
} 

[
{"bindingTagName": "Where_are_you_currently_enrolled_","bindingTagEvent": "change","expectedValue": "value 5","actionName": "show"}
]

/* Extends bindingRule function in AUI */
        var BindingRule = function(rules, currentDOMName, fieldType) {
            /* Validate rules is JSONArry or not */
            if (IsJson(rules) && rules.length > 0) {
                for (var i = 0; i < rules.length; i++) {
                    var rule = rules[i];
                    console.log("================================================================");
                    console.log("rule:  "+rule);
                    console.log("rule.bindingTagParentName:  "+rule.bindingTagParentName);
                    console.log("rule.bindingTagName:  "+rule.bindingTagName);

                    if (rule.bindingTagParentName == null) {
                        rule.bindingTagParentName = rule.bindingTagName;
                    }

                    if (FILL_IN_ACTION == rule.actionName) {
                        var bindingTagParentNode = A.all('[data-fieldname=' + rule.bindingTagParentName + ']');
                        var bindingTagNode = A.one('[name*=' + rule.bindingTagName + ']');
                        var currentTagNode = AUI().one('[data-identity=' + rule.currentFieldIdentity + ']');

                        if (bindingTagNode != null && currentTagNode != null) {
                            rule.bindingTagType == null ? null : rule.bindingTagType;

                            if (bindingTagParentNode != null && rule.bindingTagType == null) {

                                for (var j = 0; j < bindingTagParentNode.size(); j++) {
                                    if (A.one(bindingTagParentNode._nodes[j]).hasClass('binding-rule auto-complete')) {
                                        bindingTagNode = A.one(bindingTagParentNode._nodes[j]).all('.data-source ul');

                                        rule.bindingTagType = 'auto-complete';
                                        if (bindingTagNode.subscriberRules == null) {
                                            bindingTagNode.subscriberRules = [];
                                        }

                                        if (bindingTagParentNode.subscriberRules == null) {
                                            bindingTagParentNode.subscriberRules = [];
                                        }

                                        if (_validateRule(rule) && bindingTagNode != null) {
                                            rule.bindingTagValue = _getBindingTageNodeByBindingTagType(rule);
                                            bindingTagParentNode.subscriberRules.push(rule);
                                            _onBindingRule(bindingTagNode, rule, A.one(bindingTagParentNode._nodes[j]));
                                        }

                                        _initDefaultBehavior(rule, A.one(bindingTagParentNode._nodes[j]));
                                    }
                                }
                            }
                        }
                    } else {
                        var currentTagNode = A.one('[data-identity=' + rule.currentFieldIdentity + ']');
                        var bindingTagParentNode = null;
                        var bindingTagNode = null;
                        console.log("rule.bindingTagParentIdentity:  "+rule.bindingTagParentIdentity);
                        console.log("rule.bindingTagIdentity:  "+rule.bindingTagIdentity);

                        if (rule.bindingTagParentIdentity) {
                            bindingTagParentNode = A.one('[data-identity=' + rule.bindingTagParentIdentity + ']');
                        } else {
                            bindingTagParentNode= _getNearestBingTagNode(currentTagNode, rule.bindingTagParentName);
                        }
                        console.log("bindingTagParentNode:  "+bindingTagParentNode);

                        if (bindingTagParentNode == null) {
                            return false;
                        }

                        if (rule.bindingTagIdentity) {
                            bindingTagNode = A.one('[data-identity=' + rule.bindingTagIdentity + ']');
                        } else {
                            bindingTagNode = bindingTagParentNode.one('[name*=' + rule.bindingTagName + ']');
                        }

                        rule.bindingTagIdentity = bindingTagParentNode.getAttribute('data-identity');
                        console.log("rule.bindingTagIdentity1:  "+rule.bindingTagIdentity);

                        if (bindingTagNode != null && currentTagNode != null) {
                            rule.bindingTagType == null ? null : rule.bindingTagType;

                            if (bindingTagParentNode != null && rule.bindingTagType == null) {
                                if (bindingTagParentNode.hasClass('checkbox binding-rule')) {
                                    bindingTagNode = bindingTagParentNode.one('input[type="checkbox"][name*=' + rule.bindingTagName + ']');
                                    rule.bindingTagType = 'checkbox';
                                } else if (bindingTagParentNode.hasClass('checkbox-group binding-rule')) {
                                    bindingTagNode = bindingTagParentNode.all('input[type="checkbox"][name*=' + rule.bindingTagName + ']');
                                    rule.bindingTagType = 'checkbox-group';

                                    /* Creates a new rule for other's text */
                                    var otherTextNode = bindingTagParentNode.one('.ddm-checkbox-group-other-text');
                                    console.log("otherTextNode:  "+rule.otherTextNode);

                                    if (otherTextNode) {
                                        var newRule = new Object();
                                        newRule.currentFieldIdentity = rule.currentFieldIdentity;
                                        newRule.currentFieldName = rule.currentFieldName;
                                        newRule.bindingTagParentName = rule.bindingTagParentName;
                                        newRule.bindingTagName = rule.bindingTagName.concat('-ddm-checkbox-group');
                                        newRule.bindingTagParentIdentity = rule.bindingTagIdentity;
                                        newRule.bindingTagIdentity = otherTextNode.getAttribute('data-identity');
                                        newRule.bindingTagEvent = 'blur';
                                        newRule.expectedValue = rule.expectedValue;
                                        newRule.actionName = rule.actionName;
                                        newRule.bindingTagType = 'ddm-checkbox-group-other';

                                        rules.push(newRule);
                                    }
                                } else if (bindingTagParentNode.hasClass('radio binding-rule')) {
                                    bindingTagNode = bindingTagParentNode.all('input[type="radio"][name*=' + rule.bindingTagName + ']');
                                    rule.bindingTagType = 'radio';

                                    /* Creates a new rule for other's text */
                                    var otherTextNode = bindingTagParentNode.one('.ddm-radio-other-text');

                                    if (otherTextNode) {
                                        var newRule = new Object();
                                        newRule.bindingTagParentName = rule.bindingTagParentName;
                                        newRule.bindingTagName = rule.bindingTagName.concat('-alloy-radio');
                                        newRule.bindingTagParentIdentity = rule.bindingTagIdentity;
                                        newRule.bindingTagIdentity = otherTextNode.getAttribute('data-identity');
                                        newRule.bindingTagEvent = 'blur';
                                        newRule.expectedValue = rule.expectedValue;
                                        newRule.actionName = rule.actionName;
                                        newRule.bindingTagType = 'alloy-radio-other';

                                        rules.push(newRule);
                                    }
                                } else if (bindingTagParentNode.hasClass('radio-single binding-rule')) {
                                    bindingTagNode = bindingTagParentNode.all('.btn');
                                    rule.bindingTagType = 'radio-single';
                                } else if (bindingTagParentNode.hasClass('binding-rule auto-complete')) {
                                    bindingTagNode = bindingTagParentNode.all('.data-source ul');
                                    var options = bindingTagParentNode.all('.select-field select option');

                                    for (var k = 0; k < options._nodes.length; k++) {
                                        if (AUI().one(options._nodes[k]).val() == rule.expectedValue) {
                                            rule.expectedValue = options._nodes[k].innerHTML.replace(/\n/gm, '').trim();
                                            break;
                                        }
                                    }

                                    rule.bindingTagType = 'auto-complete';
                                }
                            } else {
                                bindingTagNode = A.one('[data-identity=' + rule.bindingTagIdentity + ']');
                            }

                            if (bindingTagNode.subscriberRules == null) {
                                bindingTagNode.subscriberRules = [];
                            }

                            if (bindingTagParentNode.subscriberRules == null) {
                                bindingTagParentNode.subscriberRules = [];
                            }

                            if (_validateRule(rule) && bindingTagNode != null) {
                                rule.bindingTagValue = _getBindingTageNodeByBindingTagType(rule);
                                bindingTagParentNode.subscriberRules.push(rule);
                                _onBindingRule(bindingTagNode, rule);
                            }

                            _initDefaultBehavior(rule);
                        }
                    }
                }
            }
        };

        var _getBindingTageNodeByBindingTagType = function(rule) {
            var result = '';
            var currentTagNode = A.one('[data-identity=' + rule.currentFieldIdentity + ']');
            var bindingTagNode = A.one('[data-identity=' + rule.bindingTagIdentity + ']');
            console.log("currentTagNode:  "+currentTagNode);
            console.log("bindingTagNode:  "+bindingTagNode);

            if (rule.bindingTagType == null) {
                if (bindingTagNode != null) {
                    result = bindingTagNode.one('[name*=' + rule.bindingTagName + ']').val();
                    console.log("result:  "+result);
                }
            } else {
                if (rule.bindingTagType === 'checkbox-group' || rule.bindingTagType === 'ddm-checkbox-group-other') {
                    bindingTagNode = bindingTagNode.all('input[type="checkbox"][name*=' + rule.bindingTagParentName + ']')
                            .filter(':checked');
                    console.log("bindingTagNode:  "+bindingTagNode);

                    if (bindingTagNode != null) {
                        bindingTagNode.each(function(item) {
                            if (item.siblings().val().toString() === rule.expectedValue) {
                                result = rule.expectedValue;
                            }
                        });
                    }
                } else if (rule.bindingTagType === 'checkbox') {
                    result = bindingTagNode.one('input[type=hidden][name*=' + rule.bindingTagName + ']').val();
                    console.log("result1:  "+result);
                } else if (rule.bindingTagType === 'auto-complete' && rule.actionName != FILL_IN_ACTION) {
                    var optionArr = A.one('[data-fieldname=' + rule.bindingTagParentName + '] .select-field select').all('option.active');
                    console.log("optionArr:  "+optionArr);

                    if (!_isEmptyNodeList(optionArr)) {
                        for (var i = 0; i < optionArr.size(); i++) {
                            var value = optionArr._nodes[i].innerHTML.trim();

                            if (value === rule.expectedValue) {
                                result = rule.expectedValue;
                                break;
                            }
                        }
                    }
                } else if (rule.bindingTagType === 'radio' || rule.bindingTagType === 'alloy-radio-other') {
                    result = bindingTagNode.all('input[type=radio][name*=' + rule.bindingTagParentName + ']')
                            .filter(':checked')
                            .val()[0];
                    console.log("result2:  "+result);
                } else if (rule.bindingTagType === 'radio-single') {
                    result = bindingTagNode.all('input[type=radio][name*=' + rule.bindingTagParentName + ']')
                            .filter(':checked')
                            .val()[0];
                    console.log("result3:  "+result);
                }
            }

            return result;
        }


var _getNearestBingTagNode = function(obj, name) {
            if (!obj || !name) {
                return;
            }

            var parent = obj.ancestor();
            console.log("parent:  "+parent);
            if (parent) {
                var bindingTagNode = parent.one('[data-fieldname=' + name + ']');
                console.log("_getNearestBingTagNode:  "+bindingTagNode);

                if (bindingTagNode) {
                    return bindingTagNode;
                } else {
                    return _getNearestBingTagNode(parent, name);
                }
            }
        }


reader-history： /hsf-plugins-shared-portlet/src/main/webapp/html/adminessayevaluationreview
aplication： /hsf-plugins-shared-portlet/src/main/webapp/html/applicationreview
mentor
mentee
counselor
interviewer
recommender 


<div class="control-group error hide message-content" data-identity="${fieldName}_${identity}" name="${namespacedFieldName}_error">
        <span class="help-inline" name="${namespacedFieldName}">Please enter only digits.</span>
    </div>
    <div class="control-group hide">
      <@aui.input type="hidden" data=data name=namespacedFieldName + "_required_validator">
        <@aui.validator name="custom" errorMessage=" ">
            function() {
                var integerValue = A.one("input[type='text'][name*='${namespacedFieldName}'][data-identity='${fieldName}_${identity}']").val().trim();
                var errorMessageDiv = A.one('[name*="${namespacedFieldName}_error"][class*="message-content"][data-identity="${fieldName}_${identity}"]');
                var errorMessageSpan = A.one("div[name*='${namespacedFieldName}_error'][data-identity='${fieldName}_${identity}'] .help-inline");

                if (!integerValue) {
                    errorMessageDiv.addClass('hide');
                    return true;
                }

                var re = /^[0-9]+$/ ;
                var isInteger = re.test(integerValue);

                if (isInteger) {
                    if ('${fieldStructure.minInteger}' && integerValue < '${fieldStructure.minInteger}') {
                        errorMessageSpan.html("Please enter a value greater than or equal to ${fieldStructure.minInteger}.");
                        errorMessageDiv.removeClass('hide');
                        return false;
                    }
                    if ('${fieldStructure.maxInteger}' && integerValue > '${fieldStructure.maxInteger}') {
                        errorMessageSpan.html("Please enter a value less than or equal to ${fieldStructure.maxInteger}.");
                        errorMessageDiv.removeClass('hide');
                        return false;
                    }
                    errorMessageDiv.addClass('hide');
                    return true;
                } else {
                    errorMessageSpan.html("Please enter only digits.");
                    errorMessageDiv.removeClass('hide');
                    return false;
                }
            }
        </@aui.validator>
      </@aui.input>
    </div>



<@aui.script>
    console.log("123...");
    AUI().use('aui-extends', 'node', function(A) {
        A.one("input[type='text'][name*='${namespacedFieldName}'][data-identity='${fieldName}_${identity}']").on('blur', function() {
            console.log("test" + "${fieldName}_${identity}");
            var validatorInput = A.one('[name*="${namespacedFieldName}_required_validator"][data-identity="${fieldName}_${identity}"]');
            if (validatorInput && validatorInput.get('form') && validatorInput.get('form').get('id')) {
                var form = validatorInput.get('form');
                var formId = form.get('id');
                Liferay.Form.get(formId).formValidator.validateField(validatorInput);
            }
        });
    });
</@aui.script>




<root available-locales="en_US" default-locale="en_US">
	<dynamic-element dataType="date" fieldNamespace="ddm" indexType="keyword" localizable="true" name="Program_End_Date" readOnly="false" repeatable="false" repeatableMaximum="" required="false" showLabel="true" type="ddm-date" width="small" placeholder="" minLength="" maxLength="" optional="false" hide="false" writeable="true">
		<meta-data locale="en_US">
			<entry name="label">
				<![CDATA[Program End Date]]>
			</entry>
			<entry name="predefinedValue">
				<![CDATA[11/01/2017]]>
			</entry>
			<entry name="tip">
				<![CDATA[]]>
			</entry>
			<entry name="repeatableLabel">
				<![CDATA[]]>
			</entry>
			<entry name="rule">
				<![CDATA[]]>
			</entry>
			<entry name="referencedField">
				<![CDATA[]]>
			</entry>
		</meta-data>
	</dynamic-element>
	<dynamic-element dataType="date" fieldNamespace="ddm" indexType="keyword" localizable="true" name="Expiration_Date" readOnly="false" repeatable="false" repeatableMaximum="" required="true" showLabel="true" type="ddm-date" width="small" placeholder="" minLength="" maxLength="" optional="false" hide="false" writeable="true">
		<meta-data locale="en_US">
			<entry name="label">
				<![CDATA[Expiration Date]]>
			</entry>
			<entry name="predefinedValue">
				<![CDATA[]]>
			</entry>
			<entry name="tip">
				<![CDATA[]]>
			</entry>
			<entry name="repeatableLabel">
				<![CDATA[]]>
			</entry>
			<entry name="rule">
				<![CDATA[]]>
			</entry>
			<entry name="referencedField">
				<![CDATA[]]>
			</entry>
		</meta-data>
	</dynamic-element>
</root>


Which_program_are_you_applying_for_

Class_Level

A document with the same program or scholarship year and class level already exists in the Documents Submitted grid.



What_scholarship_cycle_are_you_applying_for_

Class_Level

A document with the same program or scholarship year and class level already exists in the Documents Submitted grid.


<@aui.validator name="digits" errorMessage="Please enter only digits.">
            function() {
                var integerValue = A.one("input[type='text'][name*='${namespacedFieldName}']").val().trim();
                var errorMessageDiv = A.one('[name*="${namespacedFieldName}_error"][class*="message-content"][data-identity="${fieldName}_${identity}"]');
                var errorMessageSpan = A.one("div[name*='${namespacedFieldName}_error'][data-identity='${fieldName}_${identity}'] .help-inline");
                console.log(integerValue);

                if (!integerValue) {
                    errorMessageDiv.addClass('hide');
                    return true;
                }

                var re = /^[0-9]+$/ ;
                var isInteger = re.test(integerValue);

                if (isInteger) {
                    if ('${fieldStructure.minInteger}' && integerValue < '${fieldStructure.minInteger}') {
                        errorMessageSpan.html("Please enter a value greater than or equal to ${fieldStructure.minInteger}.");
                        errorMessageDiv.removeClass('hide');
                        return false;
                    }
                    if ('${fieldStructure.maxInteger}' && integerValue > '${fieldStructure.maxInteger}') {
                        errorMessageSpan.html("Please enter a value less than or equal to ${fieldStructure.maxInteger}.");
                        errorMessageDiv.removeClass('hide');
                        return false;
                    }
                    errorMessageDiv.addClass('hide');
                    return true;
                } else {
                    errorMessageSpan.html("Please enter only digits.");
                    errorMessageDiv.removeClass('hide');
                    return false;
                }
            }
        </@aui.validator>

<div class="control-group error hide message-content" data-identity="${fieldName}_${identity}" name="${namespacedFieldName}_error">
        <span class="help-inline" name="${namespacedFieldName}">Please enter only digits.</span>
    </div>



AUI().use('aui-base','aui-form-validator','liferay-form',function(A){
            var DEFAULTS_FORM_VALIDATOR = AUI.defaults.FormValidator;
 
            var phone = function(val, node, ruleValue) {
                if(node.attr('value') == node.attr('placeholder') ){
                    return false;
                }   
 
                var phoneRegExp = /^((\+)?[1-9]{1,2})?([-\s\.])?((\(\d{1,4}\))|\d{1,4})(([-\s\.])?[0-9]{1,12}){1,2}$/;
                // valid phone number match
                // 2155552527|(215) 555 2527|215.555.2527|+1 215-555-2527|+1.215.555.2527
 
                var numbers = val.split('').length;
                if (5 <= numbers && numbers <= 20 && phoneRegExp.test(val)) {
                    return true;
                }
                return false;
            }
 
            A.mix(
                DEFAULTS_FORM_VALIDATOR.RULES,
                {
                    phone    : phone
                },
                true
            );      
 
            A.mix(
                DEFAULTS_FORM_VALIDATOR.STRINGS,
                {
                    phone    : 'Please enter valid phone number'
                },
                true
            );
   });


   <#include "../init.ftl">

<#assign isMaxIntegerRequired = false>
<#assign isMinIntegerRequired = false>

<#if fieldStructure.maxInteger?? && fieldStructure.maxInteger?trim?length gt 0>
    <#assign isMaxIntegerRequired = true>
</#if>

<#if fieldStructure.minInteger?? && fieldStructure.minInteger?trim?length gt 0>
    <#assign isMinIntegerRequired = true>
</#if>

<#assign name=namespacedFieldName>

<@aui["field-wrapper"] data=data cssClass="binding-rule " + hideCssClass>
    <@aui.input cssClass=cssClass data=data dir=requestedLanguageDir helpMessage=escape(fieldStructure.tip) label=escape(label) name=namespacedFieldName type="text" value=fieldValue placeholder=escape(fieldStructure.placeholder)>
        <#if required>
            <#if label?? && label?length gt 0>
                <@aui.validator name="required" errorMessage="${label} is required." />
            <#else>
                <@aui.validator name="required" />
            </#if>
        </#if>
    </@aui.input>
    <div class="control-group error hide message-content" data-identity="${fieldName}_${identity}" name="${namespacedFieldName}_error">
        <span class="help-inline" name="${namespacedFieldName}">Please enter only digits.</span>
    </div>
    <input type="hidden" name="${namespacedFieldName}_integer_minInteger" value="${fieldStructure.minInteger}">
    <input type="hidden" name="${namespacedFieldName}_integer_maxInteger" value="${fieldStructure.maxInteger}">
    <div class="control-group hide">
      <@aui.input type="hidden" data=data name=namespacedFieldName + "_required_validator" value="cynthia">
        <@aui.validator name="custom" errorMessage="test">
            function(val, fieldNode, ruleValue) {
                var integerValue = A.one("input[type='text'][name*='${namespacedFieldName}'][data-identity='${fieldName}_${identity}']").val().trim();
                var errorMessageDiv = A.one('[name*="${namespacedFieldName}_error"][class*="message-content"][data-identity="${fieldName}_${identity}"]');
                var errorMessageSpan = A.one("div[name*='${namespacedFieldName}_error'][data-identity='${fieldName}_${identity}'] .help-inline");
                var minInteger = A.one("input[type='hidden'][name*='${namespacedFieldName}_integer_minInteger']").val().trim();
                var maxInteger = A.one("input[type='hidden'][name*='${namespacedFieldName}_integer_maxInteger']").val().trim();
                console.log(minInteger);
                console.log(maxInteger);

                if (!integerValue) {
                    errorMessageDiv.addClass('hide');
                    return true;
                }

                var re = /^\d+$/ ;
                var isInteger = re.test(integerValue);

                if (isInteger) {
                    if (maxInteger && integerValue > maxInteger) {
                        errorMessageSpan.html("Please enter a value less than or equal to ${fieldStructure.maxInteger}.");
                        errorMessageDiv.removeClass('hide');
                        return false;
                    }
                    if (minInteger && integerValue < minInteger) {
                        errorMessageSpan.html("Please enter a value greater than or equal to ${fieldStructure.minInteger}.");
                        errorMessageDiv.removeClass('hide');
                        return false;
                    }
                    errorMessageSpan.html("");
                    errorMessageDiv.addClass('hide');
                    return true;
                }
                errorMessageSpan.html("Please enter only digits.");
                errorMessageDiv.removeClass('hide');
                return false;
            }
        </@aui.validator>
      </@aui.input>
    </div>

    ${fieldStructure.children}
</@>

<@aui.script>
    AUI().use('aui-extends', 'node', function(A) {
        A.one("input[type='text'][name*='${namespacedFieldName}'][data-identity='${fieldName}_${identity}']").on('blur', function() {
            console.log("test" + "${fieldName}_${identity}");
            var validatorInput = A.one('[name*="${namespacedFieldName}_required_validator"][data-identity="${fieldName}_${identity}"]');
            if (validatorInput && validatorInput.get('form') && validatorInput.get('form').get('id')) {
                var form = validatorInput.get('form');
                var formId = form.get('id');
                Liferay.Form.get(formId).formValidator.validateField(validatorInput);
            }
        });
    });
</@aui.script>

<#include "../decorate.ftl">


    <aui:script></pre>
    <pre>         AUI().use('aui-base','aui-form-validator','liferay-form',function(A){
                var DEFAULTS_FORM_VALIDATOR = AUI.defaults.FormValidator;
    
                var defaultEmail = DEFAULTS_FORM_VALIDATOR.RULES.email;
                var defaultDigits = DEFAULTS_FORM_VALIDATOR.RULES.digits;
                var defaultRequired = DEFAULTS_FORM_VALIDATOR.RULES.required;
                var defaultMaxLength = DEFAULTS_FORM_VALIDATOR.RULES.maxLength;
    
                var email = function(val, node, ruleValue) {
                    if(node.attr('value') == node.attr('placeholder') ){
                        return true;
                    }
                    return defaultEmail(val, node, ruleValue);
                };  
    
                var digits = function(val, node, ruleValue) {
                    if(node.attr('value') == node.attr('placeholder') ){
                        return true;
                    }
                    return defaultDigits(val, node, ruleValue);
                };  
    
                var required = function(val, node, ruleValue) {
                    //alert('Val :['+val +'] Type :['+node.attr('type')+']');
                    //alert(node.attr('type') == 'hidden' && node.attr('value') == 'false');
    
                    if(node.attr('type') == 'hidden' && node.attr('value') == 'false'){
                        return false;
                    }
                    if(node.attr('value') == node.attr('placeholder') ){
                        return false;
                    }
                    return defaultRequired(val, node, ruleValue);
                };      
    
                var maxLength = function(val, node, ruleValue) {
                    if(node.attr('value') == node.attr('placeholder') ){
                        return false;
                    }
                    return defaultMaxLength(val, node, ruleValue);
                };  
    
                var phone = function(val, node, ruleValue) {
                    if(node.attr('value') == node.attr('placeholder') ){
                        return false;
                    }   
    
                    var phoneRegExp = /^((\+)?[1-9]{1,2})?([-\s\.])?((\(\d{1,4}\))|\d{1,4})(([-\s\.])?[0-9]{1,12}){1,2}$/;
                    // valid phone number match
                    // 2155552527|(215) 555 2527|215.555.2527|+1 215-555-2527|+1.215.555.2527
    
                    var numbers = val.split('').length;
                    if (5 <= numbers && numbers <= 20 && phoneRegExp.test(val)) {
                        return true;
                    }
                    return false;
                }
    
                A.mix(
                    DEFAULTS_FORM_VALIDATOR.RULES,
                    {
                        email    : email,
                        digits   : digits,
                        maxLength: maxLength,
                        required : required,
                        phone    : phone
                    },
                    true
                );      
    
                A.mix(
                    DEFAULTS_FORM_VALIDATOR.STRINGS,
                    {
                        phone    : 'Please enter valid phone number'
                    },
                    true
                );
    });

if (av.hasClass('hide')){return true;}


<#if selectedOther>
            <@aui.input id="alloy-radio-other-text" data=data label="" name="${namespacedParentName}-alloy-radio" cssClass=cssClass + " ddm-radio-other-text" type="text" value="${fieldStructureValue?trim}"?html>
                <#if parentFieldStructure.required?? && (parentFieldStructure.required == "true")>
                    <#if parentFieldStructure.showLabel?? && (parentFieldStructure.showLabel == "false")>
                        <@aui.validator name="custom" errorMessage="">
                            function(val, node, ruleValue) {
                                console.log(val);
                                if (node.hasClass('hide')) {
                                    return true;
                                }

                                if (val) {
                                  node.setStyle('border-color', '#cccccc');
        
                                  return true;
                              } else {
                                  node.setStyle('border-color', '#b50303');
        
                                  return false;
                              }
                        }
                        </@aui.validator>
                    <#else>
                        <@aui.validator name="custom" errorMessage="Other is required.">
                            function(val, node, ruleValue) {
                                console.log(val);
                                if (node.hasClass('hide')) {
                                    return true;
                                }

                                if (val) {
                                  node.setStyle('border-color', '#cccccc');
        
                                  return true;
                              } else {
                                  node.setStyle('border-color', '#b50303');
        
                                  return false;
                              }
                        }
                        </@aui.validator>
                    </#if>
                </#if>
            </@aui.input>
        <#else>
            <@aui.input id="alloy-radio-other-text" data=data label="" name="${namespacedParentName}-alloy-radio" cssClass=cssClass + " ddm-radio-other-text hide" type="text">
                <#if parentFieldStructure.required?? && (parentFieldStructure.required == "true")>
                    <#if parentFieldStructure.showLabel?? && (parentFieldStructure.showLabel == "false")>
                        <@aui.validator name="custom" errorMessage="">
                            function(val, node, ruleValue) {
                                console.log(val);
                                if (node.hasClass('hide')) {
                                    return true;
                                }

                                if (val) {
                                  node.setStyle('border-color', '#cccccc');
        
                                  return true;
                              } else {
                                  node.setStyle('border-color', '#b50303');
        
                                  return false;
                              }
                        }
                        </@aui.validator>
                    <#else>
                        <@aui.validator name="custom" errorMessage="Other is required.">
                            function(val, node, ruleValue) {
                                console.log(val);
                                if (node.hasClass('hide')) {
                                    return true;
                                }

                                if (val) {
                                  node.setStyle('border-color', '#cccccc');
        
                                  return true;
                              } else {
                                  node.setStyle('border-color', '#b50303');
        
                                  return false;
                              }
                        }
                        </@aui.validator>
                    </#if>
                </#if>
            </@aui.input>
        </#if>



<@aui.script>
    AUI().use('aui-form-validator', function(A){
        var DEFAULTS_FORM_VALIDATOR = A.config.FormValidator;
        var defaultRequired = DEFAULTS_FORM_VALIDATOR.RULES.required;

        var showOtherRequired = function(val, node, ruleValue) {
            console.log(val);
            if (node.hasClass('hide')) {
                return true;
            }

            return defaultRequired(val, node, ruleValue);
        }

        A.mix(
            DEFAULTS_FORM_VALIDATOR.RULES,
            {
                showOtherRequired: showOtherRequired
            },
            true
        );

        A.mix(
            DEFAULTS_FORM_VALIDATOR.STRINGS,
            {
                showOtherRequired: "This field is required."
            },
            true
        );
    });
</@aui.script>



<#if selectedOther>
            <@aui.input id="alloy-radio-other-text" data=data label="" name="${namespacedParentName}-${fieldName}-${identity}-alloy-radio" cssClass=cssClass + " ddm-radio-other-text" type="text" value="${fieldStructureValue?trim}"?html>
                <#if parentFieldStructure.required?? && (parentFieldStructure.required == "true")>
                    <#if parentFieldStructure.showLabel?? && (parentFieldStructure.showLabel == "false")>
                        <@aui.validator name="custom" errorMessage="">
                            function(val, node, ruleValue) {
                                console.log(val);
                                if (node.hasClass('hide') || val) {
                                  return true;
                                }
                                return false;
                            }
                        </@aui.validator>
                    <#else>
                        <@aui.validator name="custom" errorMessage="Other is required.">
                            function(val, node, ruleValue) {
                                console.log(val);
                                if (node.hasClass('hide') || val) {
                                  return true;
                                }
                                return false;
                            }
                        </@aui.validator>
                    </#if>
                </#if>
            </@aui.input>
        <#else>
            <@aui.input id="alloy-radio-other-text" data=data label="" name="${namespacedParentName}-${fieldName}-${identity}-alloy-radio" cssClass=cssClass + " ddm-radio-other-text hide" type="text">
                <#if parentFieldStructure.required?? && (parentFieldStructure.required == "true")>
                    <#if parentFieldStructure.showLabel?? && (parentFieldStructure.showLabel == "false")>
                        <@aui.validator name="custom" errorMessage="">
                            function(val, node, ruleValue) {
                                console.log(val);
                                if (node.hasClass('hide') || val) {
                                  return true;
                                }
                                return false;
                            }
                        </@aui.validator>
                    <#else>
                        <@aui.validator name="custom" errorMessage="Other is required.">
                            function(val, node, ruleValue) {
                                console.log(val);
                                if (node.hasClass('hide') || val) {
                                  return true;
                                }
                                return false;
                            }
                        </@aui.validator>
                    </#if>
                </#if>
            </@aui.input>
        </#if>



<#if selectedOther>
            <@aui.input id="alloy-radio-other-text" data=data label="" name="${namespacedParentName}-alloy-radio" cssClass=cssClass + " ddm-radio-other-text" type="text" value="${fieldStructureValue?trim}"?html>
                <#if parentFieldStructure.required?? && (parentFieldStructure.required == "true")>
                    <#if parentFieldStructure.showLabel?? && (parentFieldStructure.showLabel == "false")>
                        <@aui.validator name="showOtherRequired" />
                    <#else>
                        <@aui.validator name="showOtherRequired" errorMessage="Other is required." />
                    </#if>
                </#if>
            </@aui.input>
        <#else>
            <@aui.input id="alloy-radio-other-text" data=data label="" name="${namespacedParentName}-alloy-radio" cssClass=cssClass + " ddm-radio-other-text hide" type="text">
                <#if parentFieldStructure.required?? && (parentFieldStructure.required == "true")>
                    <#if parentFieldStructure.showLabel?? && (parentFieldStructure.showLabel == "false")>
                        <@aui.validator name="showOtherRequired" />
                    <#else>
                        <@aui.validator name="showOtherRequired" errorMessage="Other is required." />
                    </#if>
                </#if>
            </@aui.input>
        </#if>


Start_Time：
[{"Time_Timezone":"America/Los_Angeles","Time_Time":"1559349300000"}, 
{"Time_Timezone":"America/Los_Angeles","Time_Time":"1559373360000"}, 
{"Time_Timezone":"Asia/Shanghai","Time_Time":"1561939200000"}, 
{"Time_Timezone":"Asia/Shanghai","Time_Time":"1561940940000"}]

[{"Time_Timezone":"America/Los_Angeles","Time_Time":"1559349300000"}, 
{"Time_Timezone":"America/Los_Angeles","Time_Time":"1559373360000"}, 
{"Time_Timezone":"Asia/Shanghai","Time_Time":"1561939200000"}, 
{"Time_Timezone":"Asia/Shanghai","Time_Time":"1561940940000"}]


End_Time：
[{"Time_Timezone":"America/Los_Angeles","Time_Time":"1593563700000"}, 
{"Time_Timezone":"Asia/Shanghai","Time_Time":"1564588800000"}, 
{"Time_Timezone":"Asia/Shanghai","Time_Time":"1564531200000"}, 
{"Time_Timezone":"Asia/Shanghai","Time_Time":"1564532940000"}]

Reader_Application_Start_Time：
[{"Time_Timezone":"America/Los_Angeles","Time_Time":""}]

Reader_Application_END_Time：
[{"Time_Timezone":"America/Los_Angeles","Time_Time":""}]

Reader_Certification_Start_Time：
[{"Time_Timezone":"America/Los_Angeles","Time_Time":""}]

Reader_Certification_End_Time：
[{"Time_Timezone":"America/Los_Angeles","Time_Time":""}]

FieldConstants.getSerializable


Boolean isSelected = GetterUtil.getBoolean(stageStatusMap.get(Constants.STAGE_STATUS_SELECTED));
 && !isSelected


create schema log_etl;
create sequence if not exists log_etl.job_detail_sequence ;

create sequence if not exists log_etl.etl_job_sequence ;
CREATE TABLE if not exists log_etl.etl_job( pkid bigint NOT NULL DEFAULT nextval('log_etl.etl_job_sequence'::regclass),  start_time timestamp without time zone,  end_time timestamp without time zone, status text,rpt_db_name text, schema_name text, script_name text, CONSTRAINT etl_main_pkey PRIMARY KEY (pkid));

CREATE TABLE if not exists log_etl.job_detail( pkid bigint NOT NULL DEFAULT nextval('log_etl.job_detail_sequence'::regclass), etlid bigint, dump_start_time timestamp without time zone, dump_end_time timestamp without time zone, dump_status text, insert_start_time timestamp without time zone, insert_end_time timestamp without time zone, insert_status text, CONSTRAINT etl_detail_pkey PRIMARY KEY (pkid), CONSTRAINT etl_detail_fk FOREIGN KEY (etlid) REFERENCES log_etl.etl_job (pkid) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION);

insert into log_etl.etl_job(pkid) values (1);




dataSourceSelection
41431


SELECT    m.structureid,    cast(unnest(xpath('/root/Name/text()', cast(ltrim(m.name,' ') as xml))) as text) as structurename,    m.xsd structurecontent FROM ddlrecordset s INNER JOIN ddmstructure m ON m.structureid = s.ddmstructureid WHERE s.name like '%>Application_Profile_Page1_DDL</Name>%'


SELECT    count(recordid) 
FROM (       
    SELECT userid,               
    cast( unnest( xpath('/stages/stage[@stageId=4]/forms/form[@structureId=41073]/@recordId', cast(request.stageData as xml)) ) as text ) as recordid        
    FROM hsf_program_programrequest request        
    WHERE request.programid = 56716        
    AND length(request.stageData) > 0      ) p 



SELECT    count(recordid) 
FROM (       
    SELECT userid,               
    cast( unnest( xpath('/stages/stage[@stageId=4]/forms/form[@structureId=41073]/@recordId', cast(request.stageData as xml)) ) as text ) as recordid        
    FROM hsf_program_programrequest request        
    WHERE request.programid = 56716        
    AND length(request.stageData) > 0      ) p 



 args = new String[20];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "hsf3";
        args[3] = "test_etl";
        args[4] = "127.0.0.1";
        args[5] = "etl";
        args[6] = "log_etl";
        args[7] = "postgres";
        args[8] = "postgres";
        args[9] = "3";
        args[10] = "2";
        args[11] = "56716";
        args[12] = "true";
        args[13] = "4";
        args[14] = "''";
        args[15] = "0";
        args[16] = "''";
        args[17] = "''";
        args[18] = "etl";
        args[19] = "Application_Profile_Page1_DDL";


args = new String[20];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "hsf3";
        args[3] = "test_profile";
        args[4] = "127.0.0.1";
        args[5] = "etl";
        args[6] = "log_etl";
        args[7] = "postgres";
        args[8] = "postgres";
        args[9] = "3";
        args[10] = "3";
        args[11] = "''";
        args[12] = "true";
        args[13] = "''";
        args[14] = "''";
        args[15] = "0";
        args[16] = "''";
        args[17] = "''";
        args[18] = "profile";
        args[19] = "Application_Profile_Page1_DDL";

select 
    r.userid, 
    xml recordcontent, 
    r.recordid 
from ddlrecord r 
inner join ddlrecordset s 
on s.recordsetid = r.recordsetid 
inner join ddmcontent d 
on d.contentid = r.ddmstorageid 
where s.ddmstructureid = 41078;

long structureId = Long.parseLong(dataSourceSelection);
                                                CsvFileDump csvFileDump = new CsvFileDumpImpl();
                                                Set<Long> userIdSubSet = csvFileDump.dumpDataSourceCsv(conn, dumpDir, structureId, StringUtil.replaceSpecialCharacterToUnderLine(formatterRecordSetName));










Configuration:
        Add Start Time and End Time in program stage.
Code Logic: 
        Add Start Time and End Time in program stage. First of all, get start date or end date value, then get start time or end time value. if start time or end time value is not null, then use start time or end time value. if start time or end time value is null, then use start date or end date value. then transfer the time to PDT time.
Influence:
        applicant-dashboard: stage remaining days.
        recommender-dashboard: remaining days.
        reader-dashboard: remaining days.
        counselor-dashboard: remaining days.
        document-bank: judge program is available.





Map<String, List<Map<String, String>>> elementNodeMap = getElementNodeMap(conn, structureName, dumpDir, element, columnsMap);
                Set<String> elementMapListSet = elementNodeMap.keySet();
                for (String elementMap : elementMapListSet) {
//                    System.out.println("***********************************************************");
//                    System.out.println(elementMap);
                    List<Map<String, String>> elementMapList = elementNodeMap.get(elementMap);
//                    System.out.println(elementMapList);
//                    System.out.println("***********************************************************");
                    for (Map<String, String> map : elementMapList) {
                        Set<String> elementSet = map.keySet();
                        for (String attribute : elementSet) {
                            if (Constants.ATTRIBUTE_DATASOURCE_SELECTION.equals(attribute)) {
                                System.out.println("--------------------------------------------------------------------");
                                System.out.println(attribute);
                                System.out.println(map.get(attribute));
                                System.out.println("--------------------------------------------------------------------");
                            }
                        }
                    }




args = new String[21];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "hsf3";
        args[3] = "test18";
        args[4] = "127.0.0.1";
        args[5] = "etl";
        args[6] = "log_etl";
        args[7] = "postgres";
        args[8] = "postgres";
        args[9] = "3";
        args[10] = "18";
        args[11] = "56716";
        args[12] = "true";
        args[13] = "4";
        args[14] = "''";
        args[15] = "0";
        args[16] = "''";
        args[17] = "''";
        args[18] = "etl";
        args[19] = "Application_Profile_Page1_DDL";
        args[20] = "Test_Boolean_Predefined_Value_Again_DDL";
        //args[20] = "Application_Family_Page1_DDL";




        args = new String[8];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "etl";
        args[3] = "test18";
        args[4] = "postgres";
        args[5] = "postgres";
        args[6] = "18";
        args[7] = "log_etl";



        args = new String[23];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "hsf3";
        args[3] = "test20";
        args[4] = "127.0.0.1";
        args[5] = "etl";
        args[6] = "log_etl";
        args[7] = "postgres";
        args[8] = "postgres";
        args[9] = "3";
        args[10] = "20";
        args[11] = "56716";
        args[12] = "true";
        args[13] = "4";
        args[14] = "''";
        args[15] = "0";
        args[16] = "''";
        args[17] = "''";
        args[18] = "etl";
        args[19] = "Application_Profile_Page1_DDL";
        args[20] = "Test_Boolean_Predefined_Value_Again_DDL";
        args[21] = "Application_Family_Page1_DDL";
        args[22] = "Application_My_Education_DDL";


        args = new String[8];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "etl";
        args[3] = "test20";
        args[4] = "postgres";
        args[5] = "postgres";
        args[6] = "20";
        args[7] = "log_etl";

Fri Mar 23 07:00:00 GMT 2018

Tue Aug 06 07:00:00 GMT 2019
Tue Aug 06 02:08:07 GMT 2019

11*8-4+1
85
167-85
82

Wed Jul 01 07:00:00 GMT 2020

Atlantic/Azores
UTC


Wed Jul 01 00:00:00 GMT 2020



    public static final String TIME_ZONE_UTC = "UTC";

                    Date startDate = (Date) stageTree.getValue(locale);
                Calendar startCalendar = Calendar.getInstance();
                startCalendar.setTime(startDate);
                stage.setStartDate(getPDTTime(Constants.TIME_ZONE_UTC, startCalendar.getTimeInMillis()));


stage.setEndDate(getPDTTime(Constants.TIME_ZONE_UTC, calendar.getTimeInMillis()));

remainingTime[3] = smallDate.getMaximum(Calendar.HOUR_OF_DAY) + 1 - smallDateHour + bigDateHour;






select * from hsf_profile_roleprofile where roleid=20695;
select roleid from role_ where name = 'Student';
select * from hsf_profile_profiledefinition where profileid = 1;

select
    structureid
from
    hsf_profile_profiledefinition
where
    profileid in (
        select 
            p.profileid
        from 
            hsf_profile_roleprofile p
        inner join
            role_ r on r.roleid = p.roleid
        where
            r.name = 'Student'
    )



SELECT m.structureid, cast(unnest(xpath('/root/Name/text()', cast(ltrim(m.name,' ') as xml))) as text) as structurename, m.xsd structurecontent, cast(unnest(xpath('/root/Name/text()', cast(ltrim(s.name,' ') as xml))) as text) as recordsetname FROM ddlrecordset s INNER JOIN ddmstructure m ON m.structureid = s.ddmstructureid WHERE m.structureid IN ( SELECT structureid FROM hsf_profile_profiledefinition WHERE profileid IN ( SELECT p.profileid FROM hsf_profile_roleprofile p INNER JOIN role_ r on r.roleid = p.roleid WHERE r.name = 'Student' ) );



/home/user/Documents/etl/test/etl/testProfile21/structure/MyTGS_Profile_Address/Phone_DDL/MyTGS_Profile_Address/Phone_DDL.csv


select cast(unnest(xpath('/root/Name/text()', cast(ltrim(rs.name,' ') as xml))) as text) as name, r.recordid, c.* from ddmcontent c inner join ddlrecord r on c.contentid = r.ddmstorageid inner join ddlrecordset rs on r.recordsetid = rs.recordsetid where c.userid=56728;

select cast(unnest(xpath('/root/Name/text()', cast(ltrim(m.name,' ') as xml))) as text) as structurename, cast(unnest(xpath('/root/Name/text()', cast(ltrim(rs.name,' ') as xml))) as text) as name, r.recordid, c.xml from ddmcontent c inner join ddlrecord r on c.contentid = r.ddmstorageid inner join ddlrecordset rs on r.recordsetid = rs.recordsetid inner join ddmstructure m on rs.ddmstructureid = m.structureid where c.userid=20199 and m.structureid=41043;



select r.userid, xml recordcontent, 
r.recordid from ddlrecord r inner join ddlrecordset s on s.recordsetid = r.recordsetid 
inner join ddmcontent d on d.contentid = r.ddmstorageid 
where s.ddmstructureid = 41043 
and r.userid in (
SELECT ur.userid
FROM role_ role
inner join users_roles ur on ur.roleid = role.roleid
WHERE role.name = 'Student'
);



/*args = new String[23];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "hsf3";
        args[3] = "testStudent37";
        args[4] = "127.0.0.1";
        args[5] = "etl";
        args[6] = "log_etl";
        args[7] = "postgres";
        args[8] = "postgres";
        args[9] = "3";
        args[10] = "37";
        args[11] = "''";
        args[12] = "''";
        args[13] = "''";
        args[14] = "''";
        args[15] = "0";
        args[16] = "''";
        args[17] = "''";
        args[18] = "etl";
        args[19] = "etl_role_etl_Student";*/
        args = new String[23];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "hsf3";
        args[3] = "test38";
        args[4] = "127.0.0.1";
        args[5] = "etl";
        args[6] = "log_etl";
        args[7] = "postgres";
        args[8] = "postgres";
        args[9] = "3";
        args[10] = "38";
        args[11] = "56716";
        args[12] = "true";
        args[13] = "4";
        args[14] = "''";
        args[15] = "0";
        args[16] = "''";
        args[17] = "''";
        args[18] = "etl";
        args[19] = "Application_Profile_Page1_DDL";
        args[20] = "Test_Boolean_Predefined_Value_Again_DDL";
        args[21] = "Application_Family_Page1_DDL";
        args[22] = "Application_My_Education_DDL";





        args = new String[8];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "etl";
        args[3] = "test38";
        args[4] = "postgres";
        args[5] = "postgres";
        args[6] = "38";
        args[7] = "log_etl";





,
                    getPropertyModel: function() {
                        var instance = this;
                        var model = originalFormBuilderTextFieldGetPropertyModel.call(instance);
                        var needHiddenIndex = 0;
                        model.forEach(function(item, index) {
                            if (item.attributeName == "width") {
                                needHiddenIndex = index;
                            }
                        })
                        model.splice(needHiddenIndex, 1);
                        return model;
                    }


 + " input-xxlarge"


 <%
                                    Calendar calendar = CalendarFactoryUtil.getCalendar(TimeZone.getTimeZone("Asia/Shanghai"));
                                    %>
                                    <p><%=calendar.get(Calendar.AM_PM) %></p>
                                    <p><%=calendar.get(Calendar.HOUR_OF_DAY) %></p>
                                    <p><%=calendar.get(Calendar.MINUTE) %></p>
                                    <liferay-ui:input-time 
                                        amPmParam="ampm"
                                        amPmValue="<%=calendar.get(Calendar.AM_PM) %>"
                                        dateParam="endDate"
                                        dateValue="<%=dueDate %>"
                                        hourParam="endHour"
                                        hourValue="<%=calendar.get(Calendar.HOUR)%>"
                                        minuteParam="endMinute"
                                        minuteValue="<%=calendar.get(Calendar.MINUTE) %>"
                                    />



>
        <@aui.validator errorMessage="please-enter-a-valid-date" name="custom">
            function(val, node, ruleValue) {
                console.log(val);
                if (val) {
                    return AUI().use('aui-datatype-date-parse').Parsers.date('<%= mask %>', val);
                }
            }
        </@aui.validator>

5230
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Date5230_INSTANCE_heoj"


------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Date5230_INSTANCE_heojDay"

26
------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Date5230_INSTANCE_heojMonth"

7
------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Date5230_INSTANCE_heojYear"

2019
------WebKitFormBoundarylyTK0AB4b0d5yimU


6439
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Time6439_INSTANCE_qbuw_time_date"


------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Time6439_INSTANCE_qbuwDay"

7
------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Time6439_INSTANCE_qbuwMonth"

7
------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Time6439_INSTANCE_qbuwYear"

2019
------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Time6439_INSTANCE_qbuw_time_time"


------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Time6439_INSTANCE_qbuwHour"

11
------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Time6439_INSTANCE_qbuwMinute"

55
------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Time6439_INSTANCE_qbuwAmPm"

1
------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Time6439_INSTANCE_qbuwDate"

Wed Aug 14 2019 23:55:06 GMT+0800 (CST)
------WebKitFormBoundarylyTK0AB4b0d5yimU
Content-Disposition: form-data; name="_applicantfillform_WAR_hsfpluginssharedportlet_Time6439_INSTANCE_qbuw_time_timezone"

America/Los_Angeles







<@aui.script>
AUI().use('event-custom', 'node', function(A) {
    AUI().one("input[type='text'][name*='Time7618_INSTANCE_azcz_time_time']").attr("placeholder", "hh:mm AM/PM")
    if (${nullable?string('true','false')}) {
        AUI().one("input[type='text'][name*='${namespacedFieldName}_time_time']").val("");
    }
});
</@aui.script>



41033
41043
41063
41065
41066
41093
41094
41095
41096
41097
41099
114502
131802
137203
137602
137802
137902
138002
138102
305302
305697
448102



HSF3-9132_RefineRequiredAttributeAndRepeatableAttributeOfTimeField


    public static final int SECONDS_OF_HOUR = 60;

<@aui.script>
AUI().use('event-custom', 'node', 'node-event-simulate', function(A) {
    A.one(document).on('click', function(event) {
        var timeDateNode = AUI().one("input[type='text'][name*='${namespacedFieldName}_time_date']");
        var timeTimeNode = AUI().one("input[type='text'][name*='${namespacedFieldName}_time_time']");
        var timeTimezoneNode = AUI().one("select[name*='${namespacedFieldName}_time_timezone']");
    
        var date = timeDateNode.val().trim();
        var time = timeTimeNode.val().trim();
        var timezone = timeTimezoneNode.val().trim();
        var requiredNode = AUI().one("input[type='hidden'][name*='${namespacedFieldName}'][class*='required_validator']");
        console.log("requiredNode"+requiredNode);
        if (requiredNode) {
            requiredNode.val(date + "#" + time + "#" +timezone);
        }
        if (date && time && timezone) {
            timeDateNode.setStyle('border-color', '#488f06');
            timeTimeNode.setStyle('border-color', '#488f06');
            timeTimezoneNode.setStyle('border-color', '#488f06');
            timeDateNode.setStyle('color', '#488f06');
            timeTimeNode.setStyle('color', '#488f06');
            timeTimezoneNode.setStyle('color', '#488f06');
        } else {
            if (!date) {
                timeDateNode.setStyle('border-color', '#b50303');
                timeDateNode.setStyle('color', '#b50303');
            } else {
                timeDateNode.setStyle('border-color', '#488f06');
                timeDateNode.setStyle('color', '#488f06');
            }

            if (!time) {
                timeTimeNode.setStyle('border-color', '#b50303');
                timeTimeNode.setStyle('color', '#b50303');
            } else {
                timeTimeNode.setStyle('border-color', '#488f06');
                timeTimeNode.setStyle('color', '#488f06');
            }

            if (!timezone) {
                timeTimezoneNode.setStyle('border-color', '#b50303');
                timeTimezoneNode.setStyle('color', '#b50303');
            } else {
                timeTimezoneNode.setStyle('border-color', '#488f06');
                timeTimezoneNode.setStyle('color', '#488f06');
            }
        }
    });
});

AUI().use('aui-form-validator', function(A){
        var DEFAULTS_FORM_VALIDATOR = A.config.FormValidator;

        var timeRequired = function(val, node, ruleValue) {
            var timeValue = val.split("#");
            var date = timeValue[0];
            var time = timeValue[1];
            var timezone = timeValue[2];
            if (date && time && timezone) {
                return true;
            } else {
                return false;
            }
        }

        A.mix(
            DEFAULTS_FORM_VALIDATOR.RULES,
            {
                timeRequired: timeRequired
            },
            true
        );

        A.mix(
            DEFAULTS_FORM_VALIDATOR.STRINGS,
            {
                timeRequired: "Time is required."
            },
            true
        );
   });
</@aui.script>





var timeDateNode = AUI().one("input[type='text'][name*='${namespacedFieldName}_time_date']");
                var timeTimeNode = AUI().one("input[type='text'][name*='${namespacedFieldName}_time_time']");
                var timeTimezoneNode = AUI().one("select[name*='${namespacedFieldName}_time_timezone']");

                var date = timeDateNode.val().trim();
                var time = timeTimeNode.val().trim();
                var timezone = timeTimezoneNode.val().trim();

                if (date && time && timezone) {
                    timeDateNode.setStyle('border-color', '#488f06');
                    timeTimeNode.setStyle('border-color', '#488f06');
                    timeTimezoneNode.setStyle('border-color', '#488f06');
                    timeDateNode.setStyle('color', '#488f06');
                    timeTimeNode.setStyle('color', '#488f06');
                    timeTimezoneNode.setStyle('color', '#488f06');
  
                    return true;
                } else {
                    if (!date) {
                        timeDateNode.setStyle('border-color', '#b50303');
                        timeDateNode.setStyle('color', '#b50303');
                    } else {
                        timeDateNode.setStyle('border-color', '#488f06');
                        timeDateNode.setStyle('color', '#488f06');
                    }

                    if (!time) {
                        timeTimeNode.setStyle('border-color', '#b50303');
                        timeTimeNode.setStyle('color', '#b50303');
                    } else {
                        timeTimeNode.setStyle('border-color', '#488f06');
                        timeTimeNode.setStyle('color', '#488f06');
                    }

                    if (!timezone) {
                        timeTimezoneNode.setStyle('border-color', '#b50303');
                        timeTimezoneNode.setStyle('color', '#b50303');
                    } else {
                        timeTimezoneNode.setStyle('border-color', '#488f06');
                        timeTimezoneNode.setStyle('color', '#488f06');
                    }

                    return false;
                }


node.siblings().one(".control-group").html();

var timeDateNode = node.siblings("div.time_field_date").get(0)[0].one("input[type='text'][name*='_time_date']");
            var timeTimeNode = node.siblings("div.time_field_time").get(0)[0].one("input[type='text'][name*='_time_time']");
            var timeTimezoneNode = node.siblings("div.time_field_timezone").get(0)[0].one("select[name*='_time_timezone']");


最后
<#include "../init.ftl">

<#if required>
    <#if fieldStructure.showLabel?? && (fieldStructure.showLabel == "true")>
      <#assign errorLabel = label>
    <#else>
      <#assign errorLabel = "This field">
    </#if>
    <#assign label = label + " (" + languageUtil.get(requestedLocale, "required") + ")">
</#if>

<#assign DATE = staticUtil["java.util.Calendar"].DATE>
<#assign MONTH = staticUtil["java.util.Calendar"].MONTH>
<#assign YEAR = staticUtil["java.util.Calendar"].YEAR>
<#assign HOUR = staticUtil["java.util.Calendar"].HOUR>
<#assign MINUTE = staticUtil["java.util.Calendar"].MINUTE>
<#assign AM_PM = staticUtil["java.util.Calendar"].AM_PM>
<#assign currentTimezoneID = "America/Los_Angeles">
<#assign nullable = false>

<#if fields?? && fields.get(fieldName)??>
  <#if fieldRawValue??>
    <#if fieldRawValue?trim?length gt 0>
      <#assign timeCompleteValue = fieldRawValue?eval >
      <#if timeCompleteValue.Time_Time?? >
        <#assign timeValue = timeCompleteValue.Time_Time >
      </#if>

      <#if timeCompleteValue.Time_Timezone?? >
        <#assign currentTimezoneID = timeCompleteValue.Time_Timezone >
      </#if>
    </#if>
  </#if>
</#if>

<#assign timezoneValue = staticUtil["java.util.TimeZone"].getTimeZone(currentTimezoneID)>

<#if timeValue?? && timeValue?trim?length gt 0>
    <#assign timeString = timeValue?number?number_to_datetime?string["MM/dd/yyyy HH:mm"]>

    <#assign month = timeString?substring(0, 2)>
    <#assign day = timeString?substring(3, 5)>
    <#assign year = timeString?substring(6, 10)>
    <#assign hour = timeString?substring(11, 13)>
    <#assign minute = timeString?substring(14, 16)>

    <#assign fieldValue = calendarFactory.getCalendar(year?number, month?number-1, day?number, hour?number, minute?number, 0, 0, timezoneValue)>

<#else>
    <#assign fieldValue = calendarFactory.getCalendar(timezoneValue)>

    <#assign nullable = true>
</#if>

<#assign dayValue = paramUtil.getInteger(request, "${namespacedFieldName}Day", fieldValue.get(DATE)) >
<#assign monthValue = paramUtil.getInteger(request, "${namespacedFieldName}Month", fieldValue.get(MONTH)) >
<#assign yearValue = paramUtil.getInteger(request, "${namespacedFieldName}Year", fieldValue.get(YEAR)) >
<#assign hourValue = paramUtil.getInteger(request, "${namespacedFieldName}Hour", fieldValue.get(HOUR)) >
<#assign minuteValue = paramUtil.getInteger(request, "${namespacedFieldName}Minute", fieldValue.get(MINUTE)) >
<#assign ampmValue = paramUtil.getInteger(request, "${namespacedFieldName}AmPm", fieldValue.get(AM_PM)) >

<@aui["field-wrapper"] data=data helpMessage=escape(fieldStructure.tip) label=escape(label) name=namespacedFieldName cssClass=hideCssClass + " binding-rule time-field">
    <div class="time-field-date">
        <@liferay_ui["input-date"]
            cssClass=cssClass
            dayParam="${namespacedFieldName}Day"
            dayValue=dayValue
            disabled=false
            monthParam="${namespacedFieldName}Month"
            monthValue=monthValue
            name="${namespacedFieldName}_time_date"
            nullable=nullable
            yearParam="${namespacedFieldName}Year"
            yearValue=yearValue
        />
    </div>

    <div class="control-group time-field-time">
        <@liferay_ui["input-time"]
            amPmParam="${namespacedFieldName}AmPm"
            amPmValue=ampmValue
            cssClass=cssClass
            dateParam="${namespacedFieldName}Date"
            dateValue=dateValue
            disabled=false
            hourParam="${namespacedFieldName}Hour"
            hourValue=hourValue
            name="${namespacedFieldName}_time_time"
            nullable=nullable
            minuteParam="${namespacedFieldName}Minute"
            minuteValue=minuteValue
        />
    </div>

    <div class="time-field-timezone">
        <@liferay_ui["input-time-zone"]
            cssClass=cssClass + " input-xxlarge"
            disabled=false
            name="${namespacedFieldName}_time_timezone"
            nullable=nullable
            value=currentTimezoneID
        />
    </div>

    <#if required>
        <@aui.input cssClass=cssClass + " required-validator" dir=requestedLanguageDir name=namespacedFieldName type="hidden" value="##America/Los_Angeles">
          <@aui.validator name="timeRequired" errorMessage="${errorLabel} is required." />
        </@aui.input>
    </#if>
    ${fieldStructure.children}
</@>

<@aui.script>
AUI().use('event-custom', 'node', 'node-event-simulate', function(A) {
    assignTimeValue();

    A.one("input[type='text'][name*='${namespacedFieldName}_time_date']").on(['blur', 'change'], function(event) {
        assignTimeValue();
    });

    A.one("input[type='text'][name*='${namespacedFieldName}_time_time']").on(['blur', 'change'], function(event) {
        assignTimeValue();
    });

    A.one("select[name*='${namespacedFieldName}_time_timezone']").on(['blur', 'change'], function(event) {
        assignTimeValue();
    });

    function assignTimeValue() {
        var timeDateNode = AUI().one("input[type='text'][name*='${namespacedFieldName}_time_date']");
        var timeTimeNode = AUI().one("input[type='text'][name*='${namespacedFieldName}_time_time']");
        var timeTimezoneNode = AUI().one("select[name*='${namespacedFieldName}_time_timezone']");

        if (timeDateNode && timeTimeNode && timeTimezoneNode) {
            var date = timeDateNode.val().trim();
            var time = timeTimeNode.val().trim();
            var timezone = timeTimezoneNode.val().trim();

            var requiredNode = AUI().one("input[type='hidden'][name*='${namespacedFieldName}'][class*='required-validator']");
            if (requiredNode) {
                requiredNode.val(date + "#" + time + "#" +timezone);
            }
        }
    }
});

AUI().use('aui-form-validator', function(A){
        var DEFAULTS_FORM_VALIDATOR = A.config.FormValidator;

        var timeRequired = function(val, node, ruleValue) {
            var timeDateNode = node.siblings("div.time-field-date").get(0)[0].one("input[type='text'][name*='_time_date']");
            var timeTimeNode = node.siblings("div.time-field-time").get(0)[0].one("input[type='text'][name*='_time_time']");
            var timeTimezoneNode = node.siblings("div.time-field-timezone").get(0)[0].one("select[name*='_time_timezone']");
            if (val) {
                var timeValue = val.split("#");
                var date = timeValue[0];
                var time = timeValue[1];
                var timezone = timeValue[2];
    
                if (date && time && timezone) {
                    timeDateNode.setStyle('border-color', '#488f06');
                    timeDateNode.setStyle('color', '#488f06');
                    timeTimeNode.setStyle('border-color', '#488f06');
                    timeTimeNode.setStyle('color', '#488f06');
                    timeTimezoneNode.setStyle('border-color', '#488f06');
                    timeTimezoneNode.setStyle('color', '#488f06');
                    return true;
                } else {
                    if (!date) {
                        timeDateNode.setStyle('border-color', '#b50303');
                        timeDateNode.setStyle('color', '#b50303');
                    } else {
                        timeDateNode.setStyle('border-color', '#488f06');
                        timeDateNode.setStyle('color', '#488f06');
                    }

                    if (!time) {
                        timeTimeNode.setStyle('border-color', '#b50303');
                        timeTimeNode.setStyle('color', '#b50303');
                    } else {
                        timeTimeNode.setStyle('border-color', '#488f06');
                        timeTimeNode.setStyle('color', '#488f06');
                    }

                    if (!timezone) {
                        timeTimezoneNode.setStyle('border-color', '#b50303');
                        timeTimezoneNode.setStyle('color', '#b50303');
                    } else {
                        timeTimezoneNode.setStyle('border-color', '#488f06');
                        timeTimezoneNode.setStyle('color', '#488f06');
                    }
                    return false;
                }
            }
            return false;
        }

        A.mix(
            DEFAULTS_FORM_VALIDATOR.RULES,
            {
                timeRequired: timeRequired
            },
            true
        );

        A.mix(
            DEFAULTS_FORM_VALIDATOR.STRINGS,
            {
                timeRequired: "This field is required."
            },
            true
        );
   });
</@aui.script>

<#include "../decorate.ftl">




var needHiddenIndexs = new Array();

                        model.forEach(function(item, index) {
                            if (item.attributeName == "width" || item.attributeName == "referencedField") {
                                needHiddenIndexs.push(index);
                            }
                        })

                        for (var i = 0; i < needHiddenIndexs.length; i++){
                            model.splice(needHiddenIndexs[i], 1);
                        }



 Date nowDate = ProgramUtil.getCurrentPDTDate();
            int remainingDays = programService.getReadRemainingDays(programId);
            Map<String, Integer> remainingTime =


HSF3-1273_ShowScrollBarOfAutoCompleteSearchField

{_profile_WAR_hsfpluginssharedportlet_Checkbox_Group2872_INSTANCE_cnffCheckbox: {…}, _profile_WAR_hsfpluginssharedportlet_Radio2425_INSTANCE_pkmy-alloy-other-option: {…}, _profile_WAR_hsfpluginssharedportlet_Radio2425_INSTANCE_pkmy: {…}, _profile_WAR_hsfpluginssharedportlet_Checkbox_Group2872_INSTANCE_cnff-alloy-other-option: {…}, _profile_WAR_hsfpluginssharedportlet_Radio2425_INSTANCE_zvjp-alloy-other-option: {…}, …}
_profile_WAR_hsfpluginssharedportlet_Checkbox_Group2872_INSTANCE_cnff-alloy-other-option
:
{custom_pyfz: true, custom: true}
_profile_WAR_hsfpluginssharedportlet_Checkbox_Group2872_INSTANCE_cnffCheckbox
:
{required: true}
_profile_WAR_hsfpluginssharedportlet_Radio2425_INSTANCE_pkmy
:
{required: true}
_profile_WAR_hsfpluginssharedportlet_Radio2425_INSTANCE_pkmy-alloy-other-option
:
{custom_dtnp: true, custom: true}
_profile_WAR_hsfpluginssharedportlet_Radio2425_INSTANCE_zvjp-alloy-other-option
:
{custom_akpi: true, custom: true}
_profile_WAR_hsfpluginssharedportlet_Radio2425_INSTANCE_zyuh
:
{required: true}
_profile_WAR_hsfpluginssharedportlet_Radio2425_INSTANCE_zyuh-alloy-other-option
:
{custom_dtnp: true, custom: true}
__proto__
:
Object

checkbox





    AUI().use('event-custom', 'node', 'node-event-simulate', function(A) {
        console.log("cynthia");
        var checkboxOtherInputNode = A.one("input[type='text'][id*='ddm-checkbox-group-other-text'][name*='${namespacedParentFieldName}-alloy-other-option']");
        if (checkboxOtherInputNode && checkboxOtherInputNode.hasClass("hide")) {
            console.log("test");
            var checkboxOtherParentNode = checkboxOtherInputNode.get('parentNode');
            console.log(checkboxOtherParentNode);
            if (checkboxOtherParentNode) {
                checkboxOtherParentNode.addClass("hide");
            }
        }
    });


[ {"bindingTagName": "Where_are_you_currently_enrolled_","bindingTagEvent": "change","expectedValue": "value 5","actionName": "show"} ]

[ {"bindingTagName":"Text3117","bindingTagEvent":"input","expectedValue":"test","actionName": "show"} ]

[ {"bindingTagName":"Radio2425","bindingTagEvent":"change","expectedValue":"test","actionName": "show"} ]

[ {"bindingTagName":"Checkbox_Group2872","bindingTagEvent":"change","expectedValue":"test","actionName": "show"} ]

[ {"bindingTagName":"Checkbox_Group2979","bindingTagEvent":"change","expectedValue":"test","actionName": "show"} ]
[ {"bindingTagName":"Checkbox_Group2979","bindingTagEvent":"change","expectedValue":"value 1","actionName": "show"} ]


[ {"bindingTagName":"Radio9614","bindingTagEvent":"change","expectedValue":"test","actionName": "show"} ]
[ {"bindingTagName":"Radio9614","bindingTagEvent":"change","expectedValue":"value 1","actionName": "show"} ]


var instance = e.currentTarget;
                
var rule = instance.get("Rules");
var fieldName = e.currentTarget.getAttribute("name");

    console.log("test1");

        instance.apply(instance, [rule, fieldName]);
    


e.currentTarget._node.validity.valid;


var formId = e.currentTarget.get("form").get("id");
var validator = Liferay.Form.get(formId).formValidator;
validator.validateField( e.currentTarget.get("id"));



net.hsf3.plugin.actionprocessor.FieldRelationTableUserInformationProcessor


referencedField：
{"modelLabel":"read and write","modelValue":"3","fieldSourceName":"user","fieldSourceId":"user","fieldName":"firstName"}

referencedFieldObj：
{"fieldSourceId":"user","fieldSourceName":"user","modelLabel":"read and write","modelValue":"3","fieldName":"firstName"}

selfFieldRelation：
{pkId=630, globalId=user-emailAddress, fieldSource=41537, fieldName=First_Name, type=recordset, processor=net.hsf3.plugin.actionprocessor.FieldRelationRecordSetProcessor, mode=3}

fieldRelationList：
[{pkId=639, globalId=user-emailAddress, fieldSource=user, fieldName=emailAddress, type=table, processor=net.hsf3.plugin.actionprocessor.FieldRelationTableUserProcessor, mode=3}]

fieldRelation:
{pkId=639, globalId=user-emailAddress, fieldSource=user, fieldName=emailAddress, type=table, processor=net.hsf3.plugin.actionprocessor.FieldRelationTableUserProcessor, mode=3}


var foot = current.parentElement.parentElement.nextElementSibling.nextElementSibling.lastElementChild;
if (foot.style.cssText) {

}

select distinct r.recordid as recordId,
               r.modifieddate as modifiedDate
        from
            hsf_interviewer_interviewerinvitation i
            inner join hsf_interviewer_interviewerapplyrequest req
                on req.invitationid = i.pkid
                and i.userid = 525814
            inner join hsf_interviewer_interviewerapplyrecord rec on rec.applyrequestid = req.pkid
            inner join ddlrecord r on r.recordid = rec.recordid
            inner join ddlrecordset rs on rs.recordsetid = r.recordsetid
            inner join ddmstructure s on s.structureid = rs.ddmstructureid
                and s.structureid = 127655
            order by r.modifieddate asc


Program program = programService.getProgram(programId);
        Date endDate = ProgramUtil.getStageEndDate(program, Constants.RECOMMENDATIONS_STAGE_ID);
        Date currentDate = ProgramUtil.getCurrentPDTDate();
        if (endDate != null && currentDate != null) {
            Long endTime = endDate.getTime();
            Long currentTime = currentDate.getTime();
            if (currentTime > endTime) {
                result = Boolean.TRUE;
            }
        } else {
            result = Boolean.TRUE;
        }




56716, 60102
{
    60102={isMustHasWaitlistedStatus=false, mustPassedstageIds=[4], isMustHasSelectedStatus=true}, 
    56716={isMustHasWaitlistedStatus=false, mustPassedstageIds=[4], isMustHasSelectedStatus=true}, 
    115501={isMustHasWaitlistedStatus=false, mustPassedstageIds=[4], isMustHasSelectedStatus=false}, 
    488501={isMustHasWaitlistedStatus=false, mustPassedstageIds=[4], isMustHasSelectedStatus=false}
}

<#if required>
        <@aui.input name=namespacedFieldName type="hidden">
          <@aui.validator name="custom" errorMessage=" ">
                function(value, fieldNode) {
                    console.log("test");
                    var arr = fieldNode.siblings("div");
                    arr.each(function(node) {
                        console.log("node");
                        var radio = node.one("input[type='radio']");
                        if (radio) {
                            var checked = radio.attr("checked");
                            if (checked) {
                                fieldNode.siblings("div[class*='radio-required-validator']").addClass("hide");
                                return true;
                            }
                        }
                    });
                    fieldNode.siblings("div[class*='radio-required-validator']").get(0)[0].removeClass("hide");
                    return false;
                }
              </@aui.validator>
        </@aui.input>
        <div class="form-validator-stack help-inline hide radio-required-validator">
            <div role="alert">${errorLabel} is required.</div>
        </div>
    </#if>

    var arr = fieldNode.siblings("div");
    var a = false;
                    arr.each(function(node) {
                        console.log("node");
                        var radio = node.one("input[type='radio']");
                        if (radio) {
                            var checked = radio.attr("checked");
                            if (checked) {
                                fieldNode.siblings("div[class*='radio-required-validator']").addClass("hide");
                                a =  true;
                            }
                        }
                    });
    console.log(a);

    <div class="hide radio-required-validator" style="color:#b50303"> is required.</div>



{uuid=8d4bd1dd-c664-4174-a1bd-4c0f6ee1cd42, 
recordId=551355, 
groupId=20182, 
companyId=20155, 
userId=192008, 
userName=app13 test, 
versionUserId=192008, 
versionUserName=app13 test, 
createDate=Mon Sep 16 01:15:47 GMT 2019, 
modifiedDate=Mon Sep 16 01:46:10 GMT 2019, 
DDMStorageId=551356, 
recordSetId=90326, 
version=1.0, 
displayIndex=0}

{pkId=54, 
createdTime=Mon Sep 16 01:15:47 GMT 2019, 
documentType=Transcript, 
userId=192008, 
programId=56716, 
fileEntryId=551345, 
uploadTime=Mon Sep 16 01:15:47 GMT 2019, 
metaDataRecordId=551355, 
titleDisplay=13b58PIC7wt_1024.jpg, 
uploadedDateDisplay=09/15/2019, 
status=Uploaded, 
statusByUserId=192008, 
modifyTime=Mon Sep 16 01:57:00 GMT 2019, 
term=N/A}

{pkId=54, 
createdTime=Mon Sep 16 01:15:47 GMT 2019, 
documentType=Transcript, 
userId=192008, 
programId=56716, 
fileEntryId=551345, 
uploadTime=Mon Sep 16 01:15:47 GMT 2019, 
metaDataRecordId=551355, 
titleDisplay=13b58PIC7wt_1024.jpg, 
uploadedDateDisplay=09/15/2019, 
status=Uploaded, 
statusByUserId=192008, 
modifyTime=Mon Sep 16 02:07:27 GMT 2019, 
term=N/A}


{uuid=299d294d-2202-4ed8-834a-5078e6d76e29, 
recordId=90403, 
groupId=20182, 
companyId=20155, 
userId=20199, 
userName=Test Test, 
versionUserId=20199,
versionUserName=Test Test, 
createDate=Fri Sep 15 07:11:11 GMT 2017, 
modifiedDate=Fri Sep 15 07:11:11 GMT 2017, 
DDMStorageId=90404, 
recordSetId=90204,
version=1.0, displayIndex=0
}

SELECT COUNT(documentBank) FROM DocumentBank documentBank WHERE documentBank.userId = ?

<c:out value="${reviewHistoryString.key }" />  ${structureClassId }  ${ddmStructureId } ${reviewHistoryString.value }
                <liferay-ddm:html-field classNameId="${structureClassId }" classPK="${ddmStructureId }" field="${reviewHistoryString.value }"></liferay-ddm:html-field>

{Test Test:  9/16/2019=com.liferay.portlet.dynamicdatamapping.storage.Field@1d4b0591}
{Test Test:  9/16/2019=com.liferay.portlet.dynamicdatamapping.storage.Field@4d795d8b}



#document-review-container #content-footer ul .comment-admin-document-bank {
    width: 510px;
}

private void editDocument(ResourceRequest request, ResourceResponse response) throws IOException {
        String returnMessage = Constants.EDIT_FAILED_MESSAGE;
        DocumentBank documentBank = null;
        Fields uploadFields = null;
        Boolean updateDocumentFaild = Boolean.FALSE;

        try {
            String documentType = ParamUtil.getString(request, Constants.DOCUMENT_TYPE);
            Long pkId = ParamUtil.getLong(request, Constants.PK_ID, 0L);
            DocumentBank document = DocumentBankLocalServiceUtil.getDocumentBank(pkId);

            if (DocumentBankUtil.isDocumentStatusEditable(pkId) && DocumentBankUtil.isDocumentEditable(document)) {
                ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY);
                Long userId = themeDisplay.getUserId();
                Long groupId = themeDisplay.getSiteGroupId();

                UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(request);
                ServiceContext serviceContext = null;
                try {
                    serviceContext = ServiceContextFactory.getInstance(DDLRecord.class.getName(),
                            uploadPortletRequest);
                } catch (PortalException | SystemException e) {
                    LOG.error("Gets document bank upload serviceContext failed", e);
                }

                try {
                    uploadFields = getUploadFields(documentType, uploadPortletRequest, serviceContext);
                    Field uplodaField = uploadFields.get(Constants.FIELD_NAME_DOCUMENT_BANK_FILE_UPLOAD);
                    DLFileEntry fileEntry = DDLRecordAndFieldUtil.getUploadFieldFileEntry(uplodaField);
                    System.out.println(fileEntry.getPrimaryKey());
                    if (document.getFileEntryId() != fileEntry.getPrimaryKey()) {
                        updateDocumentFaild = Boolean.TRUE;
                    }

                } catch (PortalException | SystemException | PortletException e) {
                    LOG.error("Gets document bank upload fields failed.", e);
                }

                Boolean isValidateFailed = validateSpecifyField(documentType, uploadFields);
                if (isValidateFailed) {
                    returnMessage = Constants.UPLOAD_FAILED_MESSAGE_WITH_ILLEGAL_VALUE;
                    return;
                }

                returnMessage = validateFieldByDocumentType(documentType, request, serviceContext);
                if (!StringPool.BLANK.equals(returnMessage)) {
                    return;
                } else {
                    returnMessage = Constants.UPLOAD_FAILED_MESSAGE;
                }

                Long programId = net.hsf3.plugin.program.constants.Constants.INVALID_PROGRAM_ID;

                boolean hasStandardDocumentFields = DocumentBankUtil.hasStandardDocumentFields(documentType);

                // Gets document mapping programId from upload params.
                boolean uploadMappingProgramIdValid = Boolean.TRUE;
                if (hasStandardDocumentFields) {
                    try {
                        programId = getProgramId(uploadFields);
                    } catch (PortalException | SystemException | PortletException e) {
                        uploadMappingProgramIdValid = Boolean.FALSE;
                        LOG.error("Gets document upload mapping programId failed", e);
                    }
                }

                String titleDisplay = null;
                try {
                    titleDisplay = getTitleDisplay(request);
                } catch (PortletException e) {
                    LOG.error("Gets document upload file name failed", e);
                }

                if (Validator.isNotNull(documentType) && Validator.isNotNull(titleDisplay) && uploadMappingProgramIdValid) {
                    try {
                        documentBank = DocumentBankLocalServiceUtil.editDocument(pkId, documentType, programId, uploadFields,
                                userId, serviceContext);
                    } catch (PortalException | SystemException | PortletException e) {
                        LOG.error(String.format("Add document bank failed, documentType[%s], groupId[%s], programId[%s],"
                                + " titleDisplay[%s], userId[%s].", documentType, groupId, programId, titleDisplay, userId), e);
                    }
                }

                if (documentBank != null) {
                    returnMessage = Constants.EDIT_SUCCESS_MESSAGE;
                }
            } else {
                returnMessage = Constants.DOCUMENT_STATUS_NOT_REPLACEABLE_MESSAGE;
                if (!DocumentBankUtil.isDocumentEditable(document)) {
                    returnMessage = Constants.NOT_SUPPORT_EDIT;
                }
            }
        } catch (Exception e) {
            LOG.error("Update document in document bank failed.", e);
        } finally {
            if (null == documentBank && updateDocumentFaild) {
                removeUploadFailedFileEntry(uploadFields);
            }

            PrintWriter printWriter = response.getWriter();
            printWriter.write(returnMessage);
            printWriter.close();
        }
    }




args = new String[23];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "hsf3";
        args[3] = "testSql3";
        args[4] = "127.0.0.1";
        args[5] = "etl";
        args[6] = "log_etl";
        args[7] = "postgres";
        args[8] = "postgres";
        args[9] = "3";
        args[10] = "45";
        args[11] = "56716";
        args[12] = "false";
        args[13] = "6";
        args[14] = "''";
        args[15] = "0";
        args[16] = "Evaluations";
        args[17] = "''";
        args[18] = "etl";
        args[19] = "Reader_Evaluation_Quiz_Form_1_DDL";
        args[20] = "Reader_Evaluation_Cumulative_Questions_DDL";
        args[21] = "Reader_Evaluation_Flag_DDL";
        args[22] = "Reader_Evaluation_Highlight_DDL";


args = new String[20];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "hsf3";
        args[3] = "testSql2";
        args[4] = "127.0.0.1";
        args[5] = "etl";
        args[6] = "log_etl";
        args[7] = "postgres";
        args[8] = "postgres";
        args[9] = "3";
        args[10] = "44";
        args[11] = "56716";
        args[12] = "true";
        args[13] = "4";
        args[14] = "''";
        args[15] = "0";
        args[16] = "''";
        args[17] = "''";
        args[18] = "etl";
        args[19] = "Application_Profile_Page1_DDL";


args = new String[23];
        args[0] = "/home/user/Documents/etl/test";
        args[1] = "127.0.0.1";
        args[2] = "hsf3";
        args[3] = "testSqlNormalReader";
        args[4] = "127.0.0.1";
        args[5] = "etl";
        args[6] = "log_etl";
        args[7] = "postgres";
        args[8] = "postgres";
        args[9] = "3";
        args[10] = "46";
        args[11] = "56716";
        args[12] = "false";
        args[13] = "6";
        args[14] = "''";
        args[15] = "0";
        args[16] = "Evaluations";
        args[17] = "''";
        args[18] = "etl";
        args[19] = "Reader_Evaluation_Quiz_Form_1_DDL";
        args[20] = "Reader_Evaluation_Cumulative_Questions_DDL";
        args[21] = "Reader_Evaluation_Flag_DDL";
        args[22] = "Reader_Evaluation_Highlight_DDL";


task_for_test_recordid.sh


[{"bindingTagName": "Checkbox_Group2425","bindingTagEvent": "change","expectedValue": "value 1","actionName": "show"}]

[{"bindingTagName": "Checkbox_Group2425","bindingTagEvent": "change","expectedValue": "value 2","actionName": "show"}]

[{"bindingTagName": "Checkbox_Group2425","bindingTagEvent": "click","expectedValue": "value 1","actionName": "show"}]

[{"bindingTagName": "Checkbox_Group2425","bindingTagEvent": "click","expectedValue": "value 2","actionName": "show"}]

Bug HSF3-9243 #comment Fix required validator error message of repeatable Time field


[{"bindingTagName": "Radio_Single3669","bindingTagEvent": "click","expectedValue": "value 1","actionName": "show"}]

[{"bindingTagName": "Radio_Single3669","bindingTagEvent": "click","expectedValue": "value 2","actionName": "show"}]


[{"bindingTagName": "Radio4615","bindingTagEvent": "change","expectedValue": "value 1","actionName": "show"}]

[{"bindingTagName": "Radio4615","bindingTagEvent": "change","expectedValue": "value 2","actionName": "show"}]

"Radio_Single3669_INSTANCE_ebic is not defined"



<meta http-equiv="Expires" content="0">
<meta http-equiv="Pragma" content="no-cache">
<meta http-equiv="Cache-control" content="no-cache">
<meta http-equiv="Cache" content="no-cache">


var expectedValue = G.expectedValue;
console.log(expectedValue);
var expectedOption = C.one('input[type=radio][name*=' + G.bindingTagParentName + '][value=' + expectedValue + ']');
var expectedLiHtml = expectedOption.get('parentNode').get('parentNode').next().html;
var isSelected = C.all("input[type=button][value=" + expectedLiHtml + "]").hasClass("active");
if (isSelected) {
    A = expectedValue;
    console.log(A);
}


if (this.updateData.length === 0) {
      this.updateData.push(array);
} else {
    let isRepeat = false;
    for (let i = 0; i < this.updateData.length; i++) {
        if (this.updateData[i][0] === array[0] && this.updateData[i][1] === array[1]) {
            this.updateData[i][0] = array[0];
            this.updateData[i][1] = array[1];
            this.updateData[i][2] = array[2];
            isRepeat = true;
        }
    }
    if (!isRepeat) {
        this.updateData.push(array);
    }
}

